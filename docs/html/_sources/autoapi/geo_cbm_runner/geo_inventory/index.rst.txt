:py:mod:`geo_cbm_runner.geo_inventory`
======================================

.. py:module:: geo_cbm_runner.geo_inventory

.. autoapi-nested-parse::

   Geo Inventory Module
   ====================
   This module manages and processes forest inventory data for Carbon Budget Modeling (CBM) simulations at the catchment level,
   including handling of legacy forest data and afforestation projects.
   This class is essential for creating accurate and scenario-specific inventory structures that feed into CBM simulations,
   enabling detailed analysis of forest carbon dynamics over time.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   geo_cbm_runner.geo_inventory.Inventory




.. py:class:: Inventory(calibration_year, config_path, scenario_data, afforestation_data)


   Manages and processes forest inventory data for Carbon Budget Modeling (CBM) simulations at the catchment level,
   including handling of legacy forest data and afforestation projects. This class is essential
   for creating accurate and scenario-specific inventory structures that feed into CBM simulations,
   enabling detailed analysis of forest carbon dynamics over time.

   .. attribute:: loader_class

      Utilized for loading external data resources, such as forest age structures.

      :type: Loader

   .. attribute:: data_manager_class

      Manages data retrieval and configuration, ensuring scenario-specific data is accurately utilized.

      :type: DataManager

   .. attribute:: afforestation_data

      Contains detailed information on afforestation events, crucial for scenario-based inventory adjustments.

      :type: dict

   .. attribute:: age_df

      A DataFrame detailing forest age structures, pivotal for inventory creation and analysis.

      :type: DataFrame

   .. attribute:: baseline_forest_classifiers

      Holds classifier information for the baseline (legacy) forest scenario, guiding baseline inventory creation.

      :type: dict

   .. attribute:: scenario_forest_classifiers

      Contains classifier information for various simulation scenarios, enabling dynamic inventory structuring.

      :type: dict

   .. attribute:: legacy_year

      Specifies the calibration year, serving as a reference point for analyzing legacy forest data.

      :type: int

   .. attribute:: soils_dict

      A comprehensive dictionary mapping soil types, aiding in the categorization of forest data by soil characteristics.

      :type: dict

   .. attribute:: yield_baseline_dict

      Maps yield classes to their baseline proportions, essential for calculating legacy forest inventory.

      :type: dict

   .. method:: legacy_forest_inventory()

      
      Retrieves and structures legacy forest inventory data, providing a foundation for baseline scenario simulations.
      

   .. method:: make_inventory_structure(scenario, path, ID="False", delay=0, UNFCCCLC=2)

      
      Constructs the inventory data structure for a given scenario, incorporating essential parameters like ID flags, delay years, and land class codes.
      

   .. method:: fill_baseline_inventory(scenario, inventory_df, forest_type, species, soil, yield_class, ageID)

      
      Populates the baseline inventory DataFrame with data specific to legacy forests, accounting for forest type, species, soil composition, yield class, and age.
      

   .. method:: inventory_iterator(scenario, inventory_df)

      
      Iterates over the inventory DataFrame, filling it with relevant data for each combination of forest type, species, soil, yield class, and age, tailored to the scenario.
      

   .. method:: afforestation_inventory(scenario, inventory_df)

      
      Generates inventory data for afforestation activities within a given scenario, ensuring afforested areas are accurately represented in the simulation.
      

   .. method:: scenario_afforestation_dict(scenario_afforestation_areas)

      
      Creates a dictionary mapping species and yield classes to afforestation areas, based on scenario-specific afforestation data.
      

   .. method:: combined_mineral_afforestation_dict(scenario_afforestation_areas)

      
      Merges afforestation data for mineral soils with legacy afforestation data, providing a comprehensive view of new forest growth.
      

   .. method:: legacy_afforestation()

      
      Processes legacy afforestation data, integrating historical afforestation activities into the inventory.
      

   .. method:: legacy_afforestation_annual()

      
      Structures annual legacy afforestation data, breaking down historical afforestation by year for detailed analysis.
      

   .. method:: afforestation_annual_dict(afforestation_df)

      
      Transforms annual afforestation data into a dictionary format, facilitating easy access and manipulation within simulations.
      

   .. py:method:: legacy_forest_inventory()


   .. py:method:: make_inventory_structure(scenario, path, ID='False', delay=0, UNFCCCLC=2)

      Creates an inventory structure based on the given scenario and parameters.

      :param scenario: The scenario for which the inventory is being created.
      :type scenario: str
      :param path: The path where the inventory will be saved.
      :type path: str
      :param ID: Fills the UsingID column, defaults to False.
      :type ID: str, optional
      :param delay: The delay in years for the inventory. Defaults to 0.
      :type delay: int, optional
      :param UNFCCCLC: The UNFCCC land class code for the inventory. Defaults to 2.
      :type UNFCCCLC: int, optional

      :returns: The inventory structure as a DataFrame.
      :rtype: pandas.DataFrame


   .. py:method:: fill_baseline_inventory(scenario, inventory_df, forest_type, species, soil, yield_class, ageID)

      Fills the baseline inventory dataframe with calculated values based on the given parameters.

      :param scenario: The scenario for the inventory.
      :type scenario: str
      :param inventory_df: The baseline inventory dataframe to be filled.
      :type inventory_df: pandas.DataFrame
      :param forest_type: The forest type (L, A).
      :type forest_type: str
      :param species: The species of the forest.
      :type species: str
      :param soil: The soil type.
      :type soil: str
      :param yield_class: The yield class.
      :type yield_class: str
      :param ageID: The age ID.
      :type ageID: int

      :returns: The filled baseline inventory dataframe.
      :rtype: pandas.DataFrame


   .. py:method:: inventory_iterator(scenario, inventory_df)

      Iterates over different combinations of age, species, forest type, soil class, and yield class
      to fill the baseline inventory dataframe for a given scenario.

      :param scenario: The scenario for which the baseline inventory is being filled.
      :type scenario: str
      :param inventory_df: The baseline inventory dataframe.
      :type inventory_df: pandas.DataFrame

      :returns: The updated baseline inventory dataframe.
      :rtype: pandas.DataFrame


   .. py:method:: afforestation_inventory(scenario, inventory_df)

      Calculate the afforestation inventory based on the given scenario and inventory dataframe.

      :param scenario: The scenario for which the afforestation inventory is calculated.
      :type scenario: str
      :param inventory_df: The inventory dataframe containing the classifier information.
      :type inventory_df: pd.DataFrame

      :returns: The updated inventory dataframe with afforestation areas calculated.
      :rtype: pd.DataFrame


   .. py:method:: scenario_afforesation_dict(scenario_afforestation_areas)

      Calculate the areas of afforestation for each yield class and species based on the scenario afforestation areas.

      :param scenario_afforestation_areas: An object containing the species and total area of afforestation for each species.
      :type scenario_afforestation_areas: ScenarioAfforestationAreas

      :returns: A dictionary containing the areas of afforestation for each yield class and species.
      :rtype: dict



