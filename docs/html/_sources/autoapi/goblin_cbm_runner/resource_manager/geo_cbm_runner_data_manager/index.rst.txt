:py:mod:`goblin_cbm_runner.resource_manager.geo_cbm_runner_data_manager`
========================================================================

.. py:module:: goblin_cbm_runner.resource_manager.geo_cbm_runner_data_manager

.. autoapi-nested-parse::

   Geo Data Manager
   ================

   This module contains the GeoDataManager class, which manages data for the CBM Runner.
   It provides methods to access and manipulate data, including configurations, disturbance data, and scenario information.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   goblin_cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager




.. py:class:: GeoDataManager(calibration_year, config_file_path, scenario_data, afforest_data, sit_path=None)


   Manages data for CBM Runner.

   Provides methods to access and manipulate data, including configurations, disturbance data, and scenario information.

   .. attribute:: config_data

      Configuration data from a YAML file.

      :type: dict

   .. attribute:: forest_baseline_year

      The baseline (calibration) year for forest data.

      :type: int

   .. attribute:: cbm_default_config

      The default CBM configuration.

      :type: dict

   .. attribute:: non_forest_dict

      Non-forest dictionary for afforestation types.

      :type: dict

   .. attribute:: non_forest_soils

      Non-forest soils types.

      :type: dict

   .. attribute:: forest_type_keys

      Forest type keys from CBM default configuration.

      :type: dict

   .. attribute:: soils_dict

      Soils dictionary from CBM default configuration.

      :type: dict

   .. attribute:: classifiers

      Classifiers from CBM default configuration.

      :type: dict

   .. attribute:: disturbances_config

      Disturbances configuration from CBM default configuration.

      :type: dict

   .. attribute:: yield_name_dict

      Species yield name dictionary from CBM default configuration.

      :type: dict

   .. attribute:: species_name_dict

      Species name dictionary from CBM default configuration.

      :type: dict

   .. attribute:: afforestation_yield_name_dict

      Afforestation yield name dictionary from CBM default configuration.

      :type: dict

   .. attribute:: yield_baseline_dict

      Yield baseline dictionary from CBM default configuration.

      :type: dict

   .. attribute:: disturbance_cols

      Disturbance columns from CBM default configuration.

      :type: dict

   .. attribute:: static_disturbance_cols

      Static disturbance columns from CBM default configuration.

      :type: dict

   .. attribute:: transition_cols

      Transition columns from CBM default configuration.

      :type: dict

   .. attribute:: mapping

      AIDB mapping from CBM default configuration.

      :type: dict

   .. attribute:: scenario_data

      Scenario data.

      :type: pd.DataFrame

   .. attribute:: scenario_disturbance_dict

      Scenario disturbance dictionary.

      :type: dict

   :param calibration_year: The year used for calibration. Defaults to None.
   :type calibration_year: int, optional
   :param config_file_path: Path to the configuration file. Defaults to None.
   :type config_file_path: str, optional
   :param scenario_data: Dataframe containing scenario data. Defaults to None.
   :type scenario_data: pd.DataFrame, optional
   :param afforest_data: Dataframe containing afforestation data. Defaults to None.
   :type afforest_data: pd.DataFrame, optional
   :param sit_path: Path to the SIT file. Defaults to None.
   :type sit_path: str, optional

   .. py:method:: get_config_file_path()

      Get the path to the configuration file.

      :returns: The path to the configuration file.
      :rtype: str


   .. py:method:: get_sit_path()

      Get the path to the SIT file.

      :returns: The path to the SIT file.
      :rtype: str


   .. py:method:: get_config_data(config_file)

      Load and return the configuration data from the specified file.

      :param config_file: The path to the configuration file.
      :type config_file: str

      :returns: The configuration data loaded from the file.
      :rtype: dict


   .. py:method:: get_non_forest_dict()

      Get the non-forest dictionary.

      :returns: The non-forest dictionary.
      :rtype: dict


   .. py:method:: get_non_forest_soils()

      Get the non-forest soils dictionary.

      :returns: The non-forest soils dictionary.
      :rtype: dict


   .. py:method:: get_forest_type_keys()

      Get the forest type keys.

      :returns: The forest type keys.
      :rtype: dict


   .. py:method:: get_soils_dict()

      Get the soils dictionary.

      :returns: The soils dictionary.
      :rtype: dict


   .. py:method:: get_classifiers()

      Get the classifiers dictionary.

      :returns: The classifiers dictionary.
      :rtype: dict


   .. py:method:: get_disturbances_config()

      Get the disturbances configuration.

      :returns: The disturbances configuration.
      :rtype: dict


   .. py:method:: get_yield_name_dict()

      Get the species yield name dictionary.

      :returns: The species yield name dictionary.
      :rtype: dict


   .. py:method:: get_species_name_dict()

      Get the species name dictionary.

      :returns: The species name dictionary.
      :rtype: dict


   .. py:method:: get_afforestation_yield_name_dict()

      Get the afforestation yield name dictionary.

      :returns: The afforestation yield name dictionary.
      :rtype: dict


   .. py:method:: get_yield_baseline_dict()

      Get the yield baseline dictionary.

      :returns: The yield baseline dictionary.
      :rtype: dict


   .. py:method:: get_disturbance_cols()

      Get the disturbance columns.

      :returns: A list of disturbance columns.
      :rtype: list


   .. py:method:: get_static_disturbance_cols()

      Get the static disturbance columns.

      :returns: A list of static disturbance columns.
      :rtype: list


   .. py:method:: get_transition_cols()

      Get the transition columns.

      :returns: A list of transition columns.
      :rtype: list


   .. py:method:: get_mapping()

      Get the AIDB mapping.

      :returns: The AIDB mapping.
      :rtype: dict


   .. py:method:: get_scenario_data()

      Get the scenario data.

      :returns: The scenario data.
      :rtype: pd.DataFrame


   .. py:method:: get_scenario_disturbance_dict()

      Get the scenario disturbance dictionary.

      :returns: The scenario disturbance dictionary.
      :rtype: dict


   .. py:method:: gen_scenario_disturbance_dict(scenario_data)

      Generate a dictionary of disturbance data for each scenario.

      :param scenario_data: The input scenario data.
      :type scenario_data: pd.DataFrame

      :returns: A dictionary containing disturbance data for each scenario.
      :rtype: dict


   .. py:method:: get_baseline_disturbance_dict(scenario_dist)

      Get the baseline disturbance dictionary and add it to the scenario disturbance dictionary.

      :param scenario_dist: The scenario disturbance dictionary.
      :type scenario_dist: dict

      :returns: The updated scenario disturbance dictionary with baseline disturbances.
      :rtype: dict


   .. py:method:: get_baseline_years(forestry_end_year)

      Get the number of baseline years.

      :param forestry_end_year: The end year for forestry.
      :type forestry_end_year: int

      :returns: The number of years in the baseline.
      :rtype: int


   .. py:method:: get_baseline_years_range(forestry_end_year)

      Get the range of baseline years.

      :param forestry_end_year: The end year for forestry.
      :type forestry_end_year: int

      :returns: The range of years in the baseline.
      :rtype: list


   .. py:method:: get_forest_end_year()

      Get the forest end year.

      :returns: The forest end year.
      :rtype: int


   .. py:method:: get_transition_dict_species()

      Get the transition dictionaries for species.

      :returns: The transition dictionaries for species.
      :rtype: dict


   .. py:method:: get_transition_dict_species_to_yield()

      Get the transition dictionaries for species to yield.

      :returns: The transition dictionaries for species to yield.
      :rtype: dict


   .. py:method:: get_afforestation_data()

      Get the afforestation data.

      :returns: The afforestation data.
      :rtype: pd.DataFrame


   .. py:method:: get_calibration_year()

      Get the calibration year.

      NOTE: Replaces get_forest_baseline_year().

      :returns: The calibration year.
      :rtype: int


   .. py:method:: get_sort_dict()

      Get the sort dictionary.

      :returns: The sort dictionary.
      :rtype: dict



