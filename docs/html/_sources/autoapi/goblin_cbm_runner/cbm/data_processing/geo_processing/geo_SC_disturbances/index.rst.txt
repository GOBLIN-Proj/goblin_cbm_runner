:py:mod:`goblin_cbm_runner.cbm.data_processing.geo_processing.geo_SC_disturbances`
==================================================================================

.. py:module:: goblin_cbm_runner.cbm.data_processing.geo_processing.geo_SC_disturbances

.. autoapi-nested-parse::

   Geo Disturbances Module
   =======================
   This module manages disturbances within the Carbon Budget Modeling (CBM) framework, specifically tailored for scenarios
   involving afforestation areas at the catchment level, both legacy and scenario-specific disturbances. It organizes and processes
   disturbance data to support the simulation of forest dynamics under varying management and disturbance scenarios.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   goblin_cbm_runner.cbm.data_processing.geo_processing.geo_SC_disturbances.SCDisturbances




.. py:class:: SCDisturbances(geo_data_manager)


   Manages disturbances within the Carbon Budget Modeling (CBM) framework, specifically tailored for scenarios
   involving afforestation areas at the catchment level, both legacy and scenario-specific disturbances. It organizes and processes
   disturbance data to support the simulation of forest dynamics under varying management and disturbance scenarios.

   .. attribute:: forest_end_year

      Target end year for forest simulation data.

      :type: int

   .. attribute:: calibration_year

      Base year for data calibration within the simulation.

      :type: int

   .. attribute:: loader_class

      Instance responsible for loading external data resources.

      :type: Loader

   .. attribute:: data_manager_class

      Manages retrieval and organization of simulation data.

      :type: DataManager

   .. attribute:: utils_class

      Utility class for processing disturbance data.

      :type: GeoDisturbUtils

   .. attribute:: afforestation_data

      Contains data on afforestation activities, including species and areas.

      :type: DataFrame

   .. attribute:: inventory_class

      Manages the preparation and structuring of forest inventory data.

      :type: Inventory

   .. attribute:: disturbance_timing

      Contains information on the timing and type of disturbances.

      :type: DataFrame

   .. attribute:: scenario_disturbance_dict

      Holds scenario-specific disturbance information.

      :type: dict

   :param geo_data_manager: Manager for geographical data.
   :type geo_data_manager: GeoDataManager

   .. method:: scenario_afforestation_area(scenario)

      
      Calculates the afforestation area for a given scenario.
      

   .. method:: gen_afforestation_scenario_disturbances(scenario)

      
      Generates afforestation scenario disturbances.
      

   .. method:: gen_non_afforestation_scenario_disturbances(scenario, afforest_df)

      
      Generates non-afforestation scenario disturbances.
      

   .. method:: fill_scenario_forest(scenario)

      
      Fills the forest data for a given scenario.
      

   .. py:method:: scenario_afforestation_area(scenario)

      Calculates the afforestation area for a given scenario.

      :param scenario: The scenario to calculate afforestation for.
      :type scenario: Scenario

      :returns: A dictionary with species as keys and afforestation areas as values.
      :rtype: dict


   .. py:method:: gen_afforestation_scenario_disturbances(scenario)

      Generates afforestation scenario disturbances.

      :param scenario: The scenario for which to generate the disturbance data.
      :type scenario: Scenario

      :returns: The disturbance data after filling with scenario data.
      :rtype: DataFrame


   .. py:method:: gen_non_afforestation_scenario_disturbances(scenario, afforest_df)

      Generates non-afforestation scenario disturbances.

      :param scenario: The scenario for which to generate the disturbance data.
      :type scenario: Scenario
      :param afforest_df: DataFrame containing afforestation disturbances.
      :type afforest_df: DataFrame

      :returns: The disturbance data after filling with non-afforestation scenario data.
      :rtype: DataFrame


   .. py:method:: fill_scenario_forest(scenario)

      Fills the forest data for a given scenario.

      :param scenario: The scenario for which to fill the forest data.
      :type scenario: Scenario

      :returns: The combined DataFrame of afforestation and non-afforestation disturbances.
      :rtype: DataFrame



