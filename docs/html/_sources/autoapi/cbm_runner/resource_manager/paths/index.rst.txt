:py:mod:`cbm_runner.resource_manager.paths`
===========================================

.. py:module:: cbm_runner.resource_manager.paths

.. autoapi-nested-parse::

   Paths module
   =============
   This module contains the Paths class, which is used to set up the necessary directory paths for CBM simulation input data for cbm_runner and geo_cbm_runner.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   cbm_runner.resource_manager.paths.Paths




.. py:class:: Paths(sit_path, gen_baseline, gen_validation)


   This class is responsible for setting up the necessary directory paths for CBM simulation input data for cbm_runner and geo_cbm_runner.

   .. attribute:: external_path

      The specific site path provided by the user; None if not provided.

      :type: str

   .. attribute:: gen_baseline

      A boolean indicating whether to generate baseline input data.

      :type: bool

   .. attribute:: gen_validation

      A boolean indicating whether to generate validation data.

      :type: bool

   .. method:: setup_runner_paths

      Sets up the necessary directory paths for CBM simulation input data for cbm_runner.

   .. method:: setup_geo_runner_paths

      Sets up the necessary directory paths for CBM simulation input data for geo_cbm_runner.

   .. method:: make_external_dirs

      Creates directories for external use.

   .. method:: get_generated_input_data_path

      Returns the generated input data path.

   .. method:: get_baseline_conf_path

      Returns the baseline configuration path.

   .. method:: get_validation_path

      Returns the validation path.
      

   .. py:method:: setup_runner_paths(sit_path)

      Sets up the necessary directory paths for CBM simulation input data for cbm_runner.
      :param sit_path: The specific site path provided by the user; None if not provided.
      :type sit_path: str

      :returns: None


   .. py:method:: setup_geo_runner_paths(sit_path)

      Sets up the necessary directory paths for CBM simulation input data for geo_cbm_runner.


      :param sit_path: The specific site path provided by the user; None if not provided.
      :type sit_path: str

      :returns: None


   .. py:method:: setup_forest_runner_paths(sit_path)

      Sets up the necessary directory paths for CBM simulation input data for forest_sim.


      :param sit_path: The specific site path provided by the user; None if not provided.
      :type sit_path: str

      :returns: None


   .. py:method:: setup_historic_affor_paths(sit_path)

      Sets up the necessary directory paths for CBM simulation input data for historic_affor.

      :param sit_path: The specific site path provided by the user; None if not provided.
      :type sit_path: str

      :returns: None


   .. py:method:: make_external_dirs(path)

      Creates directories for external use.

      :param path: The directory path.
      :type path: str

      :returns: None


   .. py:method:: get_generated_input_data_path()

      Returns the generated input data path.

      :returns: The generated input data path.
      :rtype: str


   .. py:method:: get_baseline_conf_path()

      Returns the baseline configuration path.

      :returns: The baseline configuration path.
      :rtype: str


   .. py:method:: get_validation_path()

      Returns the validation path.

      :returns: The validation path.
      :rtype: str


   .. py:method:: get_internal_runner_generated_input_data_path()

      Returns the internal generated input data path.

      :returns: The internal generated input data path.
      :rtype: str


   .. py:method:: get_internal_runner_baseline_conf_path()

      Returns the internal baseline configuration path.

      :returns: The internal baseline configuration path.
      :rtype: str


   .. py:method:: get_internal_geo_runner_generated_input_data_path()

      Returns the internal generated input data path for geo_cbm_runner.

      :returns: The internal generated input data path for geo_cbm_runner.
      :rtype: str


   .. py:method:: get_internal_geo_runner_baseline_conf_path()

      Returns the internal baseline configuration path for geo_cbm_runner.

      :returns: The internal baseline configuration path for geo_cbm_runner.
      :rtype: str


   .. py:method:: get_internal_forest_runner_generated_input_data_path()

      Returns the internal generated input data path for forest_sim.

      :returns: The internal generated input data path for forest_sim.
      :rtype: str


   .. py:method:: get_internal_forest_runner_baseline_conf_path()

      Returns the internal baseline configuration path for forest_sim.

      :returns: The internal baseline configuration path for forest_sim.
      :rtype: str


   .. py:method:: get_internal_historic_affor_generated_input_data_path()

      Returns the internal generated input data path for historic_affor.

      :returns: The internal generated input data path for historic_affor.
      :rtype: str


   .. py:method:: get_internal_historic_affor_baseline_conf_path()

      Returns the internal baseline configuration path for historic_affor.

      :returns: The internal baseline configuration path for historic_affor.
      :rtype: str


   .. py:method:: is_path_internal(path)

      Determines whether the provided path is one of the internally generated paths.

      :param path: The path to check.
      :type path: str

      :returns: True if the path is internally generated, False otherwise.
      :rtype: bool


   .. py:method:: retry_operation(function, max_attempts=5, wait_time=60)

      Retry a function multiple times if it fails.

      :param function: The function to execute.
      :type function: function
      :param max_attempts: The maximum number of attempts.
      :type max_attempts: int
      :param wait_time: The time to wait before retrying.
      :type wait_time: int

      :returns: The result of the function if successful.



