{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Example Usage\n",
    "\n",
    "Here is a demonstartion of the potential usage of ```cbm_runner```.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Imports\n",
    "\n",
    "Firstly, we start of by importing the relevant classes. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from cbm_runner.runner import Runner\n",
    "import pandas as pd\n",
    "import os\n",
    "\n",
    "\n",
    "import warnings\n",
    "\n",
    "# Filter out the RuntimeWarning related to unsupported linux distribution\n",
    "warnings.filterwarnings(\"ignore\", message=\"unsupported linux distribution:\", category=RuntimeWarning)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The ```Runner``` class is basically used to set to run the scenarios based on the configuration files for the CBM CFS3.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The Runner\n",
    "\n",
    "In the first example below, we will set the path to the configurations and data, define the base and target year. Finally, we will create a directory for our outputs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# path to data\n",
    "path = \"../src/tests/data/\"\n",
    "\n",
    "# afforestation data for each scenario\n",
    "afforest_data = pd.read_csv(\n",
    "    os.path.join(path, \"scenario_afforestation.csv\"), index_col=0\n",
    ")\n",
    "\n",
    "\n",
    "# basic configuration file\n",
    "config = os.path.join(path, \"cbm_factory.yaml\")\n",
    "\n",
    "# scenario_data\n",
    "sc_data = pd.read_csv(os.path.join(path, \"scenario_dataframe.csv\"))\n",
    "\n",
    "\n",
    "# calibration and end point\n",
    "calibration_year = 2020\n",
    "forest_end_year = 2050\n",
    "\n",
    "\n",
    "#Make directory to store exported file\n",
    "\n",
    "os.mkdir(\"jupyter_example\")\n",
    "\n",
    "data_path = \"./jupyter_example/\"\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Define classes and Run Scenarios"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# instance of the Runner class\n",
    "runner = Runner(config, calibration_year, forest_end_year, afforest_data, sc_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# generation of data for each of the scenarios\n",
    "runner.generate_input_data()\n",
    "\n",
    "# generation of aggregated results\n",
    "runner.run_aggregate_scenarios().to_csv(os.path.join(data_path, \"c_stock.csv\"))\n",
    "\n",
    "# generation of annual flux results\n",
    "runner.run_flux_scenarios().to_csv(os.path.join(data_path, \"c_flux.csv\"))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Lets try importing and displaying the information\n",
    "\n",
    "stocks = pd.read_csv(os.path.join(data_path, \"c_stock.csv\"), index_col=0)\n",
    "\n",
    "fluxes = pd.read_csv(os.path.join(data_path, \"c_flux.csv\"), index_col=0)\n",
    "\n",
    "#We can always store these in memory without exporting to disk. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>AGB</th>\n",
       "      <th>BGB</th>\n",
       "      <th>Deadwood</th>\n",
       "      <th>Litter</th>\n",
       "      <th>Soil</th>\n",
       "      <th>Total Ecosystem</th>\n",
       "      <th>Scenario</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019</td>\n",
       "      <td>-4.334780e+07</td>\n",
       "      <td>-9.696019e+06</td>\n",
       "      <td>-4.826559e+07</td>\n",
       "      <td>-3.067907e+07</td>\n",
       "      <td>-7.285119e+07</td>\n",
       "      <td>-2.048397e+08</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020</td>\n",
       "      <td>-4.470023e+07</td>\n",
       "      <td>-9.994071e+06</td>\n",
       "      <td>-4.705136e+07</td>\n",
       "      <td>-3.109692e+07</td>\n",
       "      <td>-7.286168e+07</td>\n",
       "      <td>-2.057043e+08</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021</td>\n",
       "      <td>-4.641273e+07</td>\n",
       "      <td>-1.036570e+07</td>\n",
       "      <td>-4.593213e+07</td>\n",
       "      <td>-3.128908e+07</td>\n",
       "      <td>-7.287457e+07</td>\n",
       "      <td>-2.068742e+08</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022</td>\n",
       "      <td>-4.832679e+07</td>\n",
       "      <td>-1.078105e+07</td>\n",
       "      <td>-4.483124e+07</td>\n",
       "      <td>-3.142845e+07</td>\n",
       "      <td>-7.288961e+07</td>\n",
       "      <td>-2.082571e+08</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2023</td>\n",
       "      <td>-5.065810e+07</td>\n",
       "      <td>-1.128812e+07</td>\n",
       "      <td>-4.369818e+07</td>\n",
       "      <td>-3.146399e+07</td>\n",
       "      <td>-7.290520e+07</td>\n",
       "      <td>-2.100136e+08</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>219</th>\n",
       "      <td>2046</td>\n",
       "      <td>-1.043159e+08</td>\n",
       "      <td>-2.271539e+07</td>\n",
       "      <td>-3.133548e+07</td>\n",
       "      <td>-3.862336e+07</td>\n",
       "      <td>-7.405842e+07</td>\n",
       "      <td>-2.710486e+08</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>220</th>\n",
       "      <td>2047</td>\n",
       "      <td>-1.067074e+08</td>\n",
       "      <td>-2.321878e+07</td>\n",
       "      <td>-3.119778e+07</td>\n",
       "      <td>-3.906293e+07</td>\n",
       "      <td>-7.415019e+07</td>\n",
       "      <td>-2.743371e+08</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>221</th>\n",
       "      <td>2048</td>\n",
       "      <td>-1.087491e+08</td>\n",
       "      <td>-2.364419e+07</td>\n",
       "      <td>-3.114016e+07</td>\n",
       "      <td>-3.971592e+07</td>\n",
       "      <td>-7.424763e+07</td>\n",
       "      <td>-2.774970e+08</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>222</th>\n",
       "      <td>2049</td>\n",
       "      <td>-1.111483e+08</td>\n",
       "      <td>-2.414888e+07</td>\n",
       "      <td>-3.104509e+07</td>\n",
       "      <td>-4.012076e+07</td>\n",
       "      <td>-7.434683e+07</td>\n",
       "      <td>-2.808099e+08</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>223</th>\n",
       "      <td>2050</td>\n",
       "      <td>-1.135013e+08</td>\n",
       "      <td>-2.464325e+07</td>\n",
       "      <td>-3.097364e+07</td>\n",
       "      <td>-4.054944e+07</td>\n",
       "      <td>-7.445027e+07</td>\n",
       "      <td>-2.841179e+08</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>224 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Year           AGB           BGB      Deadwood        Litter  \\\n",
       "0    2019 -4.334780e+07 -9.696019e+06 -4.826559e+07 -3.067907e+07   \n",
       "1    2020 -4.470023e+07 -9.994071e+06 -4.705136e+07 -3.109692e+07   \n",
       "2    2021 -4.641273e+07 -1.036570e+07 -4.593213e+07 -3.128908e+07   \n",
       "3    2022 -4.832679e+07 -1.078105e+07 -4.483124e+07 -3.142845e+07   \n",
       "4    2023 -5.065810e+07 -1.128812e+07 -4.369818e+07 -3.146399e+07   \n",
       "..    ...           ...           ...           ...           ...   \n",
       "219  2046 -1.043159e+08 -2.271539e+07 -3.133548e+07 -3.862336e+07   \n",
       "220  2047 -1.067074e+08 -2.321878e+07 -3.119778e+07 -3.906293e+07   \n",
       "221  2048 -1.087491e+08 -2.364419e+07 -3.114016e+07 -3.971592e+07   \n",
       "222  2049 -1.111483e+08 -2.414888e+07 -3.104509e+07 -4.012076e+07   \n",
       "223  2050 -1.135013e+08 -2.464325e+07 -3.097364e+07 -4.054944e+07   \n",
       "\n",
       "             Soil  Total Ecosystem  Scenario  \n",
       "0   -7.285119e+07    -2.048397e+08        -1  \n",
       "1   -7.286168e+07    -2.057043e+08        -1  \n",
       "2   -7.287457e+07    -2.068742e+08        -1  \n",
       "3   -7.288961e+07    -2.082571e+08        -1  \n",
       "4   -7.290520e+07    -2.100136e+08        -1  \n",
       "..            ...              ...       ...  \n",
       "219 -7.405842e+07    -2.710486e+08         5  \n",
       "220 -7.415019e+07    -2.743371e+08         5  \n",
       "221 -7.424763e+07    -2.774970e+08         5  \n",
       "222 -7.434683e+07    -2.808099e+08         5  \n",
       "223 -7.445027e+07    -2.841179e+08         5  \n",
       "\n",
       "[224 rows x 8 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stocks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>AGB</th>\n",
       "      <th>BGB</th>\n",
       "      <th>Deadwood</th>\n",
       "      <th>Litter</th>\n",
       "      <th>Soil</th>\n",
       "      <th>Total Ecosystem</th>\n",
       "      <th>Scenario</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020</td>\n",
       "      <td>-1.352425e+06</td>\n",
       "      <td>-298052.157910</td>\n",
       "      <td>1.214229e+06</td>\n",
       "      <td>-417848.669748</td>\n",
       "      <td>-10481.618257</td>\n",
       "      <td>-8.645789e+05</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021</td>\n",
       "      <td>-1.712503e+06</td>\n",
       "      <td>-371624.761924</td>\n",
       "      <td>1.119231e+06</td>\n",
       "      <td>-192166.371998</td>\n",
       "      <td>-12889.460613</td>\n",
       "      <td>-1.169953e+06</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022</td>\n",
       "      <td>-1.914064e+06</td>\n",
       "      <td>-415358.547329</td>\n",
       "      <td>1.100893e+06</td>\n",
       "      <td>-139365.549878</td>\n",
       "      <td>-15042.650959</td>\n",
       "      <td>-1.382938e+06</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2023</td>\n",
       "      <td>-2.331305e+06</td>\n",
       "      <td>-507068.319808</td>\n",
       "      <td>1.133057e+06</td>\n",
       "      <td>-35543.722159</td>\n",
       "      <td>-15590.234680</td>\n",
       "      <td>-1.756450e+06</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024</td>\n",
       "      <td>-2.286463e+06</td>\n",
       "      <td>-495906.559847</td>\n",
       "      <td>1.056267e+06</td>\n",
       "      <td>-94884.372233</td>\n",
       "      <td>-19108.980925</td>\n",
       "      <td>-1.840096e+06</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>212</th>\n",
       "      <td>2046</td>\n",
       "      <td>-2.367932e+06</td>\n",
       "      <td>-498407.793721</td>\n",
       "      <td>1.626758e+05</td>\n",
       "      <td>-431711.730082</td>\n",
       "      <td>-87905.286249</td>\n",
       "      <td>-3.223281e+06</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>213</th>\n",
       "      <td>2047</td>\n",
       "      <td>-2.391506e+06</td>\n",
       "      <td>-503384.859128</td>\n",
       "      <td>1.377005e+05</td>\n",
       "      <td>-439567.951743</td>\n",
       "      <td>-91768.574017</td>\n",
       "      <td>-3.288526e+06</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>214</th>\n",
       "      <td>2048</td>\n",
       "      <td>-2.041628e+06</td>\n",
       "      <td>-425414.905696</td>\n",
       "      <td>5.762638e+04</td>\n",
       "      <td>-652992.445315</td>\n",
       "      <td>-97444.650372</td>\n",
       "      <td>-3.159854e+06</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>215</th>\n",
       "      <td>2049</td>\n",
       "      <td>-2.399264e+06</td>\n",
       "      <td>-504692.944701</td>\n",
       "      <td>9.506752e+04</td>\n",
       "      <td>-404840.225669</td>\n",
       "      <td>-99199.616675</td>\n",
       "      <td>-3.312930e+06</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216</th>\n",
       "      <td>2050</td>\n",
       "      <td>-2.352917e+06</td>\n",
       "      <td>-494365.612410</td>\n",
       "      <td>7.144593e+04</td>\n",
       "      <td>-428674.288049</td>\n",
       "      <td>-103438.957444</td>\n",
       "      <td>-3.307949e+06</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>217 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Year           AGB            BGB      Deadwood         Litter  \\\n",
       "0    2020 -1.352425e+06 -298052.157910  1.214229e+06 -417848.669748   \n",
       "1    2021 -1.712503e+06 -371624.761924  1.119231e+06 -192166.371998   \n",
       "2    2022 -1.914064e+06 -415358.547329  1.100893e+06 -139365.549878   \n",
       "3    2023 -2.331305e+06 -507068.319808  1.133057e+06  -35543.722159   \n",
       "4    2024 -2.286463e+06 -495906.559847  1.056267e+06  -94884.372233   \n",
       "..    ...           ...            ...           ...            ...   \n",
       "212  2046 -2.367932e+06 -498407.793721  1.626758e+05 -431711.730082   \n",
       "213  2047 -2.391506e+06 -503384.859128  1.377005e+05 -439567.951743   \n",
       "214  2048 -2.041628e+06 -425414.905696  5.762638e+04 -652992.445315   \n",
       "215  2049 -2.399264e+06 -504692.944701  9.506752e+04 -404840.225669   \n",
       "216  2050 -2.352917e+06 -494365.612410  7.144593e+04 -428674.288049   \n",
       "\n",
       "              Soil  Total Ecosystem  Scenario  \n",
       "0    -10481.618257    -8.645789e+05        -1  \n",
       "1    -12889.460613    -1.169953e+06        -1  \n",
       "2    -15042.650959    -1.382938e+06        -1  \n",
       "3    -15590.234680    -1.756450e+06        -1  \n",
       "4    -19108.980925    -1.840096e+06        -1  \n",
       "..             ...              ...       ...  \n",
       "212  -87905.286249    -3.223281e+06         5  \n",
       "213  -91768.574017    -3.288526e+06         5  \n",
       "214  -97444.650372    -3.159854e+06         5  \n",
       "215  -99199.616675    -3.312930e+06         5  \n",
       "216 -103438.957444    -3.307949e+06         5  \n",
       "\n",
       "[217 rows x 8 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fluxes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Deleted file: ./jupyter_example/c_flux.csv\n",
      "Deleted file: ./jupyter_example/c_stock.csv\n"
     ]
    }
   ],
   "source": [
    "# Remove Generated files \n",
    "\n",
    "for filename in os.listdir(data_path):\n",
    "    file_path = os.path.join(data_path, filename)\n",
    "    try:\n",
    "        if os.path.isfile(file_path):\n",
    "            os.remove(file_path)\n",
    "            print(f\"Deleted file: {file_path}\")\n",
    "    except Exception as e:\n",
    "        print(f\"Error deleting file: {file_path}. Reason: {e}\")\n",
    "        \n",
    "#Remove direcotry \n",
    "os.rmdir(data_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "mystnb": {
   "execution_timeout": 600
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
