Search.setIndex({"docnames": ["autoapi/cbm_runner/baseline_input_conf/index", "autoapi/cbm_runner/cbm_data_factory/index", "autoapi/cbm_runner/cbm_validation/index", "autoapi/cbm_runner/cbm_validation/validation/index", "autoapi/cbm_runner/cbm_validation_manager/index", "autoapi/cbm_runner/configuration_data/index", "autoapi/cbm_runner/create_json/index", "autoapi/cbm_runner/database/index", "autoapi/cbm_runner/disturbances/index", "autoapi/cbm_runner/forest_sim/baseline_input_conf/index", "autoapi/cbm_runner/forest_sim/forest_sim_validation_manager/index", "autoapi/cbm_runner/forest_sim/forestsim_disturbances/index", "autoapi/cbm_runner/forest_sim/forestsim_factory/index", "autoapi/cbm_runner/forest_sim/forestsim_inventory/index", "autoapi/cbm_runner/forest_sim/forestsim_runner/index", "autoapi/cbm_runner/forest_sim/generated_input_data/index", "autoapi/cbm_runner/forest_sim/index", "autoapi/cbm_runner/generated_input_data/index", "autoapi/cbm_runner/geo_cbm_runner/baseline_input_conf/index", "autoapi/cbm_runner/geo_cbm_runner/catchment_forest_cover/index", "autoapi/cbm_runner/geo_cbm_runner/generated_input_data/index", "autoapi/cbm_runner/geo_cbm_runner/geo_cbm_data_factory/index", "autoapi/cbm_runner/geo_cbm_runner/geo_cbm_validation_manager/index", "autoapi/cbm_runner/geo_cbm_runner/geo_create_json/index", "autoapi/cbm_runner/geo_cbm_runner/geo_disturbances/index", "autoapi/cbm_runner/geo_cbm_runner/geo_inventory/index", "autoapi/cbm_runner/geo_cbm_runner/geo_runner/index", "autoapi/cbm_runner/geo_cbm_runner/geo_transition/index", "autoapi/cbm_runner/geo_cbm_runner/index", "autoapi/cbm_runner/harvest_manager/harvest/index", "autoapi/cbm_runner/harvest_manager/index", "autoapi/cbm_runner/historic_affor/baseline_input_conf/index", "autoapi/cbm_runner/historic_affor/generated_input_data/index", "autoapi/cbm_runner/historic_affor/historic_affor_runner/index", "autoapi/cbm_runner/historic_affor/historic_affor_validation_manager/index", "autoapi/cbm_runner/historic_affor/index", "autoapi/cbm_runner/index", "autoapi/cbm_runner/inventory/index", "autoapi/cbm_runner/resource_manager/cbm_pools/index", "autoapi/cbm_runner/resource_manager/cbm_runner_data_manager/index", "autoapi/cbm_runner/resource_manager/database_manager/index", "autoapi/cbm_runner/resource_manager/flux_manager/index", "autoapi/cbm_runner/resource_manager/geo_cbm_runner_data_manager/index", "autoapi/cbm_runner/resource_manager/index", "autoapi/cbm_runner/resource_manager/loader/index", "autoapi/cbm_runner/resource_manager/parser/index", "autoapi/cbm_runner/resource_manager/paths/index", "autoapi/cbm_runner/resource_manager/scenario_data_fetcher/index", "autoapi/cbm_runner/runner/index", "autoapi/cbm_runner/transition/index", "autoapi/cbm_runner/yield_curves/index", "autoapi/index", "example", "index"], "filenames": ["autoapi/cbm_runner/baseline_input_conf/index.rst", "autoapi/cbm_runner/cbm_data_factory/index.rst", "autoapi/cbm_runner/cbm_validation/index.rst", "autoapi/cbm_runner/cbm_validation/validation/index.rst", "autoapi/cbm_runner/cbm_validation_manager/index.rst", "autoapi/cbm_runner/configuration_data/index.rst", "autoapi/cbm_runner/create_json/index.rst", "autoapi/cbm_runner/database/index.rst", "autoapi/cbm_runner/disturbances/index.rst", "autoapi/cbm_runner/forest_sim/baseline_input_conf/index.rst", "autoapi/cbm_runner/forest_sim/forest_sim_validation_manager/index.rst", "autoapi/cbm_runner/forest_sim/forestsim_disturbances/index.rst", "autoapi/cbm_runner/forest_sim/forestsim_factory/index.rst", "autoapi/cbm_runner/forest_sim/forestsim_inventory/index.rst", "autoapi/cbm_runner/forest_sim/forestsim_runner/index.rst", "autoapi/cbm_runner/forest_sim/generated_input_data/index.rst", "autoapi/cbm_runner/forest_sim/index.rst", "autoapi/cbm_runner/generated_input_data/index.rst", "autoapi/cbm_runner/geo_cbm_runner/baseline_input_conf/index.rst", "autoapi/cbm_runner/geo_cbm_runner/catchment_forest_cover/index.rst", "autoapi/cbm_runner/geo_cbm_runner/generated_input_data/index.rst", "autoapi/cbm_runner/geo_cbm_runner/geo_cbm_data_factory/index.rst", "autoapi/cbm_runner/geo_cbm_runner/geo_cbm_validation_manager/index.rst", "autoapi/cbm_runner/geo_cbm_runner/geo_create_json/index.rst", "autoapi/cbm_runner/geo_cbm_runner/geo_disturbances/index.rst", "autoapi/cbm_runner/geo_cbm_runner/geo_inventory/index.rst", "autoapi/cbm_runner/geo_cbm_runner/geo_runner/index.rst", "autoapi/cbm_runner/geo_cbm_runner/geo_transition/index.rst", "autoapi/cbm_runner/geo_cbm_runner/index.rst", "autoapi/cbm_runner/harvest_manager/harvest/index.rst", "autoapi/cbm_runner/harvest_manager/index.rst", "autoapi/cbm_runner/historic_affor/baseline_input_conf/index.rst", "autoapi/cbm_runner/historic_affor/generated_input_data/index.rst", "autoapi/cbm_runner/historic_affor/historic_affor_runner/index.rst", "autoapi/cbm_runner/historic_affor/historic_affor_validation_manager/index.rst", "autoapi/cbm_runner/historic_affor/index.rst", "autoapi/cbm_runner/index.rst", "autoapi/cbm_runner/inventory/index.rst", "autoapi/cbm_runner/resource_manager/cbm_pools/index.rst", "autoapi/cbm_runner/resource_manager/cbm_runner_data_manager/index.rst", "autoapi/cbm_runner/resource_manager/database_manager/index.rst", "autoapi/cbm_runner/resource_manager/flux_manager/index.rst", "autoapi/cbm_runner/resource_manager/geo_cbm_runner_data_manager/index.rst", "autoapi/cbm_runner/resource_manager/index.rst", "autoapi/cbm_runner/resource_manager/loader/index.rst", "autoapi/cbm_runner/resource_manager/parser/index.rst", "autoapi/cbm_runner/resource_manager/paths/index.rst", "autoapi/cbm_runner/resource_manager/scenario_data_fetcher/index.rst", "autoapi/cbm_runner/runner/index.rst", "autoapi/cbm_runner/transition/index.rst", "autoapi/cbm_runner/yield_curves/index.rst", "autoapi/index.rst", "example.ipynb", "index.md"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.baseline_input_conf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.cbm_data_factory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.cbm_validation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.cbm_validation.validation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.cbm_validation_manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.configuration_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.create_json</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.database</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.disturbances</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.forest_sim.baseline_input_conf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.forest_sim.forest_sim_validation_manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.forest_sim.forestsim_disturbances</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.forest_sim.forestsim_factory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.forest_sim.forestsim_inventory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.forest_sim.forestsim_runner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.forest_sim.generated_input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.forest_sim</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.generated_input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.geo_cbm_runner.baseline_input_conf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.geo_cbm_runner.catchment_forest_cover</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.geo_cbm_runner.generated_input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.geo_cbm_runner.geo_cbm_data_factory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.geo_cbm_runner.geo_cbm_validation_manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.geo_cbm_runner.geo_create_json</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.geo_cbm_runner.geo_disturbances</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.geo_cbm_runner.geo_inventory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.geo_cbm_runner.geo_runner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.geo_cbm_runner.geo_transition</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.geo_cbm_runner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.harvest_manager.harvest</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.harvest_manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.historic_affor.baseline_input_conf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.historic_affor.generated_input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.historic_affor.historic_affor_runner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.historic_affor.historic_affor_validation_manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.historic_affor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.inventory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.resource_manager.cbm_pools</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.resource_manager.cbm_runner_data_manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.resource_manager.database_manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.resource_manager.flux_manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.resource_manager.geo_cbm_runner_data_manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.resource_manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.resource_manager.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.resource_manager.parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.resource_manager.paths</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.resource_manager.scenario_data_fetcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.runner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.transition</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cbm_runner.yield_curves</span></code>", "API Reference", "Example Usage", "\ud83c\udf32 CBM_runner, a CBM CFS3 interface for the GOBLIN model"], "terms": {"get_local_dir": [0, 5, 7, 9, 15, 17, 18, 20, 31, 32], "sourc": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 31, 32, 33, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50], "get": [0, 3, 5, 7, 8, 9, 11, 15, 17, 18, 20, 24, 31, 32, 39, 42, 45], "directori": [0, 1, 4, 5, 7, 9, 10, 12, 14, 15, 17, 18, 20, 21, 22, 26, 31, 32, 33, 34, 40, 46, 48, 52], "contain": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 51], "thi": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 53], "script": [0, 5, 7, 9, 15, 17, 18, 20, 31, 32], "return": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50], "full": [0, 5, 7, 9, 15, 17, 18, 20, 31, 32], "path": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 36, 37, 39, 42, 43, 48, 49, 51, 52, 53], "": [0, 1, 5, 7, 9, 11, 15, 17, 18, 20, 21, 24, 31, 32], "type": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50], "str": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 37, 39, 40, 42, 45, 46, 47, 48, 49], "datafactori": [1, 12, 21, 26, 33, 48], "which": [1, 6, 8, 11, 12, 13, 19, 21, 23, 24, 25, 37, 39, 42, 46, 53], "i": [1, 3, 4, 6, 8, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 29, 33, 34, 37, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 52, 53], "us": [1, 6, 8, 11, 12, 14, 19, 21, 24, 26, 29, 33, 39, 40, 41, 42, 44, 46, 48, 50, 52], "creat": [1, 6, 8, 12, 13, 21, 23, 24, 25, 26, 33, 37, 40, 41, 46, 48, 51, 52], "manag": [1, 8, 12, 13, 19, 21, 24, 25, 26, 27, 29, 33, 37, 38, 39, 40, 41, 42, 44, 48, 49, 52, 53], "input": [1, 12, 13, 14, 21, 26, 33, 37, 39, 42, 46, 48], "data": [1, 3, 4, 6, 8, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 29, 33, 34, 37, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 53], "cbm": [1, 6, 8, 12, 13, 14, 21, 23, 24, 25, 26, 33, 37, 38, 39, 40, 41, 42, 44, 46, 48, 52], "simul": [1, 11, 12, 13, 14, 21, 24, 25, 26, 29, 33, 37, 46, 48, 50], "kei": [1, 8, 11, 13, 24, 33, 37, 39, 42], "featur": 1, "dynam": [1, 21, 24, 25, 33, 48, 52], "gener": [1, 4, 6, 8, 10, 11, 13, 14, 21, 22, 23, 24, 25, 26, 27, 33, 34, 37, 39, 41, 42, 46, 48, 49, 50, 51, 52, 53], "organ": [1, 12, 21, 24, 33, 38, 48, 53], "file": [1, 3, 4, 6, 8, 10, 11, 12, 14, 21, 22, 23, 24, 26, 27, 33, 34, 39, 42, 48, 49, 52, 53], "configur": [1, 6, 8, 11, 12, 13, 14, 21, 23, 24, 25, 26, 27, 33, 37, 39, 42, 46, 48, 49, 52, 53], "classifi": [1, 8, 11, 12, 13, 21, 24, 25, 26, 27, 37, 39, 42, 45, 48, 49, 52], "ag": [1, 3, 4, 8, 10, 12, 13, 21, 22, 24, 25, 26, 29, 34, 37, 40, 44, 45, 48], "yield": [1, 8, 11, 12, 13, 21, 24, 25, 26, 29, 33, 37, 39, 40, 42, 44, 45, 48, 50], "curv": [1, 12, 21, 26, 39, 40, 42, 44, 48], "inventori": [1, 8, 12, 13, 21, 24, 25, 26, 36, 40, 44, 45, 48, 51], "disturb": [1, 3, 11, 12, 21, 24, 26, 29, 36, 38, 39, 40, 41, 42, 44, 45, 48, 51], "event": [1, 3, 4, 8, 10, 11, 12, 13, 21, 22, 24, 25, 26, 29, 34, 37, 48], "transit": [1, 12, 21, 26, 27, 36, 39, 42, 48, 51], "rule": [1, 12, 21, 24, 26, 27, 48, 49], "both": [1, 13, 24, 37], "baselin": [1, 3, 4, 8, 10, 11, 12, 13, 14, 21, 22, 24, 25, 26, 27, 33, 34, 37, 39, 42, 45, 46, 48, 49], "specif": [1, 6, 11, 12, 13, 19, 21, 23, 24, 25, 26, 33, 37, 46, 47, 48, 50], "scenario": [1, 3, 4, 6, 8, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 26, 27, 33, 34, 37, 39, 42, 47, 48, 49, 50, 53], "flexibl": 1, "facilit": [1, 25, 33, 48], "custom": [1, 52], "allow": 1, "modif": 1, "integr": [1, 25, 41], "ensur": [1, 25, 33, 41], "consist": [1, 41], "accuraci": [1, 21, 33], "config_path": [1, 6, 8, 11, 12, 13, 14, 21, 23, 24, 25, 26, 27, 33, 37, 48, 49], "calibration_year": [1, 8, 11, 12, 13, 14, 21, 24, 25, 26, 27, 33, 37, 39, 42, 48, 49, 52, 53], "forest_end_year": [1, 8, 11, 12, 14, 21, 24, 26, 33, 48], "afforestation_data": [1, 8, 11, 12, 13, 21, 24, 25, 37], "scenario_data": [1, 8, 11, 12, 14, 21, 24, 25, 26, 33, 39, 42, 47, 48, 52, 53], "A": [1, 3, 4, 8, 10, 11, 12, 13, 14, 19, 21, 22, 24, 25, 26, 29, 33, 34, 37, 39, 40, 41, 42, 45, 46, 47, 48, 50], "repres": [1, 8, 11, 24, 25, 26, 27, 29, 38, 41, 45, 48, 49], "factori": [1, 12, 48], "exist": [1, 41], "descript": [1, 21], "loader_class": [1, 6, 8, 13, 21, 23, 24, 25, 29, 37], "an": [1, 3, 4, 6, 8, 10, 12, 13, 14, 19, 21, 22, 23, 25, 26, 29, 33, 34, 37, 41, 44, 47, 48], "instanc": [1, 6, 8, 12, 13, 14, 19, 21, 23, 24, 27, 29, 37, 44, 47, 48, 49, 52, 53], "loader": [1, 6, 8, 13, 21, 23, 24, 25, 29, 36, 37, 43, 51], "load": [1, 13, 21, 24, 25, 37, 39, 42, 44], "data_manager_class": [1, 6, 8, 13, 21, 23, 24, 25, 26, 27, 29, 33, 37, 48, 49], "handl": [1, 8, 11, 13, 21, 24, 25, 26, 37], "datamanag": [1, 6, 8, 13, 23, 24, 25, 27, 29, 33, 37, 39, 40, 44, 48, 49], "json_creator_class": [1, 21], "construct": [1, 21, 25], "json": [1, 6, 12, 21, 23, 26, 48], "createjson": [1, 6, 21, 23], "inventory_class": [1, 8, 21, 24], "disturbance_class": [1, 12, 21], "transition_class": [1, 21], "relat": [1, 13, 21, 37, 39, 41, 42, 52, 53], "afforest": [1, 8, 11, 12, 13, 14, 21, 24, 25, 26, 29, 33, 37, 39, 40, 42, 44, 47, 48, 52, 53], "dict": [1, 6, 8, 11, 13, 21, 23, 24, 25, 26, 27, 33, 37, 39, 42, 45, 48, 49], "set_input_data_dir": [1, 12, 21], "sc": [1, 3, 4, 10, 12, 21, 22, 26, 33, 34, 48], "set": [1, 4, 8, 10, 12, 14, 21, 22, 24, 26, 29, 33, 34, 46, 48, 52], "sit": [1, 3, 14, 21, 26, 33, 48], "set_baseline_input_data_dir": [1, 12, 21], "make_data_dir": [1, 12, 21], "specifi": [1, 12, 13, 14, 19, 21, 24, 25, 26, 37, 39, 42, 47, 48], "clean_data_dir": [1, 12, 21], "remov": [1, 21, 24, 41, 52], "from": [1, 3, 4, 8, 10, 11, 13, 14, 21, 22, 24, 26, 33, 34, 37, 39, 40, 41, 42, 47, 48, 50, 52, 53], "clean_baseline_data_dir": [1, 12, 21], "make_config_json": [1, 12, 21], "make_classifi": [1, 12, 21], "csv": [1, 3, 4, 10, 21, 22, 34, 52, 53], "make_age_class": [1, 12, 21], "make_yield_curv": [1, 12, 21], "make_inventori": [1, 12, 21], "make_disturbance_ev": [1, 12, 21], "make_disturbance_typ": [1, 12, 21], "make_transition_rul": [1, 12, 21], "initi": [1, 21, 26, 29, 33, 39, 41, 42, 47], "method": [1, 3, 6, 8, 11, 14, 19, 21, 24, 26, 33, 39, 42, 47, 48, 50], "follow": [1, 13, 21, 26, 37, 47, 48], "standard": [1, 21], "import": [1, 21, 53], "tool": [1, 21, 33, 41, 53], "govern": [1, 21], "how": [1, 21], "run": [1, 4, 10, 12, 14, 21, 22, 26, 33, 34, 48], "forest": [1, 3, 4, 8, 10, 11, 12, 13, 14, 19, 21, 22, 24, 25, 26, 27, 29, 33, 34, 37, 39, 40, 42, 44, 48, 49, 50], "stand": [1, 21, 29, 50], "speci": [1, 8, 11, 13, 19, 21, 24, 25, 29, 37, 39, 40, 42, 44, 45, 50, 52], "soil": [1, 8, 11, 13, 19, 21, 24, 25, 26, 29, 37, 38, 39, 42, 48, 52], "etc": [1, 21], "composit": [1, 21, 24, 25], "paramet": [1, 3, 4, 6, 8, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 33, 34, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50], "int": [1, 8, 11, 12, 13, 14, 21, 24, 25, 26, 27, 29, 33, 37, 39, 42, 47, 48, 49], "The": [1, 3, 4, 6, 8, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 29, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53], "number": [1, 3, 8, 11, 21, 29, 33, 48], "tupl": [1, 8, 11, 21, 24, 29], "object": [1, 3, 8, 11, 13, 21, 24, 25, 27, 29, 37, 40, 41, 49], "datafram": [1, 3, 4, 8, 10, 11, 12, 13, 14, 19, 21, 22, 24, 25, 26, 27, 29, 33, 34, 37, 39, 40, 41, 42, 44, 48, 49, 50, 53], "list": [1, 8, 11, 12, 14, 21, 24, 26, 29, 33, 38, 39, 42, 45, 47, 48], "clean": [1, 12, 21, 24, 26, 33, 48], "output": [1, 3, 21, 26, 33, 48, 52, 53], "save": [1, 3, 12, 13, 21, 25, 37], "name": [1, 8, 11, 19, 21, 24, 26, 33, 39, 42, 45, 47, 48], "If": [1, 8, 21, 24], "provid": [1, 3, 6, 11, 19, 21, 23, 25, 26, 27, 29, 33, 39, 41, 42, 46, 47, 50, 53], "where": [1, 8, 11, 12, 13, 21, 24, 25, 33, 37, 39, 40, 41, 42, 48], "none": [1, 8, 11, 12, 14, 21, 24, 26, 29, 33, 39, 42, 46, 48], "subdirectori": [1, 21, 26, 48], "base": [1, 6, 8, 12, 13, 14, 21, 23, 24, 25, 26, 27, 33, 37, 41, 48, 49, 50, 52, 53], "given": [1, 6, 8, 11, 12, 13, 19, 21, 23, 24, 25, 26, 27, 33, 37, 41, 45, 48, 49], "panda": [1, 3, 4, 8, 10, 11, 12, 13, 14, 19, 21, 22, 24, 25, 26, 27, 33, 34, 37, 40, 41, 48, 49, 50, 52, 53], "rais": [1, 8, 12, 21, 24], "ar": [1, 8, 11, 21, 24, 25, 39, 41, 42, 50, 53], "them": [1, 3, 21], "all": [1, 8, 14, 21, 24, 26, 29, 33, 40, 41, 47, 48, 53], "should": [1, 21], "valid": [2, 4, 10, 14, 22, 26, 33, 34, 36, 41, 46, 48, 51], "function": [3, 19, 23, 26, 27, 29, 33, 50], "clear": [3, 4, 10, 21, 22, 34], "folder": [3, 4, 10, 22, 34], "retriev": [3, 4, 8, 10, 13, 19, 21, 22, 24, 25, 26, 33, 34, 37, 38, 39, 40, 42, 47, 48], "differ": [3, 13, 19, 25, 26, 33, 37, 48, 50], "merg": [3, 14, 25, 26, 33, 48], "analysi": [3, 19, 25, 26, 33, 48, 53], "validationdata": 3, "static": [3, 8, 11, 24, 39, 42], "work": 3, "includ": [3, 8, 12, 13, 21, 24, 25, 37, 39, 42, 48], "clear_validation_fold": [3, 4, 10, 22, 34], "output_data_path": 3, "gen_disturbance_statist": 3, "year": [3, 8, 11, 12, 13, 14, 21, 24, 25, 26, 27, 29, 33, 37, 39, 40, 42, 47, 48, 49, 50, 52, 53], "statist": [3, 13, 37], "identifi": [3, 4, 10, 12, 22, 26, 33, 34, 47, 48], "gen_age_class": 3, "gen_sit_ev": 3, "gen_baseline_forest": 3, "merge_ev": 3, "timestep": [3, 4, 10, 22, 26, 34, 48], "result": [3, 11, 19, 26, 33, 41, 48, 52, 53], "results_cont": 3, "variou": [3, 8, 12, 13, 19, 21, 24, 25, 26, 29, 33, 37, 38, 44, 47, 48, 50], "area": [3, 4, 8, 10, 11, 13, 19, 22, 24, 25, 26, 29, 34, 37, 40, 41, 44, 47, 48, 52, 53], "flux": [3, 4, 10, 14, 22, 26, 33, 34, 38, 41, 48, 53], "param": [3, 46], "pool": [3, 4, 10, 22, 26, 34, 38, 41, 48], "state": [3, 4, 10, 22, 24, 34, 41], "get_linked_ev": [3, 4, 10, 22, 34], "link": [3, 4, 10, 22, 34, 41], "error": [3, 4, 10, 22, 34, 52], "messag": [3, 4, 10, 22, 34, 52], "found": [3, 4, 8, 10, 22, 24, 34], "get_site_event_stats_by_timestep": [3, 4, 10, 22, 34], "site": [3, 4, 10, 22, 34, 46], "stat": [3, 4, 10, 22, 34], "get_age_class": [3, 4, 10, 22, 34], "get_sit_ev": [3, 4, 10, 22, 34], "get_baseline_forest": [3, 4, 10, 22, 34], "get_data_area": [3, 4, 10, 22, 34], "get_data_flux": [3, 4, 10, 22, 34], "get_data_param": [3, 4, 10, 22, 34], "get_data_pool": [3, 4, 10, 22, 34], "get_data_st": [3, 4, 10, 22, 34], "respons": [4, 6, 8, 10, 13, 14, 21, 22, 23, 24, 34, 37, 39, 40, 41, 44, 46, 48, 49, 50], "cbm_validationmanag": 4, "when": [4, 10, 11, 12, 14, 22, 29, 33, 34, 53], "To": [4, 10, 22, 34], "runner": [4, 14, 26, 33, 36, 39, 40, 42, 44, 51, 53], "attribut": [4, 10, 21, 22, 29, 34], "must": [4, 10, 22, 33, 34], "gen_valid": [4, 10, 14, 22, 26, 33, 34, 46, 48], "true": [4, 10, 14, 22, 26, 34, 48], "valdiat": [4, 10, 22, 34], "local": [4, 10, 14, 22, 34], "aidb": [6, 23, 39, 42], "It": [6, 8, 11, 13, 14, 19, 21, 24, 26, 29, 33, 37, 38, 41, 48, 53], "popul": [6, 8, 13, 23, 24, 25, 37], "predefin": 6, "templat": [6, 23], "map": [6, 8, 13, 19, 23, 24, 25, 37, 39, 42], "definit": [6, 41], "structur": [6, 8, 11, 13, 19, 23, 24, 25, 26, 27, 33, 37, 40, 44, 48, 49], "populate_templ": [6, 23], "being": [6, 11, 13, 23, 25, 37], "within": [8, 19, 21, 24, 25, 33, 41], "carbon": [8, 13, 14, 21, 24, 25, 26, 33, 37, 38, 41, 48, 52], "budget": [8, 13, 21, 24, 25, 26, 33, 37, 38, 41, 48], "model": [8, 13, 14, 21, 24, 25, 26, 33, 37, 38, 41, 48, 50], "aspect": 8, "legaci": [8, 11, 13, 24, 25, 37, 39, 42], "fill": [8, 11, 13, 24, 25, 37], "end": [8, 11, 24, 26, 47, 52, 53], "calibr": [8, 11, 12, 13, 14, 21, 24, 25, 26, 27, 33, 37, 39, 42, 48, 49, 52, 53], "baseline_forest_classifi": [8, 13, 24, 25, 27, 37, 49], "scenario_forest_classifi": [8, 13, 24, 25, 27, 37, 49], "disturbance_tim": [8, 24, 29, 44], "time": [8, 11, 24, 25, 26, 29, 40, 41, 44, 48, 50], "inform": [8, 11, 13, 21, 24, 25, 26, 29, 37, 39, 41, 42, 47, 48, 52], "disturbance_datafram": [8, 24], "scenario_disturbance_dict": [8, 24, 39, 42], "dictionari": [8, 11, 13, 24, 25, 26, 29, 33, 37, 39, 42, 45, 48], "legacy_disturbance_dict": [8, 24], "yield_name_dict": [8, 24, 39, 42], "targer": 8, "scenario_afforestation_area": [8, 13, 24, 25, 37], "calcul": [8, 11, 13, 24, 25, 26, 33, 37, 41, 48, 50], "valu": [8, 11, 13, 24, 25, 37, 39, 41, 42, 53], "legacy_disturbance_afforestation_area": [8, 11], "over": [8, 11, 13, 14, 24, 25, 26, 29, 33, 37, 48, 50], "disturbance_structur": [8, 11, 24], "fill_legacy_data": [8, 11], "fill_baseline_forest": [8, 11, 24], "fill_scenario_data": [8, 11, 24], "after": [8, 24, 26], "_process_scenario_harvest_data": [8, 11, 24], "tracker": [8, 11, 24, 29], "row_data": [8, 11, 24], "context": [8, 11, 12, 13, 24, 29, 37, 38, 41], "process": [8, 11, 13, 19, 24, 25, 37, 38, 41], "harvest": [8, 11, 24, 30, 36, 39, 40, 42, 44, 51, 52], "track": [8, 11, 24, 29], "chang": [8, 21, 24], "singl": [8, 14, 24, 26, 29, 33, 41, 48, 53], "row": [8, 11, 24, 41, 52], "addit": [8, 11, 24], "_track_scenario_harvest": [8, 11, 24], "current": [8, 24, 29], "proport": [8, 13, 24, 25, 29, 37, 39, 42, 45, 52], "_drop_zero_area_row": [8, 11, 24], "disturbance_df": [8, 11, 24], "drop": [8, 11, 14, 24, 26, 33, 48], "amount": [8, 24], "column": [8, 13, 14, 19, 24, 25, 26, 33, 37, 38, 39, 41, 42, 47, 48, 52], "zero": [8, 11, 24, 29, 41], "_get_legacy_classifier_combin": [8, 11, 24], "possibl": [8, 24], "combin": [8, 11, 13, 24, 25, 37, 41], "self": [8, 14, 24, 26, 29, 33, 48], "_get_scenario_classifier_combin": [8, 11, 24], "_get_classifier_combin": [8, 11, 24], "_get_static_default": [8, 11, 24], "default": [8, 11, 13, 24, 25, 29, 37, 39, 42], "each": [8, 11, 12, 13, 14, 19, 21, 24, 25, 26, 33, 37, 39, 42, 48, 50, 52, 53], "_generate_row": [8, 11, 24], "forest_typ": [8, 11, 13, 24, 25, 37], "yield_class": [8, 11, 13, 24, 25, 29, 37, 45, 52], "dist": [8, 11, 24, 29], "yr": [8, 11, 24], "id": [8, 13, 24, 25, 37, 39, 42], "_process_scenario_row_data": [8, 11, 24], "relev": [8, 13, 21, 24, 25, 37, 38, 39, 41, 42, 52], "_process_row_data": [8, 11], "_handle_legacy_scenario_forest": [8, 11, 24], "updat": [8, 11, 13, 24, 25, 37, 39, 41, 42], "_handle_scenario_afforest": [8, 11, 24], "non": [8, 24, 39, 41, 42], "classifier3": [8, 24], "match": [8, 24], "typeerror": [8, 24], "dure": [8, 24], "0": [8, 13, 24, 25, 29, 37, 52, 53], "doe": [8, 24], "_handle_legacy_afforest": [8, 11], "appropri": 8, "_handle_legacy_forest": [8, 11, 24], "_update_disturbance_tim": [8, 11, 24], "valueerror": [8, 24], "ani": [8, 24], "oper": [8, 24, 26], "fail": [8, 24], "due": [8, 24], "invalid": [8, 24], "keyerror": [8, 24], "requir": [8, 19, 21, 24, 26, 33, 48], "get_legacy_forest_area_breakdown": [8, 11, 24], "breakdown": [8, 11, 24, 40, 44], "legacy_disturbance_track": [8, 11, 24], "appli": [8, 11, 19, 24, 50], "forsimvalidationmanag": 10, "forestsimrunn": [10, 14], "sim": 11, "forestsimdistrub": [11, 12], "user": [11, 46], "wish": 11, "siumul": 11, "per": [11, 21, 50], "explicitli": 11, "defin": [11, 21, 24, 33, 47], "afforesataion_annual_data": 11, "pd": [11, 12, 13, 14, 25, 26, 33, 37, 48, 52, 53], "annual": [11, 12, 13, 14, 25, 26, 33, 37, 38, 41, 48, 52, 53], "_scenario_afforestation_area": 11, "rel": 11, "nest": [11, 29], "correspond": [11, 19, 24], "consid": [11, 24], "float": [11, 29, 41, 45], "about": [11, 13, 37], "have": 11, "classif": 11, "call": 11, "deleg": 11, "forestsimfactori": [12, 14], "afforest_data_annu": [12, 14], "affores": [12, 14], "ha": [12, 13, 14, 29, 37], "been": [12, 14], "serv": [12, 21, 25], "central": [12, 13, 21, 24, 37], "point": [12, 25, 52, 53], "creation": [12, 13, 21, 25, 33, 37, 41, 48], "necessari": [12, 21, 26, 33, 46, 48], "final": [12, 14, 21, 48, 52], "forestsiminventori": 13, "forsiminventori": 13, "age_df": [13, 25, 37], "legacy_year": [13, 25, 37], "soils_dict": [13, 25, 37, 39, 42], "yield_baseline_dict": [13, 25, 37, 39, 42], "respect": [13, 37], "nation": [13, 37, 39, 40, 42], "legacy_forest_inventori": [13, 25, 37], "make_inventory_structur": [13, 25, 37], "delai": [13, 25, 37], "unfccclc": [13, 25, 37], "fill_baseline_inventori": [13, 25, 37], "inventory_df": [13, 25, 37], "ageid": [13, 25, 37], "inventory_iter": [13, 25, 37], "iter": [13, 14, 25, 26, 33, 37, 48], "afforestation_inventori": [13, 25, 37], "scenario_afforestation_dict": [13, 25, 37], "combined_mineral_afforestation_dict": [13, 25, 37], "miner": [13, 25, 37, 39, 42], "legacy_afforest": [13, 25, 37], "legacy_afforestation_annu": [13, 25, 37], "afforestation_annual_dict": [13, 25, 37], "afforestation_df": [13, 25, 37], "convert": [13, 37], "format": [13, 19, 25, 37], "report": [13, 37, 40], "offic": [13, 37], "peat": [13, 37, 39, 42], "fals": [13, 14, 25, 26, 33, 37, 48], "2": [13, 25, 37, 52], "option": [13, 25, 29, 37, 39, 42], "usingid": [13, 25, 37], "unfccc": [13, 25, 37], "land": [13, 25, 37, 41, 48, 52], "code": [13, 25, 37], "l": [13, 25, 37, 53], "scenario_afforesation_dict": [13, 25, 37], "scenarioafforestationarea": [13, 25, 37], "total": [13, 19, 25, 26, 37, 38, 41, 48, 52, 53], "sum": [13, 37, 53], "group": [13, 29, 37], "peat_afforest": [13, 37], "col1": [13, 37], "sum1": [13, 37], "col2": [13, 37], "sum2": [13, 37], "mineral_afforest": [13, 37], "year1": [13, 37], "species1": [13, 37], "yield_class1": [13, 37], "total1": [13, 37], "yield_class2": [13, 37], "total2": [13, 37], "species2": [13, 37], "year2": [13, 37], "afforest_data": [14, 26, 33, 48, 52, 53], "gen_baselin": [14, 26, 33, 46, 48], "sit_path": [14, 26, 33, 46, 48], "afforestdata": [14, 26, 33, 48], "afforestdataannu": 14, "scenariodata": [14, 26, 33, 48], "bool": [14, 26, 33, 46, 48], "flag": [14, 25, 26], "paths_class": [14, 26, 33, 48], "validation_path": [14, 26, 33, 48], "baseline_conf_path": [14, 26, 33, 48], "cbm_data_class": [14, 26, 33, 48], "cbm_runner_class": 14, "index": [14, 26, 33, 40, 47, 48], "uniqu": [14, 33, 48], "indic": [14, 29, 33, 46, 47, 48], "generate_base_input_data": [14, 26, 48], "generate_input_data": [14, 26, 33, 48, 52, 53], "run_aggregate_scenario": [14, 26, 33, 48, 52, 53], "aggreg": [14, 19, 26, 33, 48, 52, 53], "run_flux_scenario": [14, 26, 33, 48, 52, 53], "extern": [14, 19, 21, 24, 25, 26, 33, 46, 48], "can": [14, 26, 48, 50, 52], "stock": [14, 26, 33, 48, 52], "add": [14, 26, 29, 33, 41, 48], "select": [14, 26, 33, 48, 52], "duplic": [14, 26, 33, 48], "concaten": [14, 26, 33, 41, 48], "ad": [14, 26, 33, 39, 41, 42, 48], "baseline_input_conf": [16, 28, 35, 36, 51], "generated_input_data": [16, 28, 35, 36, 51], "forest_sim_validation_manag": [16, 36, 51], "forestsim_disturb": [16, 36, 51], "forestsim_factori": [16, 36, 51], "forestsim_inventori": [16, 36, 51], "forestsim_runn": [16, 36, 51], "analyz": [19, 25, 33], "cover": 19, "catchment": [19, 21, 23, 24, 25, 26, 47], "leverag": [19, 21, 33, 48], "api": 19, "servic": 19, "fetch": 19, "techniqu": 19, "filter": [19, 41, 52], "present": [19, 47], "catchmentforest": 19, "transform": [19, 25, 41], "depend": 19, "catchment_data_api": 19, "catchmentdataapi": 19, "librari": [19, 33], "manipul": [19, 25, 39, 42], "access": [19, 25, 39, 41, 42], "get_catchment_forest": 19, "raw": [19, 26, 33, 48], "pivot": [19, 25], "view": [19, 25], "hectar": [19, 29, 40, 44], "design": [21, 24, 33, 47], "focus": [21, 26, 33], "geospati": 21, "hub": [21, 53], "prepar": [21, 24, 26, 33, 41, 48], "store": [21, 24, 33, 48, 52], "crucial": [21, 25, 50], "effici": 21, "interact": 21, "seamlessli": 21, "geodatamanag": [21, 26, 42], "suit": [21, 33], "detail": [21, 24, 25, 26], "environment": 21, "task": 21, "autom": 21, "tailor": [21, 24, 25], "period": [21, 26, 48], "activ": [21, 24, 25, 33, 47], "scope": [21, 33], "resourc": [21, 24, 25], "establish": [21, 24, 33, 41], "fresh": 21, "except": [21, 52], "essenti": [21, 25, 48], "ones": 21, "produc": [21, 24, 26], "outlin": 21, "compil": 21, "geocbm_validationmanag": 22, "georunn": [22, 26], "utilis": 23, "framework": [24, 33], "involv": [24, 26], "level": [24, 25, 26], "support": [24, 33], "under": [24, 48, 53], "vari": 24, "target": [24, 48, 52, 53], "repositori": 24, "hold": [24, 25, 41], "easier": 24, "refer": [24, 25], "guid": [24, 25], "setup": [24, 26, 33], "project": [24, 25, 48, 53], "break": [24, 25], "down": [24, 25], "record": [24, 29], "histor": [24, 25, 26, 33], "incorpor": [24, 25], "adjust": [24, 25], "accordingli": 24, "up": [24, 26, 46, 48, 50], "dataset": [24, 47, 50], "aid": [24, 25, 26, 48], "new": [24, 25, 29], "growth": [24, 25, 29, 38, 39, 41, 42, 50], "condit": [24, 29], "accur": [25, 33], "feed": 25, "enabl": 25, "util": [25, 26, 33, 48], "comprehens": [25, 33, 48], "categor": 25, "characterist": [25, 29], "foundat": 25, "like": [25, 33, 52], "account": 25, "easi": 25, "irish": 26, "geo": 26, "execut": [26, 33, 48], "orchestr": [26, 48], "insight": [26, 33], "flux_class": 26, "fluxmanag": [26, 41], "agb": [26, 48, 52], "bgb": [26, 48, 52], "deadwood": [26, 38, 48, 52], "litter": [26, 38, 41, 48, 52], "__init__": [26, 29, 47], "cleanup": 26, "afforestation_scenarios_structur": [26, 33, 48], "across": [26, 33, 41, 48, 50, 53], "cbm_baseline_forest": [26, 48], "conduct": [26, 33, 48], "cbm_aggregate_scenario": [26, 33, 48], "along": 26, "libcbm_scenario_flux": [26, 33, 48], "libcbm": [26, 33, 48], "cbm_scenario_flux": [26, 48], "forest_data": [26, 48], "compon": [26, 48], "ecosystem": [26, 48, 52, 53], "sinc": [26, 29, 48], "last": [26, 29, 48], "_add_year": 26, "make_transition_rules_structur": [27, 49], "catchment_forest_cov": [28, 36, 51], "geo_cbm_data_factori": [28, 36, 51], "geo_cbm_validation_manag": [28, 36, 51], "geo_create_json": [28, 36, 51], "geo_disturb": [28, 36, 51], "geo_inventori": [28, 36, 51], "geo_runn": [28, 36, 51], "geo_transit": [28, 36, 51], "foreststand": 29, "its": 29, "product": [29, 41], "affect": 29, "start": [29, 52], "since_last_dist": 29, "age_stand": 29, "increment": 29, "one": 29, "reset_dist": 29, "reset": 29, "increas": 29, "disturbedforeststand": 29, "afforestationtrack": 29, "keep": 29, "occur": 29, "also": [29, 38, 53], "taken": 29, "place": 29, "disturbed_stand": 29, "move_to_next_ag": 29, "forest_disturb": 29, "get_stand_data_for_year": 29, "get_disturbance_data_for_year": 29, "get_stand_data_by_ag": 29, "assess": 33, "effort": 33, "ireland": 33, "intend": 33, "larg": 33, "historicafforrunn": [33, 34], "primarili": 33, "offer": 33, "implic": 33, "past": 33, "boolean": [33, 46, 48], "whether": [33, 46, 48], "environ": 33, "critic": 33, "reliabl": 33, "qualiti": 33, "overse": 33, "align": 33, "collect": 33, "mark": 33, "termin": 33, "tempor": 33, "runner_class": 33, "gather": 33, "overview": 33, "holist": 33, "storag": 33, "outcom": 33, "run_libcbm_flux_scenario": 33, "comparison": 33, "invok": 33, "enhanc": 33, "depth": 33, "historicvalidationmanag": 34, "historic_affor_runn": [35, 36, 51], "historic_affor_validation_manag": [35, 36, 51], "cbm_valid": [36, 51], "configuration_data": [36, 51], "databas": [36, 40, 51], "forest_sim": [36, 51], "geo_cbm_runn": [36, 46, 51], "harvest_manag": [36, 51], "historic_affor": [36, 51], "resource_manag": [36, 51], "cbm_pool": [36, 43, 51], "cbm_runner_data_manag": [36, 43, 51], "database_manag": [36, 43, 51], "flux_manag": [36, 43, 51], "geo_cbm_runner_data_manag": [36, 43, 51], "parser": [36, 43, 51], "scenario_data_fetch": [36, 43, 51], "cbm_data_factori": [36, 51], "cbm_validation_manag": [36, 51], "create_json": [36, 51], "yield_curv": [36, 51], "encapsul": 38, "biomass": [38, 41, 53], "matter": [38, 53], "get_above_ground_biomass_pool": 38, "abov": 38, "ground": 38, "get_below_ground_biomass_pool": 38, "below": [38, 52], "get_deadwood_pool": 38, "get_litter_pool": 38, "get_soil_organic_matter_pool": 38, "get_annual_process_flux": 38, "above_ground_biomass_pool": 38, "below_ground_biomass_pool": 38, "soil_organic_matt": 38, "annual_process_flux": 38, "get_disturbance_flux_column": 38, "get_total_litt": 38, "get_gross_growth_ag": 38, "gross": [38, 41], "get_gross_growth_bg": 38, "get_annual_process_column": 38, "config_fil": [39, 42], "config_data": [39, 42], "yaml": [39, 42, 52, 53], "forest_baseline_year": [39, 42], "afforestation_baselin": [39, 42], "cbm_default_config": [39, 42], "non_forest_dict": [39, 42], "non_forest_soil": [39, 42], "split": [39, 42], "between": [39, 42], "forest_type_kei": [39, 42], "pre": [39, 42], "soc": [39, 42], "disturbances_config": [39, 42], "species_name_dict": [39, 42], "afforestation_yield_name_dict": [39, 42], "proprot": [39, 42], "disturbance_col": [39, 42], "static_disturbance_col": [39, 42], "transition_col": [39, 42], "get_config_data": [39, 42], "get_non_forest_dict": [39, 42], "get_non_forest_soil": [39, 42], "get_forest_type_kei": [39, 42], "get_soils_dict": [39, 42], "get_classifi": [39, 42], "get_disturbances_config": [39, 42], "get_yield_name_dict": [39, 42], "get_species_name_dict": [39, 42], "get_afforestation_yield_name_dict": [39, 42], "get_yield_baseline_dict": [39, 42], "get_disturbance_col": [39, 42], "get_static_disturbance_col": [39, 42], "get_transition_col": [39, 42], "get_map": [39, 42], "get_forest_baseline_year": [39, 42], "equal": [39, 42], "get_afforestation_baselin": 39, "1990": 39, "get_scenario_data": [39, 42], "goblin": [39, 42], "thin": [39, 42, 45, 52], "get_scenario_disturbance_dict": [39, 42], "gen_scenario_disturbance_dict": [39, 42], "get_baseline_disturbance_dict": [39, 42], "scenario_dist": [39, 42], "get_legacy_disturbance_dict": [39, 42], "clearfel": [39, 42, 45, 52], "applic": 40, "database_dir": 40, "locat": 40, "engin": 40, "sqlalchemi": 40, "connect": 40, "data_engine_creat": 40, "get_forest_inventory_age_strucutur": 40, "get_forest_cbm_yield": 40, "get_forest_kb_yield": 40, "kb": [40, 44], "get_nir_forest_data_ha": 40, "nir": [40, 44], "get_cso_species_breakdown": 40, "cso": [40, 44], "get_afforestation_areas_nir": 40, "get_afforestation_areas_kb": 40, "get_forest_harvest_nir": 40, "get_kb_yield_curv": 40, "get_disturbance_typ": [40, 45], "get_disturbance_tim": 40, "get_disturbance_data": 40, "fir": [40, 44], "afforestation_nir": 40, "tabl": [40, 50], "kb_afforestation_area": 40, "invetori": 40, "scale": 41, "cbmpool": 41, "while": 41, "scale_flux_data": 41, "filter_flux_data": 41, "flux_results_datafram": 41, "create_disturbance_flux": 41, "create_total_litt": 41, "create_gross_growthag": 41, "create_gross_growthbg": 41, "create_process_flux": 41, "flux_data": 41, "unscal": 41, "numer": 41, "factor": 41, "elimin": 41, "step": 41, "movement": 41, "happen": 41, "onli": 41, "augment": 41, "readi": 41, "_add_identifi": 41, "land_class": 41, "disturbance_typ": [41, 44], "other": 41, "seri": 41, "aboveground": 41, "belowground": 41, "concatenated_fluxes_data": 41, "forest_age_structur": 44, "forest_cbm_yield": [44, 50], "forest_kb_yield": [44, 50], "nir_forest_data_ha": 44, "cso_species_breakdown": 44, "afforestation_areas_nir": 44, "afforestation_areas_kb": 44, "kb_yield_curv": [44, 50], "harvest_areas_nir": 44, "disturbance_data": 44, "pars": 45, "get_classifier_list": 45, "get_age_classifi": 45, "get_inventory_speci": 45, "get_yield_class_proport": 45, "species_nam": 45, "class": [45, 53], "get_clearfell_baselin": 45, "get_thinning_baselin": 45, "external_path": 46, "setup_runner_path": 46, "setup_geo_runner_path": 46, "make_external_dir": 46, "get_generated_input_data_path": 46, "get_baseline_conf_path": 46, "get_validation_path": 46, "scenariodatafetch": 47, "extract": 47, "piec": 47, "get_column_index": 47, "column_nam": 47, "get_afforestation_end_year": 47, "get_catchment_nam": 47, "get_scenario_list": 47, "get_afforest_scenario_index": 47, "1": [47, 51, 52], "special": 47, "avail": 47, "give": 48, "estim": [48, 50, 53], "ultim": 48, "flux_pool": 48, "directli": [48, 50, 53], "contribut": 48, "impact": 48, "strategi": 48, "yieldcurv": 50, "yield_table_generater_method1": 50, "first": [50, 52], "yield_table_generater_method2": 50, "second": 50, "yield_table_generater_method3": 50, "third": 50, "mathemat": 50, "cohort": 50, "classmethod": 50, "formula": 50, "100": [50, 52], "page": 51, "auto": 51, "document": 51, "cbm_runner": [51, 52], "sphinx": 51, "autoapi": 51, "here": 52, "demonstart": 52, "potenti": 52, "firstli": 52, "we": 52, "matplotlib": 52, "pyplot": 52, "plt": 52, "o": [52, 53], "warn": 52, "out": 52, "runtimewarn": 52, "unsupport": 52, "linux": 52, "distribut": 52, "filterwarn": 52, "ignor": 52, "categori": 52, "basic": [52, 53], "cfs3": 52, "In": 52, "our": 52, "test": 52, "runner_input": [52, 53], "read_csv": [52, 53], "join": [52, 53], "cbm_afforest": [52, 53], "index_col": [52, 53], "config": [52, 53], "cbm_factori": [52, 53], "sc_data": [52, 53], "scenario_datafram": [52, 53], "2020": [52, 53], "make": 52, "export": 52, "mkdir": 52, "jupyter_exampl": 52, "data_path": 52, "see": 52, "what": 52, "look": 52, "print": 52, "total_area": 52, "sitka": 52, "yc17_20": 52, "000000": 52, "yc20_24": 52, "yc24_30": 52, "3": 52, "sgb": 52, "yc6": 52, "4": 52, "5": 52, "6": 52, "417595": 52, "058325": 52, "7": 52, "715935": 52, "503074": 52, "8": 52, "208791": 52, "204651": 52, "9": 52, "357956": 52, "908635": 52, "10": 52, "11": 52, "12": 52, "418877": 52, "449812": 52, "13": 52, "718134": 52, "067390": 52, "14": 52, "508198": 52, "559238": 52, "15": 52, "871268": 52, "430782": 52, "16": 52, "5823": 52, "216747": 52, "17": 52, "9983": 52, "469700": 52, "open": 52, "r": 52, "config_cont": 52, "read": 52, "05": 52, "age_class": 52, "max_ag": 52, "age_interv": 52, "yc13_16": 52, "37": 52, "26": 52, "20": 52, "yc10": 52, "unnam": 52, "cattl": 52, "system": 52, "manur": 52, "dairi": 52, "pop": 52, "tank": 52, "solid": 52, "liquid": 52, "172390": 52, "090632": 52, "beef": 52, "lowland": 52, "sheep": 52, "upland": 52, "prod": 52, "mm_storag": 52, "ef": 52, "087908": 52, "500607": 52, "27807": 52, "487071": 52, "rewet": 52, "grass": 52, "08792": 52, "9453": 52, "pastur": 52, "fertilis": 52, "136": 52, "870525": 52, "37812": 52, "broadleaf": 52, "105": 52, "001711": 52, "591629": 52, "2050": 52, "x": 52, "29": 52, "to_csv": [52, 53], "c_stock": 52, "c_flux": [52, 53], "let": 52, "try": 52, "displai": 52, "alwai": 52, "memori": 52, "without": 52, "disk": 52, "2019": 52, "509702e": 52, "07": 52, "007660e": 52, "317278e": 52, "385597e": 52, "06": 52, "874152e": 52, "554735e": 52, "08": 52, "605338e": 52, "027981e": 52, "213407e": 52, "828799e": 52, "877434e": 52, "560704e": 52, "2021": 52, "740431e": 52, "056875e": 52, "108986e": 52, "036936e": 52, "880228e": 52, "569021e": 52, "2022": 52, "835332e": 52, "076690e": 52, "013026e": 52, "339414e": 52, "883230e": 52, "574222e": 52, "2023": 52, "945693e": 52, "099874e": 52, "919209e": 52, "538638e": 52, "885986e": 52, "580463e": 52, "91": 52, "2046": 52, "460228e": 52, "529216e": 52, "795033e": 52, "825040e": 52, "334927e": 52, "908649e": 52, "92": 52, "2047": 52, "546817e": 52, "724927e": 52, "802949e": 52, "963402e": 52, "370720e": 52, "033016e": 52, "93": 52, "2048": 52, "635960e": 52, "924829e": 52, "818991e": 52, "109923e": 52, "408003e": 52, "162135e": 52, "94": 52, "2049": 52, "722817e": 52, "119123e": 52, "846081e": 52, "273142e": 52, "446918e": 52, "291344e": 52, "95": 52, "809095e": 52, "311398e": 52, "882134e": 52, "440890e": 52, "487282e": 52, "421266e": 52, "96": 52, "628587e": 52, "046655e": 52, "041189e": 52, "394891e": 52, "32782": 52, "722384": 52, "986068e": 52, "343809e": 52, "873727e": 52, "038789e": 52, "081489e": 52, "28036": 52, "565426": 52, "285786e": 52, "594074e": 52, "004208e": 52, "613765e": 52, "998219e": 52, "30031": 52, "237794": 52, "283049e": 52, "101832e": 52, "314397e": 52, "370734e": 52, "001116e": 52, "27664": 52, "808330": 52, "239745e": 52, "2024": 52, "021930e": 52, "125158e": 52, "038458e": 52, "900112e": 52, "28583": 52, "277742": 52, "491943e": 52, "88": 52, "289463e": 52, "889398e": 52, "951289e": 52, "04": 52, "343319e": 52, "344049": 52, "593366": 52, "188574e": 52, "89": 52, "666000e": 52, "958768e": 52, "256618e": 52, "381846e": 52, "357953": 52, "095773": 52, "244713e": 52, "90": 52, "929120e": 52, "002365e": 52, "587245e": 52, "463473e": 52, "372803": 52, "227993": 52, "292649e": 52, "675698e": 52, "940770e": 52, "807114e": 52, "635331e": 52, "389221": 52, "716879": 52, "292173e": 52, "640209e": 52, "925848e": 52, "622322e": 52, "674377e": 52, "403584": 52, "090830": 52, "300625e": 52, "limit": 52, "rang": 52, "data_to_plot": 52, "2030": 52, "scenario_to_plot": 52, "label": 52, "xlabel": 52, "ylabel": 52, "tcarbon": 52, "titl": 52, "f": 52, "legend": 52, "show": 52, "filenam": 52, "listdir": 52, "file_path": 52, "isfil": 52, "delet": 52, "e": 52, "reason": 52, "direcotri": 52, "rmdir": 52, "g": 53, "ener": 53, "verview": 53, "b": 53, "ackcast": 53, "approach": 53, "ivestock": 53, "IN": 53, "tensif": 53, "lifecycl": 53, "packag": 53, "requri": 53, "libcbm_pi": 53, "dead": 53, "These": 53, "volumn": 53, "t": 53, "c": 53, "git": 53, "prompt": 53, "enter": 53, "your": 53, "usernam": 53, "password": 53, "access_token": 53, "repo": 53, "pass": 53, "own": 53, "github": 53, "pip": 53, "http": 53, "com": 53, "colmduff": 53, "main": 53, "take": 53, "divid": 53, "evenli": 53, "def": 53, "results_path": 53, "runner_result": 53, "c_aggreg": 53, "__name__": 53, "__main__": 53, "term": 53, "mit": 53}, "objects": {"": [[36, 0, 0, "-", "cbm_runner"]], "cbm_runner": [[0, 0, 0, "-", "baseline_input_conf"], [1, 0, 0, "-", "cbm_data_factory"], [2, 0, 0, "-", "cbm_validation"], [4, 0, 0, "-", "cbm_validation_manager"], [5, 0, 0, "-", "configuration_data"], [6, 0, 0, "-", "create_json"], [7, 0, 0, "-", "database"], [8, 0, 0, "-", "disturbances"], [16, 0, 0, "-", "forest_sim"], [17, 0, 0, "-", "generated_input_data"], [28, 0, 0, "-", "geo_cbm_runner"], [30, 0, 0, "-", "harvest_manager"], [35, 0, 0, "-", "historic_affor"], [37, 0, 0, "-", "inventory"], [43, 0, 0, "-", "resource_manager"], [48, 0, 0, "-", "runner"], [49, 0, 0, "-", "transition"], [50, 0, 0, "-", "yield_curves"]], "cbm_runner.baseline_input_conf": [[0, 1, 1, "", "get_local_dir"]], "cbm_runner.cbm_data_factory": [[1, 2, 1, "", "DataFactory"]], "cbm_runner.cbm_data_factory.DataFactory": [[1, 3, 1, "", "afforestation_data"], [1, 4, 1, "id4", "clean_baseline_data_dir"], [1, 4, 1, "id3", "clean_data_dir"], [1, 3, 1, "", "data_manager_class"], [1, 3, 1, "", "disturbance_class"], [1, 3, 1, "", "inventory_class"], [1, 3, 1, "", "json_creator_class"], [1, 3, 1, "", "loader_class"], [1, 4, 1, "id7", "make_age_classes"], [1, 4, 1, "id6", "make_classifiers"], [1, 4, 1, "id5", "make_config_json"], [1, 4, 1, "id2", "make_data_dirs"], [1, 4, 1, "id10", "make_disturbance_events"], [1, 4, 1, "id11", "make_disturbance_type"], [1, 4, 1, "id9", "make_inventory"], [1, 4, 1, "id12", "make_transition_rules"], [1, 4, 1, "id8", "make_yield_curves"], [1, 4, 1, "id1", "set_baseline_input_data_dir"], [1, 4, 1, "id0", "set_input_data_dir"], [1, 3, 1, "", "transition_class"]], "cbm_runner.cbm_validation": [[3, 0, 0, "-", "validation"]], "cbm_runner.cbm_validation.validation": [[3, 2, 1, "", "ValidationData"]], "cbm_runner.cbm_validation.validation.ValidationData": [[3, 4, 1, "", "clear_validation_folder"], [3, 4, 1, "", "gen_age_classes"], [3, 4, 1, "", "gen_baseline_forest"], [3, 4, 1, "", "gen_disturbance_statistics"], [3, 4, 1, "", "gen_sit_events"], [3, 4, 1, "", "get_age_classes"], [3, 4, 1, "", "get_baseline_forest"], [3, 4, 1, "", "get_data_area"], [3, 4, 1, "", "get_data_flux"], [3, 4, 1, "", "get_data_params"], [3, 4, 1, "", "get_data_pools"], [3, 4, 1, "", "get_data_state"], [3, 4, 1, "", "get_linked_events"], [3, 4, 1, "", "get_sit_events"], [3, 4, 1, "", "get_site_event_stats_by_timestep"], [3, 4, 1, "", "merge_events"], [3, 4, 1, "", "results_contents"]], "cbm_runner.cbm_validation_manager": [[4, 2, 1, "", "CBM_ValidationManager"]], "cbm_runner.cbm_validation_manager.CBM_ValidationManager": [[4, 4, 1, "id0", "clear_validation_folder"], [4, 4, 1, "id3", "get_age_classes"], [4, 4, 1, "id5", "get_baseline_forest"], [4, 4, 1, "id6", "get_data_area"], [4, 4, 1, "id7", "get_data_flux"], [4, 4, 1, "id8", "get_data_params"], [4, 4, 1, "id9", "get_data_pools"], [4, 4, 1, "id10", "get_data_state"], [4, 4, 1, "id1", "get_linked_events"], [4, 4, 1, "id4", "get_sit_events"], [4, 4, 1, "id2", "get_site_event_stats_by_timestep"], [4, 3, 1, "", "path"]], "cbm_runner.configuration_data": [[5, 1, 1, "", "get_local_dir"]], "cbm_runner.create_json": [[6, 2, 1, "", "CreateJSON"]], "cbm_runner.create_json.CreateJSON": [[6, 3, 1, "", "data_manager_class"], [6, 3, 1, "", "loader_class"], [6, 4, 1, "id0", "populate_template"], [6, 3, 1, "", "template"]], "cbm_runner.database": [[7, 1, 1, "", "get_local_dir"]], "cbm_runner.disturbances": [[8, 2, 1, "", "Disturbances"]], "cbm_runner.disturbances.Disturbances": [[8, 4, 1, "", "_drop_zero_area_rows"], [8, 4, 1, "", "_generate_row"], [8, 4, 1, "", "_get_classifier_combinations"], [8, 4, 1, "", "_get_legacy_classifier_combinations"], [8, 4, 1, "", "_get_scenario_classifier_combinations"], [8, 4, 1, "", "_get_static_defaults"], [8, 4, 1, "", "_handle_legacy_afforestation"], [8, 4, 1, "", "_handle_legacy_forest"], [8, 4, 1, "", "_handle_legacy_scenario_forest"], [8, 4, 1, "", "_handle_scenario_afforestation"], [8, 4, 1, "", "_process_row_data"], [8, 4, 1, "", "_process_scenario_harvest_data"], [8, 4, 1, "", "_process_scenario_row_data"], [8, 4, 1, "", "_track_scenario_harvest"], [8, 4, 1, "", "_update_disturbance_timing"], [8, 3, 1, "", "afforestation_data"], [8, 3, 1, "", "baseline_forest_classifiers"], [8, 3, 1, "", "calibration_year"], [8, 3, 1, "", "data_manager_class"], [8, 3, 1, "", "disturbance_dataframe"], [8, 4, 1, "", "disturbance_structure"], [8, 3, 1, "", "disturbance_timing"], [8, 4, 1, "", "fill_baseline_forest"], [8, 4, 1, "", "fill_legacy_data"], [8, 4, 1, "", "fill_scenario_data"], [8, 3, 1, "", "forest_end_year"], [8, 4, 1, "", "get_legacy_forest_area_breakdown"], [8, 3, 1, "", "inventory_class"], [8, 4, 1, "", "legacy_disturbance_afforestation_area"], [8, 3, 1, "", "legacy_disturbance_dict"], [8, 4, 1, "", "legacy_disturbance_tracker"], [8, 3, 1, "", "loader_class"], [8, 4, 1, "", "scenario_afforestation_area"], [8, 3, 1, "", "scenario_disturbance_dict"], [8, 3, 1, "", "scenario_forest_classifiers"], [8, 3, 1, "", "yield_name_dict"]], "cbm_runner.forest_sim": [[9, 0, 0, "-", "baseline_input_conf"], [10, 0, 0, "-", "forest_sim_validation_manager"], [11, 0, 0, "-", "forestsim_disturbances"], [12, 0, 0, "-", "forestsim_factory"], [13, 0, 0, "-", "forestsim_inventory"], [14, 0, 0, "-", "forestsim_runner"], [15, 0, 0, "-", "generated_input_data"]], "cbm_runner.forest_sim.baseline_input_conf": [[9, 1, 1, "", "get_local_dir"]], "cbm_runner.forest_sim.forest_sim_validation_manager": [[10, 2, 1, "", "ForSimValidationManager"]], "cbm_runner.forest_sim.forest_sim_validation_manager.ForSimValidationManager": [[10, 4, 1, "id0", "clear_validation_folder"], [10, 4, 1, "id3", "get_age_classes"], [10, 4, 1, "id5", "get_baseline_forest"], [10, 4, 1, "id6", "get_data_area"], [10, 4, 1, "id7", "get_data_flux"], [10, 4, 1, "id8", "get_data_params"], [10, 4, 1, "id9", "get_data_pools"], [10, 4, 1, "id10", "get_data_state"], [10, 4, 1, "id1", "get_linked_events"], [10, 4, 1, "id4", "get_sit_events"], [10, 4, 1, "id2", "get_site_event_stats_by_timestep"], [10, 3, 1, "", "path"]], "cbm_runner.forest_sim.forestsim_disturbances": [[11, 2, 1, "", "ForestSimDistrubances"]], "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances": [[11, 4, 1, "id8", "_drop_zero_area_rows"], [11, 4, 1, "id13", "_generate_row"], [11, 4, 1, "id11", "_get_classifier_combinations"], [11, 4, 1, "id9", "_get_legacy_classifier_combinations"], [11, 4, 1, "id10", "_get_scenario_classifier_combinations"], [11, 4, 1, "id12", "_get_static_defaults"], [11, 4, 1, "id18", "_handle_legacy_afforestation"], [11, 4, 1, "id19", "_handle_legacy_forest"], [11, 4, 1, "id16", "_handle_legacy_scenario_forest"], [11, 4, 1, "id17", "_handle_scenario_afforestation"], [11, 4, 1, "id15", "_process_row_data"], [11, 4, 1, "id6", "_process_scenario_harvest_data"], [11, 4, 1, "id14", "_process_scenario_row_data"], [11, 4, 1, "id0", "_scenario_afforestation_area"], [11, 4, 1, "id7", "_track_scenario_harvest"], [11, 4, 1, "id20", "_update_disturbance_timing"], [11, 3, 1, "", "afforesataion_annual_data"], [11, 3, 1, "", "afforestation_data"], [11, 3, 1, "", "calibration_year"], [11, 3, 1, "", "config_path"], [11, 4, 1, "id2", "disturbance_structure"], [11, 4, 1, "id4", "fill_baseline_forest"], [11, 4, 1, "id3", "fill_legacy_data"], [11, 4, 1, "id5", "fill_scenario_data"], [11, 3, 1, "", "forest_end_year"], [11, 4, 1, "id21", "get_legacy_forest_area_breakdown"], [11, 4, 1, "id1", "legacy_disturbance_afforestation_area"], [11, 4, 1, "id22", "legacy_disturbance_tracker"], [11, 3, 1, "", "scenario_data"]], "cbm_runner.forest_sim.forestsim_factory": [[12, 2, 1, "", "ForestSimFactory"]], "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory": [[12, 3, 1, "", "DataFactory"], [12, 4, 1, "id4", "clean_baseline_data_dir"], [12, 4, 1, "id3", "clean_data_dir"], [12, 3, 1, "", "disturbance_class"], [12, 4, 1, "id7", "make_age_classes"], [12, 4, 1, "id6", "make_classifiers"], [12, 4, 1, "id5", "make_config_json"], [12, 4, 1, "id2", "make_data_dirs"], [12, 4, 1, "id12", "make_disturbance_events"], [12, 4, 1, "id9", "make_disturbance_type"], [12, 4, 1, "id11", "make_inventory"], [12, 4, 1, "id10", "make_transition_rules"], [12, 4, 1, "id8", "make_yield_curves"], [12, 4, 1, "id1", "set_baseline_input_data_dir"], [12, 4, 1, "id0", "set_input_data_dir"]], "cbm_runner.forest_sim.forestsim_inventory": [[13, 2, 1, "", "ForSimInventory"]], "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory": [[13, 4, 1, "id8", "afforestation_annual_dict"], [13, 3, 1, "", "afforestation_data"], [13, 4, 1, "id4", "afforestation_inventory"], [13, 3, 1, "", "age_df"], [13, 3, 1, "", "baseline_forest_classifiers"], [13, 4, 1, "id5", "combined_mineral_afforestation_dict"], [13, 3, 1, "", "data_manager_class"], [13, 4, 1, "id2", "fill_baseline_inventory"], [13, 4, 1, "id3", "inventory_iterator"], [13, 4, 1, "id6", "legacy_afforestation"], [13, 4, 1, "id7", "legacy_afforestation_annual"], [13, 4, 1, "id0", "legacy_forest_inventory"], [13, 3, 1, "", "legacy_year"], [13, 3, 1, "", "loader_class"], [13, 4, 1, "id1", "make_inventory_structure"], [13, 4, 1, "", "scenario_afforesation_dict"], [13, 4, 1, "", "scenario_afforestation_dict"], [13, 3, 1, "", "scenario_forest_classifiers"], [13, 3, 1, "", "soils_dict"], [13, 3, 1, "", "yield_baseline_dict"]], "cbm_runner.forest_sim.forestsim_runner": [[14, 2, 1, "", "ForestSimRunner"]], "cbm_runner.forest_sim.forestsim_runner.ForestSimRunner": [[14, 3, 1, "", "INDEX"], [14, 3, 1, "", "baseline_conf_path"], [14, 3, 1, "", "cbm_data_class"], [14, 3, 1, "", "cbm_runner_class"], [14, 3, 1, "", "gen_validation"], [14, 4, 1, "id0", "generate_base_input_data"], [14, 4, 1, "id1", "generate_input_data"], [14, 3, 1, "", "path"], [14, 3, 1, "", "paths_class"], [14, 4, 1, "id2", "run_aggregate_scenarios"], [14, 4, 1, "id3", "run_flux_scenarios"], [14, 3, 1, "", "validation_path"]], "cbm_runner.forest_sim.generated_input_data": [[15, 1, 1, "", "get_local_dir"]], "cbm_runner.generated_input_data": [[17, 1, 1, "", "get_local_dir"]], "cbm_runner.geo_cbm_runner": [[18, 0, 0, "-", "baseline_input_conf"], [19, 0, 0, "-", "catchment_forest_cover"], [20, 0, 0, "-", "generated_input_data"], [21, 0, 0, "-", "geo_cbm_data_factory"], [22, 0, 0, "-", "geo_cbm_validation_manager"], [23, 0, 0, "-", "geo_create_json"], [24, 0, 0, "-", "geo_disturbances"], [25, 0, 0, "-", "geo_inventory"], [26, 0, 0, "-", "geo_runner"], [27, 0, 0, "-", "geo_transition"]], "cbm_runner.geo_cbm_runner.baseline_input_conf": [[18, 1, 1, "", "get_local_dir"]], "cbm_runner.geo_cbm_runner.catchment_forest_cover": [[19, 2, 1, "", "CatchmentForest"]], "cbm_runner.geo_cbm_runner.catchment_forest_cover.CatchmentForest": [[19, 3, 1, "", "api"], [19, 4, 1, "id0", "get_catchment_forest"]], "cbm_runner.geo_cbm_runner.generated_input_data": [[20, 1, 1, "", "get_local_dir"]], "cbm_runner.geo_cbm_runner.geo_cbm_data_factory": [[21, 2, 1, "", "DataFactory"]], "cbm_runner.geo_cbm_runner.geo_cbm_data_factory.DataFactory": [[21, 4, 1, "", "clean_baseline_data_dir"], [21, 4, 1, "", "clean_data_dir"], [21, 4, 1, "", "make_age_classes"], [21, 4, 1, "", "make_classifiers"], [21, 4, 1, "", "make_config_json"], [21, 4, 1, "", "make_data_dirs"], [21, 4, 1, "", "make_disturbance_events"], [21, 4, 1, "", "make_disturbance_type"], [21, 4, 1, "", "make_inventory"], [21, 4, 1, "", "make_transition_rules"], [21, 4, 1, "", "make_yield_curves"], [21, 4, 1, "", "set_baseline_input_data_dir"], [21, 4, 1, "", "set_input_data_dir"]], "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager": [[22, 2, 1, "", "GeoCBM_ValidationManager"]], "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.GeoCBM_ValidationManager": [[22, 4, 1, "id0", "clear_validation_folder"], [22, 4, 1, "id3", "get_age_classes"], [22, 4, 1, "id5", "get_baseline_forest"], [22, 4, 1, "id6", "get_data_area"], [22, 4, 1, "id7", "get_data_flux"], [22, 4, 1, "id8", "get_data_params"], [22, 4, 1, "id9", "get_data_pools"], [22, 4, 1, "id10", "get_data_state"], [22, 4, 1, "id1", "get_linked_events"], [22, 4, 1, "id4", "get_sit_events"], [22, 4, 1, "id2", "get_site_event_stats_by_timestep"], [22, 3, 1, "", "path"]], "cbm_runner.geo_cbm_runner.geo_create_json": [[23, 2, 1, "", "CreateJSON"]], "cbm_runner.geo_cbm_runner.geo_create_json.CreateJSON": [[23, 3, 1, "", "data_manager_class"], [23, 3, 1, "", "loader_class"], [23, 4, 1, "id0", "populate_template"], [23, 3, 1, "", "template"]], "cbm_runner.geo_cbm_runner.geo_disturbances": [[24, 2, 1, "", "Disturbances"]], "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances": [[24, 4, 1, "id6", "_drop_zero_area_rows"], [24, 4, 1, "id11", "_generate_row"], [24, 4, 1, "id9", "_get_classifier_combinations"], [24, 4, 1, "id7", "_get_legacy_classifier_combinations"], [24, 4, 1, "id8", "_get_scenario_classifier_combinations"], [24, 4, 1, "id10", "_get_static_defaults"], [24, 4, 1, "id15", "_handle_legacy_forest"], [24, 4, 1, "id13", "_handle_legacy_scenario_forest"], [24, 4, 1, "id14", "_handle_scenario_afforestation"], [24, 4, 1, "id4", "_process_scenario_harvest_data"], [24, 4, 1, "id12", "_process_scenario_row_data"], [24, 4, 1, "id5", "_track_scenario_harvest"], [24, 4, 1, "id16", "_update_disturbance_timing"], [24, 3, 1, "", "afforestation_data"], [24, 3, 1, "", "baseline_forest_classifiers"], [24, 3, 1, "", "calibration_year"], [24, 3, 1, "", "data_manager_class"], [24, 3, 1, "", "disturbance_dataframe"], [24, 4, 1, "id1", "disturbance_structure"], [24, 3, 1, "", "disturbance_timing"], [24, 4, 1, "id2", "fill_baseline_forest"], [24, 4, 1, "id3", "fill_scenario_data"], [24, 3, 1, "", "forest_end_year"], [24, 4, 1, "id17", "get_legacy_forest_area_breakdown"], [24, 3, 1, "", "inventory_class"], [24, 3, 1, "", "legacy_disturbance_dict"], [24, 4, 1, "id18", "legacy_disturbance_tracker"], [24, 3, 1, "", "loader_class"], [24, 4, 1, "id0", "scenario_afforestation_area"], [24, 3, 1, "", "scenario_disturbance_dict"], [24, 3, 1, "", "scenario_forest_classifiers"], [24, 3, 1, "", "yield_name_dict"]], "cbm_runner.geo_cbm_runner.geo_inventory": [[25, 2, 1, "", "Inventory"]], "cbm_runner.geo_cbm_runner.geo_inventory.Inventory": [[25, 4, 1, "", "afforestation_annual_dict"], [25, 3, 1, "", "afforestation_data"], [25, 4, 1, "id4", "afforestation_inventory"], [25, 3, 1, "", "age_df"], [25, 3, 1, "", "baseline_forest_classifiers"], [25, 4, 1, "", "combined_mineral_afforestation_dict"], [25, 3, 1, "", "data_manager_class"], [25, 4, 1, "id2", "fill_baseline_inventory"], [25, 4, 1, "id3", "inventory_iterator"], [25, 4, 1, "", "legacy_afforestation"], [25, 4, 1, "", "legacy_afforestation_annual"], [25, 4, 1, "id0", "legacy_forest_inventory"], [25, 3, 1, "", "legacy_year"], [25, 3, 1, "", "loader_class"], [25, 4, 1, "id1", "make_inventory_structure"], [25, 4, 1, "", "scenario_afforesation_dict"], [25, 4, 1, "", "scenario_afforestation_dict"], [25, 3, 1, "", "scenario_forest_classifiers"], [25, 3, 1, "", "soils_dict"], [25, 3, 1, "", "yield_baseline_dict"]], "cbm_runner.geo_cbm_runner.geo_runner": [[26, 2, 1, "", "GeoRunner"]], "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner": [[26, 3, 1, "", "Flux_class"], [26, 3, 1, "", "INDEX"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "_add_years"], [26, 4, 1, "id4", "afforestation_scenarios_structure"], [26, 3, 1, "", "baseline_conf_path"], [26, 4, 1, "id6", "cbm_aggregate_scenario"], [26, 4, 1, "id5", "cbm_baseline_forest"], [26, 3, 1, "", "cbm_data_class"], [26, 4, 1, "id8", "cbm_scenario_fluxes"], [26, 3, 1, "", "data_manager_class"], [26, 3, 1, "", "forest_end_year"], [26, 3, 1, "", "gen_validation"], [26, 4, 1, "id0", "generate_base_input_data"], [26, 4, 1, "id1", "generate_input_data"], [26, 4, 1, "id7", "libcbm_scenario_fluxes"], [26, 3, 1, "", "path"], [26, 3, 1, "", "paths_class"], [26, 3, 1, "", "pools"], [26, 4, 1, "id2", "run_aggregate_scenarios"], [26, 4, 1, "id3", "run_flux_scenarios"], [26, 3, 1, "", "validation_path"]], "cbm_runner.geo_cbm_runner.geo_transition": [[27, 2, 1, "", "Transition"]], "cbm_runner.geo_cbm_runner.geo_transition.Transition": [[27, 3, 1, "", "baseline_forest_classifiers"], [27, 3, 1, "", "data_manager_class"], [27, 4, 1, "id0", "make_transition_rules_structure"], [27, 3, 1, "", "scenario_forest_classifiers"]], "cbm_runner.harvest_manager": [[29, 0, 0, "-", "harvest"]], "cbm_runner.harvest_manager.harvest": [[29, 2, 1, "", "AfforestationTracker"], [29, 2, 1, "", "DisturbedForestStand"], [29, 2, 1, "", "ForestStand"]], "cbm_runner.harvest_manager.harvest.AfforestationTracker": [[29, 4, 1, "id3", "afforest"], [29, 3, 1, "", "data_manager_class"], [29, 3, 1, "", "disturbance_timing"], [29, 3, 1, "", "disturbed_stands"], [29, 4, 1, "id5", "forest_disturbance"], [29, 4, 1, "id7", "get_disturbance_data_for_year"], [29, 4, 1, "id8", "get_stand_data_by_age"], [29, 4, 1, "id6", "get_stand_data_for_year"], [29, 3, 1, "", "loader_class"], [29, 4, 1, "id4", "move_to_next_age"], [29, 3, 1, "", "stands"]], "cbm_runner.harvest_manager.harvest.DisturbedForestStand": [[29, 3, 1, "", "area"], [29, 3, 1, "", "dist"], [29, 3, 1, "", "soil"], [29, 3, 1, "", "species"], [29, 3, 1, "", "year"], [29, 3, 1, "", "yield_class"]], "cbm_runner.harvest_manager.harvest.ForestStand": [[29, 4, 1, "", "__init__"], [29, 3, 1, "", "age"], [29, 4, 1, "id0", "age_stand"], [29, 3, 1, "", "area"], [29, 4, 1, "id1", "disturb"], [29, 4, 1, "id2", "reset_dist"], [29, 3, 1, "", "since_last_dist"], [29, 3, 1, "", "soil"], [29, 3, 1, "", "species"], [29, 3, 1, "", "yield_class"]], "cbm_runner.historic_affor": [[31, 0, 0, "-", "baseline_input_conf"], [32, 0, 0, "-", "generated_input_data"], [33, 0, 0, "-", "historic_affor_runner"], [34, 0, 0, "-", "historic_affor_validation_manager"]], "cbm_runner.historic_affor.baseline_input_conf": [[31, 1, 1, "", "get_local_dir"]], "cbm_runner.historic_affor.generated_input_data": [[32, 1, 1, "", "get_local_dir"]], "cbm_runner.historic_affor.historic_affor_runner": [[33, 2, 1, "", "HistoricAfforRunner"]], "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner": [[33, 3, 1, "", "INDEX"], [33, 4, 1, "id1", "afforestation_scenarios_structure"], [33, 3, 1, "", "baseline_conf_path"], [33, 4, 1, "id5", "cbm_aggregate_scenario"], [33, 3, 1, "", "cbm_data_class"], [33, 3, 1, "", "data_manager_class"], [33, 3, 1, "", "forest_end_year"], [33, 3, 1, "", "gen_validation"], [33, 4, 1, "id0", "generate_input_data"], [33, 4, 1, "id6", "libcbm_scenario_fluxes"], [33, 3, 1, "", "path"], [33, 3, 1, "", "paths_class"], [33, 4, 1, "id3", "run_aggregate_scenarios"], [33, 4, 1, "id2", "run_flux_scenarios"], [33, 4, 1, "id4", "run_libcbm_flux_scenarios"], [33, 3, 1, "", "runner_class"], [33, 3, 1, "", "validation_path"]], "cbm_runner.historic_affor.historic_affor_validation_manager": [[34, 2, 1, "", "HistoricValidationManager"]], "cbm_runner.historic_affor.historic_affor_validation_manager.HistoricValidationManager": [[34, 4, 1, "id0", "clear_validation_folder"], [34, 4, 1, "id3", "get_age_classes"], [34, 4, 1, "id5", "get_baseline_forest"], [34, 4, 1, "id6", "get_data_area"], [34, 4, 1, "id7", "get_data_flux"], [34, 4, 1, "id8", "get_data_params"], [34, 4, 1, "id9", "get_data_pools"], [34, 4, 1, "id10", "get_data_state"], [34, 4, 1, "id1", "get_linked_events"], [34, 4, 1, "id4", "get_sit_events"], [34, 4, 1, "id2", "get_site_event_stats_by_timestep"], [34, 3, 1, "", "path"]], "cbm_runner.inventory": [[37, 2, 1, "", "Inventory"]], "cbm_runner.inventory.Inventory": [[37, 4, 1, "id8", "afforestation_annual_dict"], [37, 3, 1, "", "afforestation_data"], [37, 4, 1, "id4", "afforestation_inventory"], [37, 3, 1, "", "age_df"], [37, 3, 1, "", "baseline_forest_classifiers"], [37, 4, 1, "id5", "combined_mineral_afforestation_dict"], [37, 3, 1, "", "data_manager_class"], [37, 4, 1, "id2", "fill_baseline_inventory"], [37, 4, 1, "id3", "inventory_iterator"], [37, 4, 1, "id6", "legacy_afforestation"], [37, 4, 1, "id7", "legacy_afforestation_annual"], [37, 4, 1, "id0", "legacy_forest_inventory"], [37, 3, 1, "", "legacy_year"], [37, 3, 1, "", "loader_class"], [37, 4, 1, "id1", "make_inventory_structure"], [37, 4, 1, "", "scenario_afforesation_dict"], [37, 4, 1, "", "scenario_afforestation_dict"], [37, 3, 1, "", "scenario_forest_classifiers"], [37, 3, 1, "", "soils_dict"], [37, 3, 1, "", "yield_baseline_dict"]], "cbm_runner.resource_manager": [[38, 0, 0, "-", "cbm_pools"], [39, 0, 0, "-", "cbm_runner_data_manager"], [40, 0, 0, "-", "database_manager"], [41, 0, 0, "-", "flux_manager"], [42, 0, 0, "-", "geo_cbm_runner_data_manager"], [44, 0, 0, "-", "loader"], [45, 0, 0, "-", "parser"], [46, 0, 0, "-", "paths"], [47, 0, 0, "-", "scenario_data_fetcher"]], "cbm_runner.resource_manager.cbm_pools": [[38, 2, 1, "", "Pools"]], "cbm_runner.resource_manager.cbm_pools.Pools": [[38, 3, 1, "", "above_ground_biomass_pools"], [38, 3, 1, "", "annual_process_fluxes"], [38, 3, 1, "", "below_ground_biomass_pools"], [38, 3, 1, "", "deadwood"], [38, 4, 1, "id0", "get_above_ground_biomass_pools"], [38, 4, 1, "", "get_annual_process_columns"], [38, 4, 1, "id5", "get_annual_process_fluxes"], [38, 4, 1, "id1", "get_below_ground_biomass_pools"], [38, 4, 1, "id2", "get_deadwood_pools"], [38, 4, 1, "", "get_disturbance_flux_columns"], [38, 4, 1, "", "get_gross_growth_AG"], [38, 4, 1, "", "get_gross_growth_BG"], [38, 4, 1, "id3", "get_litter_pools"], [38, 4, 1, "id4", "get_soil_organic_matter_pools"], [38, 4, 1, "", "get_total_litter"], [38, 3, 1, "", "litter"], [38, 3, 1, "", "soil_organic_matter"]], "cbm_runner.resource_manager.cbm_runner_data_manager": [[39, 2, 1, "", "DataManager"]], "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager": [[39, 3, 1, "", "afforestation_baseline"], [39, 3, 1, "", "afforestation_yield_name_dict"], [39, 3, 1, "", "cbm_default_config"], [39, 3, 1, "", "classifiers"], [39, 3, 1, "", "config_data"], [39, 3, 1, "", "disturbance_cols"], [39, 3, 1, "", "disturbances_config"], [39, 3, 1, "", "forest_baseline_year"], [39, 3, 1, "", "forest_type_keys"], [39, 4, 1, "", "gen_scenario_disturbance_dict"], [39, 4, 1, "", "get_afforestation_baseline"], [39, 4, 1, "", "get_afforestation_yield_name_dict"], [39, 4, 1, "", "get_baseline_disturbance_dict"], [39, 4, 1, "", "get_classifiers"], [39, 4, 1, "", "get_config_data"], [39, 4, 1, "", "get_disturbance_cols"], [39, 4, 1, "", "get_disturbances_config"], [39, 4, 1, "", "get_forest_baseline_year"], [39, 4, 1, "", "get_forest_type_keys"], [39, 4, 1, "", "get_legacy_disturbance_dict"], [39, 4, 1, "", "get_mapping"], [39, 4, 1, "", "get_non_forest_dict"], [39, 4, 1, "", "get_non_forest_soils"], [39, 4, 1, "", "get_scenario_data"], [39, 4, 1, "", "get_scenario_disturbance_dict"], [39, 4, 1, "", "get_soils_dict"], [39, 4, 1, "", "get_species_name_dict"], [39, 4, 1, "", "get_static_disturbance_cols"], [39, 4, 1, "", "get_transition_cols"], [39, 4, 1, "", "get_yield_baseline_dict"], [39, 4, 1, "", "get_yield_name_dict"], [39, 3, 1, "", "mapping"], [39, 3, 1, "", "non_forest_dict"], [39, 3, 1, "", "non_forest_soils"], [39, 3, 1, "", "scenario_data"], [39, 3, 1, "", "scenario_disturbance_dict"], [39, 3, 1, "", "soils_dict"], [39, 3, 1, "", "species_name_dict"], [39, 3, 1, "", "static_disturbance_cols"], [39, 3, 1, "", "transition_cols"], [39, 3, 1, "", "yield_baseline_dict"], [39, 3, 1, "", "yield_name_dict"]], "cbm_runner.resource_manager.database_manager": [[40, 2, 1, "", "DataManager"]], "cbm_runner.resource_manager.database_manager.DataManager": [[40, 4, 1, "id0", "data_engine_creater"], [40, 3, 1, "", "database_dir"], [40, 3, 1, "", "engine"], [40, 4, 1, "id4", "get_NIR_forest_data_ha"], [40, 4, 1, "id7", "get_afforestation_areas_KB"], [40, 4, 1, "id6", "get_afforestation_areas_NIR"], [40, 4, 1, "id5", "get_cso_species_breakdown"], [40, 4, 1, "id12", "get_disturbance_data"], [40, 4, 1, "id11", "get_disturbance_times"], [40, 4, 1, "id10", "get_disturbance_types"], [40, 4, 1, "id2", "get_forest_cbm_yields"], [40, 4, 1, "id8", "get_forest_harvest_NIR"], [40, 4, 1, "id1", "get_forest_inventory_age_strucuture"], [40, 4, 1, "id3", "get_forest_kb_yields"], [40, 4, 1, "id9", "get_kb_yield_curves"]], "cbm_runner.resource_manager.flux_manager": [[41, 2, 1, "", "FluxManager"]], "cbm_runner.resource_manager.flux_manager.FluxManager": [[41, 4, 1, "", "_add_identifier"], [41, 4, 1, "", "concatenated_fluxes_data"], [41, 4, 1, "", "create_disturbance_fluxes"], [41, 4, 1, "", "create_gross_growthAG"], [41, 4, 1, "", "create_gross_growthBG"], [41, 4, 1, "", "create_process_fluxes"], [41, 4, 1, "", "create_total_litter"], [41, 4, 1, "", "filter_flux_data"], [41, 4, 1, "", "flux_results_dataframes"], [41, 4, 1, "", "scale_flux_data"]], "cbm_runner.resource_manager.geo_cbm_runner_data_manager": [[42, 2, 1, "", "GeoDataManager"]], "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager": [[42, 3, 1, "", "afforestation_baseline"], [42, 3, 1, "", "afforestation_yield_name_dict"], [42, 3, 1, "", "cbm_default_config"], [42, 3, 1, "", "classifiers"], [42, 3, 1, "", "config_data"], [42, 3, 1, "", "disturbance_cols"], [42, 3, 1, "", "disturbances_config"], [42, 3, 1, "", "forest_baseline_year"], [42, 3, 1, "", "forest_type_keys"], [42, 4, 1, "", "gen_scenario_disturbance_dict"], [42, 4, 1, "", "get_afforestation_yield_name_dict"], [42, 4, 1, "", "get_baseline_disturbance_dict"], [42, 4, 1, "", "get_classifiers"], [42, 4, 1, "", "get_config_data"], [42, 4, 1, "", "get_disturbance_cols"], [42, 4, 1, "", "get_disturbances_config"], [42, 4, 1, "", "get_forest_baseline_year"], [42, 4, 1, "", "get_forest_type_keys"], [42, 4, 1, "", "get_legacy_disturbance_dict"], [42, 4, 1, "", "get_mapping"], [42, 4, 1, "", "get_non_forest_dict"], [42, 4, 1, "", "get_non_forest_soils"], [42, 4, 1, "", "get_scenario_data"], [42, 4, 1, "", "get_scenario_disturbance_dict"], [42, 4, 1, "", "get_soils_dict"], [42, 4, 1, "", "get_species_name_dict"], [42, 4, 1, "", "get_static_disturbance_cols"], [42, 4, 1, "", "get_transition_cols"], [42, 4, 1, "", "get_yield_baseline_dict"], [42, 4, 1, "", "get_yield_name_dict"], [42, 3, 1, "", "mapping"], [42, 3, 1, "", "non_forest_dict"], [42, 3, 1, "", "non_forest_soils"], [42, 3, 1, "", "scenario_data"], [42, 3, 1, "", "scenario_disturbance_dict"], [42, 3, 1, "", "soils_dict"], [42, 3, 1, "", "species_name_dict"], [42, 3, 1, "", "static_disturbance_cols"], [42, 3, 1, "", "transition_cols"], [42, 3, 1, "", "yield_baseline_dict"], [42, 3, 1, "", "yield_name_dict"]], "cbm_runner.resource_manager.loader": [[44, 2, 1, "", "Loader"]], "cbm_runner.resource_manager.loader.Loader": [[44, 4, 1, "id3", "NIR_forest_data_ha"], [44, 4, 1, "id6", "afforestation_areas_KB"], [44, 4, 1, "id5", "afforestation_areas_NIR"], [44, 4, 1, "id4", "cso_species_breakdown"], [44, 3, 1, "", "dataframes"], [44, 4, 1, "id11", "disturbance_data"], [44, 4, 1, "id7", "disturbance_time"], [44, 4, 1, "id9", "disturbance_type"], [44, 4, 1, "id0", "forest_age_structure"], [44, 4, 1, "id1", "forest_cbm_yields"], [44, 4, 1, "id2", "forest_kb_yields"], [44, 4, 1, "id10", "harvest_areas_NIR"], [44, 4, 1, "id8", "kb_yield_curves"]], "cbm_runner.resource_manager.parser": [[45, 1, 1, "", "get_age_classifier"], [45, 1, 1, "", "get_classifier_list"], [45, 1, 1, "", "get_clearfell_baseline"], [45, 1, 1, "", "get_disturbance_type"], [45, 1, 1, "", "get_inventory_species"], [45, 1, 1, "", "get_thinning_baseline"], [45, 1, 1, "", "get_yield_class_proportions"]], "cbm_runner.resource_manager.paths": [[46, 2, 1, "", "Paths"]], "cbm_runner.resource_manager.paths.Paths": [[46, 3, 1, "", "external_path"], [46, 3, 1, "", "gen_baseline"], [46, 3, 1, "", "gen_validation"], [46, 4, 1, "id4", "get_baseline_conf_path"], [46, 4, 1, "id3", "get_generated_input_data_path"], [46, 4, 1, "id5", "get_validation_path"], [46, 4, 1, "id2", "make_external_dirs"], [46, 4, 1, "id1", "setup_geo_runner_paths"], [46, 4, 1, "id0", "setup_runner_paths"]], "cbm_runner.resource_manager.scenario_data_fetcher": [[47, 2, 1, "", "ScenarioDataFetcher"]], "cbm_runner.resource_manager.scenario_data_fetcher.ScenarioDataFetcher": [[47, 4, 1, "", "__init__"], [47, 4, 1, "id4", "get_afforest_scenario_index"], [47, 4, 1, "id1", "get_afforestation_end_year"], [47, 4, 1, "id2", "get_catchment_name"], [47, 4, 1, "id0", "get_column_index"], [47, 4, 1, "id3", "get_scenario_list"]], "cbm_runner.runner": [[48, 2, 1, "", "Runner"]], "cbm_runner.runner.Runner": [[48, 3, 1, "", "INDEX"], [48, 4, 1, "id4", "afforestation_scenarios_structure"], [48, 3, 1, "", "baseline_conf_path"], [48, 4, 1, "id6", "cbm_aggregate_scenario"], [48, 4, 1, "id5", "cbm_baseline_forest"], [48, 3, 1, "", "cbm_data_class"], [48, 4, 1, "id8", "cbm_scenario_fluxes"], [48, 3, 1, "", "data_manager_class"], [48, 3, 1, "", "forest_end_year"], [48, 3, 1, "", "gen_validation"], [48, 4, 1, "id0", "generate_base_input_data"], [48, 4, 1, "id1", "generate_input_data"], [48, 4, 1, "id7", "libcbm_scenario_fluxes"], [48, 3, 1, "", "path"], [48, 3, 1, "", "paths_class"], [48, 3, 1, "", "pools"], [48, 4, 1, "id2", "run_aggregate_scenarios"], [48, 4, 1, "id3", "run_flux_scenarios"], [48, 3, 1, "", "validation_path"]], "cbm_runner.transition": [[49, 2, 1, "", "Transition"]], "cbm_runner.transition.Transition": [[49, 3, 1, "", "baseline_forest_classifiers"], [49, 3, 1, "", "data_manager_class"], [49, 4, 1, "id0", "make_transition_rules_structure"], [49, 3, 1, "", "scenario_forest_classifiers"]], "cbm_runner.yield_curves": [[50, 2, 1, "", "YieldCurves"]], "cbm_runner.yield_curves.YieldCurves": [[50, 4, 1, "id0", "yield_table_generater_method1"], [50, 4, 1, "id1", "yield_table_generater_method2"], [50, 4, 1, "id2", "yield_table_generater_method3"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"]}, "titleterms": {"cbm_runner": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53], "baseline_input_conf": [0, 9, 18, 31], "packag": [0, 5, 7, 9, 15, 17, 18, 20, 31, 32], "content": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50], "function": [0, 5, 7, 9, 15, 17, 18, 20, 31, 32, 45], "cbm_data_factori": 1, "modul": [1, 3, 4, 6, 8, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 29, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50], "class": [1, 3, 4, 6, 8, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 29, 33, 34, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 52], "cbm_valid": [2, 3], "submodul": [2, 16, 28, 30, 35, 36, 43], "valid": 3, "cbm_validation_manag": 4, "configuration_data": 5, "create_json": 6, "databas": 7, "disturb": 8, "forest_sim": [9, 10, 11, 12, 13, 14, 15, 16], "forest_sim_validation_manag": 10, "forestsim_disturb": 11, "forestsim_factori": 12, "forestsim_inventori": 13, "forestsim_runn": 14, "generated_input_data": [15, 17, 20, 32], "subpackag": [16, 28, 35, 36], "geo_cbm_runn": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "catchment_forest_cov": 19, "geo_cbm_data_factori": 21, "geo_cbm_validation_manag": 22, "geo_create_json": 23, "geo_disturb": 24, "geo_inventori": 25, "geo_runn": 26, "geo_transit": 27, "harvest_manag": [29, 30], "harvest": 29, "historic_affor": [31, 32, 33, 34, 35], "historic_affor_runn": 33, "historic_affor_validation_manag": 34, "inventori": 37, "resource_manag": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "cbm_pool": 38, "cbm_runner_data_manag": 39, "database_manag": 40, "flux_manag": 41, "geo_cbm_runner_data_manag": 42, "loader": 44, "parser": 45, "path": 46, "scenario_data_fetch": 47, "runner": [48, 52], "transit": 49, "yield_curv": 50, "api": 51, "refer": 51, "exampl": 52, "usag": [52, 53], "import": 52, "The": 52, "data": 52, "input": 52, "defin": 52, "run": 52, "scenario": 52, "plot": 52, "flux": 52, "baselin": 52, "cbm": 53, "cfs3": 53, "interfac": 53, "goblin": 53, "model": 53, "instal": 53, "licens": 53}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"cbm_runner.baseline_input_conf": [[0, "module-cbm_runner.baseline_input_conf"]], "Package Contents": [[0, "package-contents"], [5, "package-contents"], [7, "package-contents"], [9, "package-contents"], [15, "package-contents"], [17, "package-contents"], [18, "package-contents"], [20, "package-contents"], [31, "package-contents"], [32, "package-contents"]], "Functions": [[0, "functions"], [5, "functions"], [7, "functions"], [9, "functions"], [15, "functions"], [17, "functions"], [18, "functions"], [20, "functions"], [31, "functions"], [32, "functions"], [45, "functions"]], "cbm_runner.cbm_data_factory": [[1, "module-cbm_runner.cbm_data_factory"]], "Module Contents": [[1, "module-contents"], [3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [19, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [29, "module-contents"], [33, "module-contents"], [34, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"]], "Classes": [[1, "classes"], [3, "classes"], [4, "classes"], [6, "classes"], [8, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [19, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [29, "classes"], [33, "classes"], [34, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [44, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"]], "cbm_runner.cbm_validation": [[2, "module-cbm_runner.cbm_validation"]], "Submodules": [[2, "submodules"], [16, "submodules"], [28, "submodules"], [30, "submodules"], [35, "submodules"], [36, "submodules"], [43, "submodules"]], "cbm_runner.cbm_validation.validation": [[3, "module-cbm_runner.cbm_validation.validation"]], "cbm_runner.cbm_validation_manager": [[4, "module-cbm_runner.cbm_validation_manager"]], "cbm_runner.configuration_data": [[5, "module-cbm_runner.configuration_data"]], "cbm_runner.create_json": [[6, "module-cbm_runner.create_json"]], "cbm_runner.database": [[7, "module-cbm_runner.database"]], "cbm_runner.disturbances": [[8, "module-cbm_runner.disturbances"]], "cbm_runner.forest_sim.baseline_input_conf": [[9, "module-cbm_runner.forest_sim.baseline_input_conf"]], "cbm_runner.forest_sim.forest_sim_validation_manager": [[10, "module-cbm_runner.forest_sim.forest_sim_validation_manager"]], "cbm_runner.forest_sim.forestsim_disturbances": [[11, "module-cbm_runner.forest_sim.forestsim_disturbances"]], "cbm_runner.forest_sim.forestsim_factory": [[12, "module-cbm_runner.forest_sim.forestsim_factory"]], "cbm_runner.forest_sim.forestsim_inventory": [[13, "module-cbm_runner.forest_sim.forestsim_inventory"]], "cbm_runner.forest_sim.forestsim_runner": [[14, "module-cbm_runner.forest_sim.forestsim_runner"]], "cbm_runner.forest_sim.generated_input_data": [[15, "module-cbm_runner.forest_sim.generated_input_data"]], "cbm_runner.forest_sim": [[16, "module-cbm_runner.forest_sim"]], "Subpackages": [[16, "subpackages"], [28, "subpackages"], [35, "subpackages"], [36, "subpackages"]], "cbm_runner.generated_input_data": [[17, "module-cbm_runner.generated_input_data"]], "cbm_runner.geo_cbm_runner.baseline_input_conf": [[18, "module-cbm_runner.geo_cbm_runner.baseline_input_conf"]], "cbm_runner.geo_cbm_runner.catchment_forest_cover": [[19, "module-cbm_runner.geo_cbm_runner.catchment_forest_cover"]], "cbm_runner.geo_cbm_runner.generated_input_data": [[20, "module-cbm_runner.geo_cbm_runner.generated_input_data"]], "cbm_runner.geo_cbm_runner.geo_cbm_data_factory": [[21, "module-cbm_runner.geo_cbm_runner.geo_cbm_data_factory"]], "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager": [[22, "module-cbm_runner.geo_cbm_runner.geo_cbm_validation_manager"]], "cbm_runner.geo_cbm_runner.geo_create_json": [[23, "module-cbm_runner.geo_cbm_runner.geo_create_json"]], "cbm_runner.geo_cbm_runner.geo_disturbances": [[24, "module-cbm_runner.geo_cbm_runner.geo_disturbances"]], "cbm_runner.geo_cbm_runner.geo_inventory": [[25, "module-cbm_runner.geo_cbm_runner.geo_inventory"]], "cbm_runner.geo_cbm_runner.geo_runner": [[26, "module-cbm_runner.geo_cbm_runner.geo_runner"]], "cbm_runner.geo_cbm_runner.geo_transition": [[27, "module-cbm_runner.geo_cbm_runner.geo_transition"]], "cbm_runner.geo_cbm_runner": [[28, "module-cbm_runner.geo_cbm_runner"]], "cbm_runner.harvest_manager.harvest": [[29, "module-cbm_runner.harvest_manager.harvest"]], "cbm_runner.harvest_manager": [[30, "module-cbm_runner.harvest_manager"]], "cbm_runner.historic_affor.baseline_input_conf": [[31, "module-cbm_runner.historic_affor.baseline_input_conf"]], "cbm_runner.historic_affor.generated_input_data": [[32, "module-cbm_runner.historic_affor.generated_input_data"]], "cbm_runner.historic_affor.historic_affor_runner": [[33, "module-cbm_runner.historic_affor.historic_affor_runner"]], "cbm_runner.historic_affor.historic_affor_validation_manager": [[34, "module-cbm_runner.historic_affor.historic_affor_validation_manager"]], "cbm_runner.historic_affor": [[35, "module-cbm_runner.historic_affor"]], "cbm_runner": [[36, "module-cbm_runner"]], "cbm_runner.inventory": [[37, "module-cbm_runner.inventory"]], "cbm_runner.resource_manager.cbm_pools": [[38, "module-cbm_runner.resource_manager.cbm_pools"]], "cbm_runner.resource_manager.cbm_runner_data_manager": [[39, "module-cbm_runner.resource_manager.cbm_runner_data_manager"]], "cbm_runner.resource_manager.database_manager": [[40, "module-cbm_runner.resource_manager.database_manager"]], "cbm_runner.resource_manager.flux_manager": [[41, "module-cbm_runner.resource_manager.flux_manager"]], "cbm_runner.resource_manager.geo_cbm_runner_data_manager": [[42, "module-cbm_runner.resource_manager.geo_cbm_runner_data_manager"]], "cbm_runner.resource_manager": [[43, "module-cbm_runner.resource_manager"]], "cbm_runner.resource_manager.loader": [[44, "module-cbm_runner.resource_manager.loader"]], "cbm_runner.resource_manager.parser": [[45, "module-cbm_runner.resource_manager.parser"]], "cbm_runner.resource_manager.paths": [[46, "module-cbm_runner.resource_manager.paths"]], "cbm_runner.resource_manager.scenario_data_fetcher": [[47, "module-cbm_runner.resource_manager.scenario_data_fetcher"]], "cbm_runner.runner": [[48, "module-cbm_runner.runner"]], "cbm_runner.transition": [[49, "module-cbm_runner.transition"]], "cbm_runner.yield_curves": [[50, "module-cbm_runner.yield_curves"]], "API Reference": [[51, "api-reference"]], "Example Usage": [[52, "example-usage"]], "Imports": [[52, "imports"]], "The Runner": [[52, "the-runner"]], "Data Inputs Example": [[52, "data-inputs-example"]], "Define classes and Run Scenarios": [[52, "define-classes-and-run-scenarios"]], "Plot Fluxes for Baseline": [[52, "plot-fluxes-for-baseline"]], "\ud83c\udf32 CBM_runner, a CBM CFS3 interface for the GOBLIN model": [[53, "cbm-runner-a-cbm-cfs3-interface-for-the-goblin-model"]], "Installation": [[53, "installation"]], "Usage": [[53, "usage"]], "License": [[53, "license"]]}, "indexentries": {"cbm_runner.baseline_input_conf": [[0, "module-cbm_runner.baseline_input_conf"]], "get_local_dir() (in module cbm_runner.baseline_input_conf)": [[0, "cbm_runner.baseline_input_conf.get_local_dir"]], "module": [[0, "module-cbm_runner.baseline_input_conf"], [1, "module-cbm_runner.cbm_data_factory"], [2, "module-cbm_runner.cbm_validation"], [3, "module-cbm_runner.cbm_validation.validation"], [4, "module-cbm_runner.cbm_validation_manager"], [5, "module-cbm_runner.configuration_data"], [6, "module-cbm_runner.create_json"], [7, "module-cbm_runner.database"], [8, "module-cbm_runner.disturbances"], [9, "module-cbm_runner.forest_sim.baseline_input_conf"], [10, "module-cbm_runner.forest_sim.forest_sim_validation_manager"], [11, "module-cbm_runner.forest_sim.forestsim_disturbances"], [12, "module-cbm_runner.forest_sim.forestsim_factory"], [13, "module-cbm_runner.forest_sim.forestsim_inventory"], [14, "module-cbm_runner.forest_sim.forestsim_runner"], [15, "module-cbm_runner.forest_sim.generated_input_data"], [16, "module-cbm_runner.forest_sim"], [17, "module-cbm_runner.generated_input_data"], [18, "module-cbm_runner.geo_cbm_runner.baseline_input_conf"], [19, "module-cbm_runner.geo_cbm_runner.catchment_forest_cover"], [20, "module-cbm_runner.geo_cbm_runner.generated_input_data"], [21, "module-cbm_runner.geo_cbm_runner.geo_cbm_data_factory"], [22, "module-cbm_runner.geo_cbm_runner.geo_cbm_validation_manager"], [23, "module-cbm_runner.geo_cbm_runner.geo_create_json"], [24, "module-cbm_runner.geo_cbm_runner.geo_disturbances"], [25, "module-cbm_runner.geo_cbm_runner.geo_inventory"], [26, "module-cbm_runner.geo_cbm_runner.geo_runner"], [27, "module-cbm_runner.geo_cbm_runner.geo_transition"], [28, "module-cbm_runner.geo_cbm_runner"], [29, "module-cbm_runner.harvest_manager.harvest"], [30, "module-cbm_runner.harvest_manager"], [31, "module-cbm_runner.historic_affor.baseline_input_conf"], [32, "module-cbm_runner.historic_affor.generated_input_data"], [33, "module-cbm_runner.historic_affor.historic_affor_runner"], [34, "module-cbm_runner.historic_affor.historic_affor_validation_manager"], [35, "module-cbm_runner.historic_affor"], [36, "module-cbm_runner"], [37, "module-cbm_runner.inventory"], [38, "module-cbm_runner.resource_manager.cbm_pools"], [39, "module-cbm_runner.resource_manager.cbm_runner_data_manager"], [40, "module-cbm_runner.resource_manager.database_manager"], [41, "module-cbm_runner.resource_manager.flux_manager"], [42, "module-cbm_runner.resource_manager.geo_cbm_runner_data_manager"], [43, "module-cbm_runner.resource_manager"], [44, "module-cbm_runner.resource_manager.loader"], [45, "module-cbm_runner.resource_manager.parser"], [46, "module-cbm_runner.resource_manager.paths"], [47, "module-cbm_runner.resource_manager.scenario_data_fetcher"], [48, "module-cbm_runner.runner"], [49, "module-cbm_runner.transition"], [50, "module-cbm_runner.yield_curves"]], "datafactory (class in cbm_runner.cbm_data_factory)": [[1, "cbm_runner.cbm_data_factory.DataFactory"]], "afforestation_data (cbm_runner.cbm_data_factory.datafactory attribute)": [[1, "cbm_runner.cbm_data_factory.DataFactory.afforestation_data"]], "cbm_runner.cbm_data_factory": [[1, "module-cbm_runner.cbm_data_factory"]], "clean_baseline_data_dir() (cbm_runner.cbm_data_factory.datafactory method)": [[1, "cbm_runner.cbm_data_factory.DataFactory.clean_baseline_data_dir"], [1, "id4"]], "clean_data_dir() (cbm_runner.cbm_data_factory.datafactory method)": [[1, "cbm_runner.cbm_data_factory.DataFactory.clean_data_dir"], [1, "id3"]], "data_manager_class (cbm_runner.cbm_data_factory.datafactory attribute)": [[1, "cbm_runner.cbm_data_factory.DataFactory.data_manager_class"]], "disturbance_class (cbm_runner.cbm_data_factory.datafactory attribute)": [[1, "cbm_runner.cbm_data_factory.DataFactory.disturbance_class"]], "inventory_class (cbm_runner.cbm_data_factory.datafactory attribute)": [[1, "cbm_runner.cbm_data_factory.DataFactory.inventory_class"]], "json_creator_class (cbm_runner.cbm_data_factory.datafactory attribute)": [[1, "cbm_runner.cbm_data_factory.DataFactory.json_creator_class"]], "loader_class (cbm_runner.cbm_data_factory.datafactory attribute)": [[1, "cbm_runner.cbm_data_factory.DataFactory.loader_class"]], "make_age_classes() (cbm_runner.cbm_data_factory.datafactory method)": [[1, "cbm_runner.cbm_data_factory.DataFactory.make_age_classes"], [1, "id7"]], "make_classifiers() (cbm_runner.cbm_data_factory.datafactory method)": [[1, "cbm_runner.cbm_data_factory.DataFactory.make_classifiers"], [1, "id6"]], "make_config_json() (cbm_runner.cbm_data_factory.datafactory method)": [[1, "cbm_runner.cbm_data_factory.DataFactory.make_config_json"], [1, "id5"]], "make_data_dirs() (cbm_runner.cbm_data_factory.datafactory method)": [[1, "cbm_runner.cbm_data_factory.DataFactory.make_data_dirs"], [1, "id2"]], "make_disturbance_events() (cbm_runner.cbm_data_factory.datafactory method)": [[1, "cbm_runner.cbm_data_factory.DataFactory.make_disturbance_events"], [1, "id10"]], "make_disturbance_type() (cbm_runner.cbm_data_factory.datafactory method)": [[1, "cbm_runner.cbm_data_factory.DataFactory.make_disturbance_type"], [1, "id11"]], "make_inventory() (cbm_runner.cbm_data_factory.datafactory method)": [[1, "cbm_runner.cbm_data_factory.DataFactory.make_inventory"], [1, "id9"]], "make_transition_rules() (cbm_runner.cbm_data_factory.datafactory method)": [[1, "cbm_runner.cbm_data_factory.DataFactory.make_transition_rules"], [1, "id12"]], "make_yield_curves() (cbm_runner.cbm_data_factory.datafactory method)": [[1, "cbm_runner.cbm_data_factory.DataFactory.make_yield_curves"], [1, "id8"]], "set_baseline_input_data_dir() (cbm_runner.cbm_data_factory.datafactory method)": [[1, "cbm_runner.cbm_data_factory.DataFactory.set_baseline_input_data_dir"], [1, "id1"]], "set_input_data_dir() (cbm_runner.cbm_data_factory.datafactory method)": [[1, "cbm_runner.cbm_data_factory.DataFactory.set_input_data_dir"], [1, "id0"]], "transition_class (cbm_runner.cbm_data_factory.datafactory attribute)": [[1, "cbm_runner.cbm_data_factory.DataFactory.transition_class"]], "cbm_runner.cbm_validation": [[2, "module-cbm_runner.cbm_validation"]], "validationdata (class in cbm_runner.cbm_validation.validation)": [[3, "cbm_runner.cbm_validation.validation.ValidationData"]], "cbm_runner.cbm_validation.validation": [[3, "module-cbm_runner.cbm_validation.validation"]], "clear_validation_folder() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.clear_validation_folder"]], "gen_age_classes() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.gen_age_classes"]], "gen_baseline_forest() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.gen_baseline_forest"]], "gen_disturbance_statistics() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.gen_disturbance_statistics"]], "gen_sit_events() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.gen_sit_events"]], "get_age_classes() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.get_age_classes"]], "get_baseline_forest() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.get_baseline_forest"]], "get_data_area() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.get_data_area"]], "get_data_flux() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.get_data_flux"]], "get_data_params() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.get_data_params"]], "get_data_pools() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.get_data_pools"]], "get_data_state() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.get_data_state"]], "get_linked_events() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.get_linked_events"]], "get_sit_events() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.get_sit_events"]], "get_site_event_stats_by_timestep() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.get_site_event_stats_by_timestep"]], "merge_events() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.merge_events"]], "results_contents() (cbm_runner.cbm_validation.validation.validationdata static method)": [[3, "cbm_runner.cbm_validation.validation.ValidationData.results_contents"]], "cbm_validationmanager (class in cbm_runner.cbm_validation_manager)": [[4, "cbm_runner.cbm_validation_manager.CBM_ValidationManager"]], "cbm_runner.cbm_validation_manager": [[4, "module-cbm_runner.cbm_validation_manager"]], "clear_validation_folder() (cbm_runner.cbm_validation_manager.cbm_validationmanager method)": [[4, "cbm_runner.cbm_validation_manager.CBM_ValidationManager.clear_validation_folder"], [4, "id0"]], "get_age_classes() (cbm_runner.cbm_validation_manager.cbm_validationmanager method)": [[4, "cbm_runner.cbm_validation_manager.CBM_ValidationManager.get_age_classes"], [4, "id3"]], "get_baseline_forest() (cbm_runner.cbm_validation_manager.cbm_validationmanager method)": [[4, "cbm_runner.cbm_validation_manager.CBM_ValidationManager.get_baseline_forest"], [4, "id5"]], "get_data_area() (cbm_runner.cbm_validation_manager.cbm_validationmanager method)": [[4, "cbm_runner.cbm_validation_manager.CBM_ValidationManager.get_data_area"], [4, "id6"]], "get_data_flux() (cbm_runner.cbm_validation_manager.cbm_validationmanager method)": [[4, "cbm_runner.cbm_validation_manager.CBM_ValidationManager.get_data_flux"], [4, "id7"]], "get_data_params() (cbm_runner.cbm_validation_manager.cbm_validationmanager method)": [[4, "cbm_runner.cbm_validation_manager.CBM_ValidationManager.get_data_params"], [4, "id8"]], "get_data_pools() (cbm_runner.cbm_validation_manager.cbm_validationmanager method)": [[4, "cbm_runner.cbm_validation_manager.CBM_ValidationManager.get_data_pools"], [4, "id9"]], "get_data_state() (cbm_runner.cbm_validation_manager.cbm_validationmanager method)": [[4, "cbm_runner.cbm_validation_manager.CBM_ValidationManager.get_data_state"], [4, "id10"]], "get_linked_events() (cbm_runner.cbm_validation_manager.cbm_validationmanager method)": [[4, "cbm_runner.cbm_validation_manager.CBM_ValidationManager.get_linked_events"], [4, "id1"]], "get_sit_events() (cbm_runner.cbm_validation_manager.cbm_validationmanager method)": [[4, "cbm_runner.cbm_validation_manager.CBM_ValidationManager.get_sit_events"], [4, "id4"]], "get_site_event_stats_by_timestep() (cbm_runner.cbm_validation_manager.cbm_validationmanager method)": [[4, "cbm_runner.cbm_validation_manager.CBM_ValidationManager.get_site_event_stats_by_timestep"], [4, "id2"]], "path (cbm_runner.cbm_validation_manager.cbm_validationmanager attribute)": [[4, "cbm_runner.cbm_validation_manager.CBM_ValidationManager.path"]], "cbm_runner.configuration_data": [[5, "module-cbm_runner.configuration_data"]], "get_local_dir() (in module cbm_runner.configuration_data)": [[5, "cbm_runner.configuration_data.get_local_dir"]], "createjson (class in cbm_runner.create_json)": [[6, "cbm_runner.create_json.CreateJSON"]], "cbm_runner.create_json": [[6, "module-cbm_runner.create_json"]], "data_manager_class (cbm_runner.create_json.createjson attribute)": [[6, "cbm_runner.create_json.CreateJSON.data_manager_class"]], "loader_class (cbm_runner.create_json.createjson attribute)": [[6, "cbm_runner.create_json.CreateJSON.loader_class"]], "populate_template() (cbm_runner.create_json.createjson method)": [[6, "cbm_runner.create_json.CreateJSON.populate_template"], [6, "id0"]], "template (cbm_runner.create_json.createjson attribute)": [[6, "cbm_runner.create_json.CreateJSON.template"]], "cbm_runner.database": [[7, "module-cbm_runner.database"]], "get_local_dir() (in module cbm_runner.database)": [[7, "cbm_runner.database.get_local_dir"]], "disturbances (class in cbm_runner.disturbances)": [[8, "cbm_runner.disturbances.Disturbances"]], "_drop_zero_area_rows() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances._drop_zero_area_rows"]], "_generate_row() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances._generate_row"]], "_get_classifier_combinations() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances._get_classifier_combinations"]], "_get_legacy_classifier_combinations() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances._get_legacy_classifier_combinations"]], "_get_scenario_classifier_combinations() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances._get_scenario_classifier_combinations"]], "_get_static_defaults() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances._get_static_defaults"]], "_handle_legacy_afforestation() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances._handle_legacy_afforestation"]], "_handle_legacy_forest() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances._handle_legacy_forest"]], "_handle_legacy_scenario_forest() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances._handle_legacy_scenario_forest"]], "_handle_scenario_afforestation() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances._handle_scenario_afforestation"]], "_process_row_data() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances._process_row_data"]], "_process_scenario_harvest_data() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances._process_scenario_harvest_data"]], "_process_scenario_row_data() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances._process_scenario_row_data"]], "_track_scenario_harvest() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances._track_scenario_harvest"]], "_update_disturbance_timing() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances._update_disturbance_timing"]], "afforestation_data (cbm_runner.disturbances.disturbances attribute)": [[8, "cbm_runner.disturbances.Disturbances.afforestation_data"]], "baseline_forest_classifiers (cbm_runner.disturbances.disturbances attribute)": [[8, "cbm_runner.disturbances.Disturbances.baseline_forest_classifiers"]], "calibration_year (cbm_runner.disturbances.disturbances attribute)": [[8, "cbm_runner.disturbances.Disturbances.calibration_year"]], "cbm_runner.disturbances": [[8, "module-cbm_runner.disturbances"]], "data_manager_class (cbm_runner.disturbances.disturbances attribute)": [[8, "cbm_runner.disturbances.Disturbances.data_manager_class"]], "disturbance_dataframe (cbm_runner.disturbances.disturbances attribute)": [[8, "cbm_runner.disturbances.Disturbances.disturbance_dataframe"]], "disturbance_structure() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances.disturbance_structure"]], "disturbance_timing (cbm_runner.disturbances.disturbances attribute)": [[8, "cbm_runner.disturbances.Disturbances.disturbance_timing"]], "fill_baseline_forest() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances.fill_baseline_forest"]], "fill_legacy_data() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances.fill_legacy_data"]], "fill_scenario_data() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances.fill_scenario_data"]], "forest_end_year (cbm_runner.disturbances.disturbances attribute)": [[8, "cbm_runner.disturbances.Disturbances.forest_end_year"]], "get_legacy_forest_area_breakdown() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances.get_legacy_forest_area_breakdown"]], "inventory_class (cbm_runner.disturbances.disturbances attribute)": [[8, "cbm_runner.disturbances.Disturbances.inventory_class"]], "legacy_disturbance_afforestation_area() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances.legacy_disturbance_afforestation_area"]], "legacy_disturbance_dict (cbm_runner.disturbances.disturbances attribute)": [[8, "cbm_runner.disturbances.Disturbances.legacy_disturbance_dict"]], "legacy_disturbance_tracker() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances.legacy_disturbance_tracker"]], "loader_class (cbm_runner.disturbances.disturbances attribute)": [[8, "cbm_runner.disturbances.Disturbances.loader_class"]], "scenario_afforestation_area() (cbm_runner.disturbances.disturbances method)": [[8, "cbm_runner.disturbances.Disturbances.scenario_afforestation_area"]], "scenario_disturbance_dict (cbm_runner.disturbances.disturbances attribute)": [[8, "cbm_runner.disturbances.Disturbances.scenario_disturbance_dict"]], "scenario_forest_classifiers (cbm_runner.disturbances.disturbances attribute)": [[8, "cbm_runner.disturbances.Disturbances.scenario_forest_classifiers"]], "yield_name_dict (cbm_runner.disturbances.disturbances attribute)": [[8, "cbm_runner.disturbances.Disturbances.yield_name_dict"]], "cbm_runner.forest_sim.baseline_input_conf": [[9, "module-cbm_runner.forest_sim.baseline_input_conf"]], "get_local_dir() (in module cbm_runner.forest_sim.baseline_input_conf)": [[9, "cbm_runner.forest_sim.baseline_input_conf.get_local_dir"]], "forsimvalidationmanager (class in cbm_runner.forest_sim.forest_sim_validation_manager)": [[10, "cbm_runner.forest_sim.forest_sim_validation_manager.ForSimValidationManager"]], "cbm_runner.forest_sim.forest_sim_validation_manager": [[10, "module-cbm_runner.forest_sim.forest_sim_validation_manager"]], "clear_validation_folder() (cbm_runner.forest_sim.forest_sim_validation_manager.forsimvalidationmanager method)": [[10, "cbm_runner.forest_sim.forest_sim_validation_manager.ForSimValidationManager.clear_validation_folder"], [10, "id0"]], "get_age_classes() (cbm_runner.forest_sim.forest_sim_validation_manager.forsimvalidationmanager method)": [[10, "cbm_runner.forest_sim.forest_sim_validation_manager.ForSimValidationManager.get_age_classes"], [10, "id3"]], "get_baseline_forest() (cbm_runner.forest_sim.forest_sim_validation_manager.forsimvalidationmanager method)": [[10, "cbm_runner.forest_sim.forest_sim_validation_manager.ForSimValidationManager.get_baseline_forest"], [10, "id5"]], "get_data_area() (cbm_runner.forest_sim.forest_sim_validation_manager.forsimvalidationmanager method)": [[10, "cbm_runner.forest_sim.forest_sim_validation_manager.ForSimValidationManager.get_data_area"], [10, "id6"]], "get_data_flux() (cbm_runner.forest_sim.forest_sim_validation_manager.forsimvalidationmanager method)": [[10, "cbm_runner.forest_sim.forest_sim_validation_manager.ForSimValidationManager.get_data_flux"], [10, "id7"]], "get_data_params() (cbm_runner.forest_sim.forest_sim_validation_manager.forsimvalidationmanager method)": [[10, "cbm_runner.forest_sim.forest_sim_validation_manager.ForSimValidationManager.get_data_params"], [10, "id8"]], "get_data_pools() (cbm_runner.forest_sim.forest_sim_validation_manager.forsimvalidationmanager method)": [[10, "cbm_runner.forest_sim.forest_sim_validation_manager.ForSimValidationManager.get_data_pools"], [10, "id9"]], "get_data_state() (cbm_runner.forest_sim.forest_sim_validation_manager.forsimvalidationmanager method)": [[10, "cbm_runner.forest_sim.forest_sim_validation_manager.ForSimValidationManager.get_data_state"], [10, "id10"]], "get_linked_events() (cbm_runner.forest_sim.forest_sim_validation_manager.forsimvalidationmanager method)": [[10, "cbm_runner.forest_sim.forest_sim_validation_manager.ForSimValidationManager.get_linked_events"], [10, "id1"]], "get_sit_events() (cbm_runner.forest_sim.forest_sim_validation_manager.forsimvalidationmanager method)": [[10, "cbm_runner.forest_sim.forest_sim_validation_manager.ForSimValidationManager.get_sit_events"], [10, "id4"]], "get_site_event_stats_by_timestep() (cbm_runner.forest_sim.forest_sim_validation_manager.forsimvalidationmanager method)": [[10, "cbm_runner.forest_sim.forest_sim_validation_manager.ForSimValidationManager.get_site_event_stats_by_timestep"], [10, "id2"]], "path (cbm_runner.forest_sim.forest_sim_validation_manager.forsimvalidationmanager attribute)": [[10, "cbm_runner.forest_sim.forest_sim_validation_manager.ForSimValidationManager.path"]], "forestsimdistrubances (class in cbm_runner.forest_sim.forestsim_disturbances)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances"]], "_drop_zero_area_rows() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._drop_zero_area_rows"], [11, "id8"]], "_generate_row() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._generate_row"], [11, "id13"]], "_get_classifier_combinations() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._get_classifier_combinations"], [11, "id11"]], "_get_legacy_classifier_combinations() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._get_legacy_classifier_combinations"], [11, "id9"]], "_get_scenario_classifier_combinations() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._get_scenario_classifier_combinations"], [11, "id10"]], "_get_static_defaults() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._get_static_defaults"], [11, "id12"]], "_handle_legacy_afforestation() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._handle_legacy_afforestation"], [11, "id18"]], "_handle_legacy_forest() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._handle_legacy_forest"], [11, "id19"]], "_handle_legacy_scenario_forest() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._handle_legacy_scenario_forest"], [11, "id16"]], "_handle_scenario_afforestation() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._handle_scenario_afforestation"], [11, "id17"]], "_process_row_data() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._process_row_data"], [11, "id15"]], "_process_scenario_harvest_data() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._process_scenario_harvest_data"], [11, "id6"]], "_process_scenario_row_data() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._process_scenario_row_data"], [11, "id14"]], "_scenario_afforestation_area() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._scenario_afforestation_area"], [11, "id0"]], "_track_scenario_harvest() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._track_scenario_harvest"], [11, "id7"]], "_update_disturbance_timing() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances._update_disturbance_timing"], [11, "id20"]], "afforesataion_annual_data (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances attribute)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances.afforesataion_annual_data"]], "afforestation_data (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances attribute)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances.afforestation_data"]], "calibration_year (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances attribute)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances.calibration_year"]], "cbm_runner.forest_sim.forestsim_disturbances": [[11, "module-cbm_runner.forest_sim.forestsim_disturbances"]], "config_path (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances attribute)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances.config_path"]], "disturbance_structure() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances.disturbance_structure"], [11, "id2"]], "fill_baseline_forest() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances.fill_baseline_forest"], [11, "id4"]], "fill_legacy_data() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances.fill_legacy_data"], [11, "id3"]], "fill_scenario_data() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances.fill_scenario_data"], [11, "id5"]], "forest_end_year (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances attribute)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances.forest_end_year"]], "get_legacy_forest_area_breakdown() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances.get_legacy_forest_area_breakdown"], [11, "id21"]], "legacy_disturbance_afforestation_area() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances.legacy_disturbance_afforestation_area"], [11, "id1"]], "legacy_disturbance_tracker() (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances method)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances.legacy_disturbance_tracker"], [11, "id22"]], "scenario_data (cbm_runner.forest_sim.forestsim_disturbances.forestsimdistrubances attribute)": [[11, "cbm_runner.forest_sim.forestsim_disturbances.ForestSimDistrubances.scenario_data"]], "datafactory (cbm_runner.forest_sim.forestsim_factory.forestsimfactory attribute)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory.DataFactory"]], "forestsimfactory (class in cbm_runner.forest_sim.forestsim_factory)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory"]], "cbm_runner.forest_sim.forestsim_factory": [[12, "module-cbm_runner.forest_sim.forestsim_factory"]], "clean_baseline_data_dir() (cbm_runner.forest_sim.forestsim_factory.forestsimfactory method)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory.clean_baseline_data_dir"], [12, "id4"]], "clean_data_dir() (cbm_runner.forest_sim.forestsim_factory.forestsimfactory method)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory.clean_data_dir"], [12, "id3"]], "disturbance_class (cbm_runner.forest_sim.forestsim_factory.forestsimfactory attribute)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory.disturbance_class"]], "make_age_classes() (cbm_runner.forest_sim.forestsim_factory.forestsimfactory method)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory.make_age_classes"], [12, "id7"]], "make_classifiers() (cbm_runner.forest_sim.forestsim_factory.forestsimfactory method)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory.make_classifiers"], [12, "id6"]], "make_config_json() (cbm_runner.forest_sim.forestsim_factory.forestsimfactory method)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory.make_config_json"], [12, "id5"]], "make_data_dirs() (cbm_runner.forest_sim.forestsim_factory.forestsimfactory method)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory.make_data_dirs"], [12, "id2"]], "make_disturbance_events() (cbm_runner.forest_sim.forestsim_factory.forestsimfactory method)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory.make_disturbance_events"], [12, "id12"]], "make_disturbance_type() (cbm_runner.forest_sim.forestsim_factory.forestsimfactory method)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory.make_disturbance_type"], [12, "id9"]], "make_inventory() (cbm_runner.forest_sim.forestsim_factory.forestsimfactory method)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory.make_inventory"], [12, "id11"]], "make_transition_rules() (cbm_runner.forest_sim.forestsim_factory.forestsimfactory method)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory.make_transition_rules"], [12, "id10"]], "make_yield_curves() (cbm_runner.forest_sim.forestsim_factory.forestsimfactory method)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory.make_yield_curves"], [12, "id8"]], "set_baseline_input_data_dir() (cbm_runner.forest_sim.forestsim_factory.forestsimfactory method)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory.set_baseline_input_data_dir"], [12, "id1"]], "set_input_data_dir() (cbm_runner.forest_sim.forestsim_factory.forestsimfactory method)": [[12, "cbm_runner.forest_sim.forestsim_factory.ForestSimFactory.set_input_data_dir"], [12, "id0"]], "forsiminventory (class in cbm_runner.forest_sim.forestsim_inventory)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory"]], "afforestation_annual_dict() (cbm_runner.forest_sim.forestsim_inventory.forsiminventory method)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.afforestation_annual_dict"], [13, "id8"]], "afforestation_data (cbm_runner.forest_sim.forestsim_inventory.forsiminventory attribute)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.afforestation_data"]], "afforestation_inventory() (cbm_runner.forest_sim.forestsim_inventory.forsiminventory method)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.afforestation_inventory"], [13, "id4"]], "age_df (cbm_runner.forest_sim.forestsim_inventory.forsiminventory attribute)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.age_df"]], "baseline_forest_classifiers (cbm_runner.forest_sim.forestsim_inventory.forsiminventory attribute)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.baseline_forest_classifiers"]], "cbm_runner.forest_sim.forestsim_inventory": [[13, "module-cbm_runner.forest_sim.forestsim_inventory"]], "combined_mineral_afforestation_dict() (cbm_runner.forest_sim.forestsim_inventory.forsiminventory method)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.combined_mineral_afforestation_dict"], [13, "id5"]], "data_manager_class (cbm_runner.forest_sim.forestsim_inventory.forsiminventory attribute)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.data_manager_class"]], "fill_baseline_inventory() (cbm_runner.forest_sim.forestsim_inventory.forsiminventory method)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.fill_baseline_inventory"], [13, "id2"]], "inventory_iterator() (cbm_runner.forest_sim.forestsim_inventory.forsiminventory method)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.inventory_iterator"], [13, "id3"]], "legacy_afforestation() (cbm_runner.forest_sim.forestsim_inventory.forsiminventory method)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.legacy_afforestation"], [13, "id6"]], "legacy_afforestation_annual() (cbm_runner.forest_sim.forestsim_inventory.forsiminventory method)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.legacy_afforestation_annual"], [13, "id7"]], "legacy_forest_inventory() (cbm_runner.forest_sim.forestsim_inventory.forsiminventory method)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.legacy_forest_inventory"], [13, "id0"]], "legacy_year (cbm_runner.forest_sim.forestsim_inventory.forsiminventory attribute)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.legacy_year"]], "loader_class (cbm_runner.forest_sim.forestsim_inventory.forsiminventory attribute)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.loader_class"]], "make_inventory_structure() (cbm_runner.forest_sim.forestsim_inventory.forsiminventory method)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.make_inventory_structure"], [13, "id1"]], "scenario_afforesation_dict() (cbm_runner.forest_sim.forestsim_inventory.forsiminventory method)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.scenario_afforesation_dict"]], "scenario_afforestation_dict() (cbm_runner.forest_sim.forestsim_inventory.forsiminventory method)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.scenario_afforestation_dict"]], "scenario_forest_classifiers (cbm_runner.forest_sim.forestsim_inventory.forsiminventory attribute)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.scenario_forest_classifiers"]], "soils_dict (cbm_runner.forest_sim.forestsim_inventory.forsiminventory attribute)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.soils_dict"]], "yield_baseline_dict (cbm_runner.forest_sim.forestsim_inventory.forsiminventory attribute)": [[13, "cbm_runner.forest_sim.forestsim_inventory.ForSimInventory.yield_baseline_dict"]], "forestsimrunner (class in cbm_runner.forest_sim.forestsim_runner)": [[14, "cbm_runner.forest_sim.forestsim_runner.ForestSimRunner"]], "index (cbm_runner.forest_sim.forestsim_runner.forestsimrunner attribute)": [[14, "cbm_runner.forest_sim.forestsim_runner.ForestSimRunner.INDEX"]], "baseline_conf_path (cbm_runner.forest_sim.forestsim_runner.forestsimrunner attribute)": [[14, "cbm_runner.forest_sim.forestsim_runner.ForestSimRunner.baseline_conf_path"]], "cbm_data_class (cbm_runner.forest_sim.forestsim_runner.forestsimrunner attribute)": [[14, "cbm_runner.forest_sim.forestsim_runner.ForestSimRunner.cbm_data_class"]], "cbm_runner.forest_sim.forestsim_runner": [[14, "module-cbm_runner.forest_sim.forestsim_runner"]], "cbm_runner_class (cbm_runner.forest_sim.forestsim_runner.forestsimrunner attribute)": [[14, "cbm_runner.forest_sim.forestsim_runner.ForestSimRunner.cbm_runner_class"]], "gen_validation (cbm_runner.forest_sim.forestsim_runner.forestsimrunner attribute)": [[14, "cbm_runner.forest_sim.forestsim_runner.ForestSimRunner.gen_validation"]], "generate_base_input_data() (cbm_runner.forest_sim.forestsim_runner.forestsimrunner method)": [[14, "cbm_runner.forest_sim.forestsim_runner.ForestSimRunner.generate_base_input_data"], [14, "id0"]], "generate_input_data() (cbm_runner.forest_sim.forestsim_runner.forestsimrunner method)": [[14, "cbm_runner.forest_sim.forestsim_runner.ForestSimRunner.generate_input_data"], [14, "id1"]], "path (cbm_runner.forest_sim.forestsim_runner.forestsimrunner attribute)": [[14, "cbm_runner.forest_sim.forestsim_runner.ForestSimRunner.path"]], "paths_class (cbm_runner.forest_sim.forestsim_runner.forestsimrunner attribute)": [[14, "cbm_runner.forest_sim.forestsim_runner.ForestSimRunner.paths_class"]], "run_aggregate_scenarios() (cbm_runner.forest_sim.forestsim_runner.forestsimrunner method)": [[14, "cbm_runner.forest_sim.forestsim_runner.ForestSimRunner.run_aggregate_scenarios"], [14, "id2"]], "run_flux_scenarios() (cbm_runner.forest_sim.forestsim_runner.forestsimrunner method)": [[14, "cbm_runner.forest_sim.forestsim_runner.ForestSimRunner.run_flux_scenarios"], [14, "id3"]], "validation_path (cbm_runner.forest_sim.forestsim_runner.forestsimrunner attribute)": [[14, "cbm_runner.forest_sim.forestsim_runner.ForestSimRunner.validation_path"]], "cbm_runner.forest_sim.generated_input_data": [[15, "module-cbm_runner.forest_sim.generated_input_data"]], "get_local_dir() (in module cbm_runner.forest_sim.generated_input_data)": [[15, "cbm_runner.forest_sim.generated_input_data.get_local_dir"]], "cbm_runner.forest_sim": [[16, "module-cbm_runner.forest_sim"]], "cbm_runner.generated_input_data": [[17, "module-cbm_runner.generated_input_data"]], "get_local_dir() (in module cbm_runner.generated_input_data)": [[17, "cbm_runner.generated_input_data.get_local_dir"]], "cbm_runner.geo_cbm_runner.baseline_input_conf": [[18, "module-cbm_runner.geo_cbm_runner.baseline_input_conf"]], "get_local_dir() (in module cbm_runner.geo_cbm_runner.baseline_input_conf)": [[18, "cbm_runner.geo_cbm_runner.baseline_input_conf.get_local_dir"]], "catchmentforest (class in cbm_runner.geo_cbm_runner.catchment_forest_cover)": [[19, "cbm_runner.geo_cbm_runner.catchment_forest_cover.CatchmentForest"]], "api (cbm_runner.geo_cbm_runner.catchment_forest_cover.catchmentforest attribute)": [[19, "cbm_runner.geo_cbm_runner.catchment_forest_cover.CatchmentForest.api"]], "cbm_runner.geo_cbm_runner.catchment_forest_cover": [[19, "module-cbm_runner.geo_cbm_runner.catchment_forest_cover"]], "get_catchment_forest() (cbm_runner.geo_cbm_runner.catchment_forest_cover.catchmentforest method)": [[19, "cbm_runner.geo_cbm_runner.catchment_forest_cover.CatchmentForest.get_catchment_forest"], [19, "id0"]], "cbm_runner.geo_cbm_runner.generated_input_data": [[20, "module-cbm_runner.geo_cbm_runner.generated_input_data"]], "get_local_dir() (in module cbm_runner.geo_cbm_runner.generated_input_data)": [[20, "cbm_runner.geo_cbm_runner.generated_input_data.get_local_dir"]], "datafactory (class in cbm_runner.geo_cbm_runner.geo_cbm_data_factory)": [[21, "cbm_runner.geo_cbm_runner.geo_cbm_data_factory.DataFactory"]], "cbm_runner.geo_cbm_runner.geo_cbm_data_factory": [[21, "module-cbm_runner.geo_cbm_runner.geo_cbm_data_factory"]], "clean_baseline_data_dir() (cbm_runner.geo_cbm_runner.geo_cbm_data_factory.datafactory method)": [[21, "cbm_runner.geo_cbm_runner.geo_cbm_data_factory.DataFactory.clean_baseline_data_dir"]], "clean_data_dir() (cbm_runner.geo_cbm_runner.geo_cbm_data_factory.datafactory method)": [[21, "cbm_runner.geo_cbm_runner.geo_cbm_data_factory.DataFactory.clean_data_dir"]], "make_age_classes() (cbm_runner.geo_cbm_runner.geo_cbm_data_factory.datafactory method)": [[21, "cbm_runner.geo_cbm_runner.geo_cbm_data_factory.DataFactory.make_age_classes"]], "make_classifiers() (cbm_runner.geo_cbm_runner.geo_cbm_data_factory.datafactory method)": [[21, "cbm_runner.geo_cbm_runner.geo_cbm_data_factory.DataFactory.make_classifiers"]], "make_config_json() (cbm_runner.geo_cbm_runner.geo_cbm_data_factory.datafactory method)": [[21, "cbm_runner.geo_cbm_runner.geo_cbm_data_factory.DataFactory.make_config_json"]], "make_data_dirs() (cbm_runner.geo_cbm_runner.geo_cbm_data_factory.datafactory method)": [[21, "cbm_runner.geo_cbm_runner.geo_cbm_data_factory.DataFactory.make_data_dirs"]], "make_disturbance_events() (cbm_runner.geo_cbm_runner.geo_cbm_data_factory.datafactory method)": [[21, "cbm_runner.geo_cbm_runner.geo_cbm_data_factory.DataFactory.make_disturbance_events"]], "make_disturbance_type() (cbm_runner.geo_cbm_runner.geo_cbm_data_factory.datafactory method)": [[21, "cbm_runner.geo_cbm_runner.geo_cbm_data_factory.DataFactory.make_disturbance_type"]], "make_inventory() (cbm_runner.geo_cbm_runner.geo_cbm_data_factory.datafactory method)": [[21, "cbm_runner.geo_cbm_runner.geo_cbm_data_factory.DataFactory.make_inventory"]], "make_transition_rules() (cbm_runner.geo_cbm_runner.geo_cbm_data_factory.datafactory method)": [[21, "cbm_runner.geo_cbm_runner.geo_cbm_data_factory.DataFactory.make_transition_rules"]], "make_yield_curves() (cbm_runner.geo_cbm_runner.geo_cbm_data_factory.datafactory method)": [[21, "cbm_runner.geo_cbm_runner.geo_cbm_data_factory.DataFactory.make_yield_curves"]], "set_baseline_input_data_dir() (cbm_runner.geo_cbm_runner.geo_cbm_data_factory.datafactory method)": [[21, "cbm_runner.geo_cbm_runner.geo_cbm_data_factory.DataFactory.set_baseline_input_data_dir"]], "set_input_data_dir() (cbm_runner.geo_cbm_runner.geo_cbm_data_factory.datafactory method)": [[21, "cbm_runner.geo_cbm_runner.geo_cbm_data_factory.DataFactory.set_input_data_dir"]], "geocbm_validationmanager (class in cbm_runner.geo_cbm_runner.geo_cbm_validation_manager)": [[22, "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.GeoCBM_ValidationManager"]], "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager": [[22, "module-cbm_runner.geo_cbm_runner.geo_cbm_validation_manager"]], "clear_validation_folder() (cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.geocbm_validationmanager method)": [[22, "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.GeoCBM_ValidationManager.clear_validation_folder"], [22, "id0"]], "get_age_classes() (cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.geocbm_validationmanager method)": [[22, "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.GeoCBM_ValidationManager.get_age_classes"], [22, "id3"]], "get_baseline_forest() (cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.geocbm_validationmanager method)": [[22, "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.GeoCBM_ValidationManager.get_baseline_forest"], [22, "id5"]], "get_data_area() (cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.geocbm_validationmanager method)": [[22, "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.GeoCBM_ValidationManager.get_data_area"], [22, "id6"]], "get_data_flux() (cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.geocbm_validationmanager method)": [[22, "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.GeoCBM_ValidationManager.get_data_flux"], [22, "id7"]], "get_data_params() (cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.geocbm_validationmanager method)": [[22, "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.GeoCBM_ValidationManager.get_data_params"], [22, "id8"]], "get_data_pools() (cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.geocbm_validationmanager method)": [[22, "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.GeoCBM_ValidationManager.get_data_pools"], [22, "id9"]], "get_data_state() (cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.geocbm_validationmanager method)": [[22, "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.GeoCBM_ValidationManager.get_data_state"], [22, "id10"]], "get_linked_events() (cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.geocbm_validationmanager method)": [[22, "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.GeoCBM_ValidationManager.get_linked_events"], [22, "id1"]], "get_sit_events() (cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.geocbm_validationmanager method)": [[22, "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.GeoCBM_ValidationManager.get_sit_events"], [22, "id4"]], "get_site_event_stats_by_timestep() (cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.geocbm_validationmanager method)": [[22, "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.GeoCBM_ValidationManager.get_site_event_stats_by_timestep"], [22, "id2"]], "path (cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.geocbm_validationmanager attribute)": [[22, "cbm_runner.geo_cbm_runner.geo_cbm_validation_manager.GeoCBM_ValidationManager.path"]], "createjson (class in cbm_runner.geo_cbm_runner.geo_create_json)": [[23, "cbm_runner.geo_cbm_runner.geo_create_json.CreateJSON"]], "cbm_runner.geo_cbm_runner.geo_create_json": [[23, "module-cbm_runner.geo_cbm_runner.geo_create_json"]], "data_manager_class (cbm_runner.geo_cbm_runner.geo_create_json.createjson attribute)": [[23, "cbm_runner.geo_cbm_runner.geo_create_json.CreateJSON.data_manager_class"]], "loader_class (cbm_runner.geo_cbm_runner.geo_create_json.createjson attribute)": [[23, "cbm_runner.geo_cbm_runner.geo_create_json.CreateJSON.loader_class"]], "populate_template() (cbm_runner.geo_cbm_runner.geo_create_json.createjson method)": [[23, "cbm_runner.geo_cbm_runner.geo_create_json.CreateJSON.populate_template"], [23, "id0"]], "template (cbm_runner.geo_cbm_runner.geo_create_json.createjson attribute)": [[23, "cbm_runner.geo_cbm_runner.geo_create_json.CreateJSON.template"]], "disturbances (class in cbm_runner.geo_cbm_runner.geo_disturbances)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances"]], "_drop_zero_area_rows() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances._drop_zero_area_rows"], [24, "id6"]], "_generate_row() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances._generate_row"], [24, "id11"]], "_get_classifier_combinations() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances._get_classifier_combinations"], [24, "id9"]], "_get_legacy_classifier_combinations() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances._get_legacy_classifier_combinations"], [24, "id7"]], "_get_scenario_classifier_combinations() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances._get_scenario_classifier_combinations"], [24, "id8"]], "_get_static_defaults() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances._get_static_defaults"], [24, "id10"]], "_handle_legacy_forest() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances._handle_legacy_forest"], [24, "id15"]], "_handle_legacy_scenario_forest() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances._handle_legacy_scenario_forest"], [24, "id13"]], "_handle_scenario_afforestation() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances._handle_scenario_afforestation"], [24, "id14"]], "_process_scenario_harvest_data() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances._process_scenario_harvest_data"], [24, "id4"]], "_process_scenario_row_data() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances._process_scenario_row_data"], [24, "id12"]], "_track_scenario_harvest() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances._track_scenario_harvest"], [24, "id5"]], "_update_disturbance_timing() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances._update_disturbance_timing"], [24, "id16"]], "afforestation_data (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances attribute)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.afforestation_data"]], "baseline_forest_classifiers (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances attribute)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.baseline_forest_classifiers"]], "calibration_year (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances attribute)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.calibration_year"]], "cbm_runner.geo_cbm_runner.geo_disturbances": [[24, "module-cbm_runner.geo_cbm_runner.geo_disturbances"]], "data_manager_class (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances attribute)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.data_manager_class"]], "disturbance_dataframe (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances attribute)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.disturbance_dataframe"]], "disturbance_structure() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.disturbance_structure"], [24, "id1"]], "disturbance_timing (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances attribute)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.disturbance_timing"]], "fill_baseline_forest() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.fill_baseline_forest"], [24, "id2"]], "fill_scenario_data() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.fill_scenario_data"], [24, "id3"]], "forest_end_year (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances attribute)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.forest_end_year"]], "get_legacy_forest_area_breakdown() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.get_legacy_forest_area_breakdown"], [24, "id17"]], "inventory_class (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances attribute)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.inventory_class"]], "legacy_disturbance_dict (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances attribute)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.legacy_disturbance_dict"]], "legacy_disturbance_tracker() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.legacy_disturbance_tracker"], [24, "id18"]], "loader_class (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances attribute)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.loader_class"]], "scenario_afforestation_area() (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances method)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.scenario_afforestation_area"], [24, "id0"]], "scenario_disturbance_dict (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances attribute)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.scenario_disturbance_dict"]], "scenario_forest_classifiers (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances attribute)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.scenario_forest_classifiers"]], "yield_name_dict (cbm_runner.geo_cbm_runner.geo_disturbances.disturbances attribute)": [[24, "cbm_runner.geo_cbm_runner.geo_disturbances.Disturbances.yield_name_dict"]], "inventory (class in cbm_runner.geo_cbm_runner.geo_inventory)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory"]], "afforestation_annual_dict() (cbm_runner.geo_cbm_runner.geo_inventory.inventory method)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.afforestation_annual_dict"]], "afforestation_data (cbm_runner.geo_cbm_runner.geo_inventory.inventory attribute)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.afforestation_data"]], "afforestation_inventory() (cbm_runner.geo_cbm_runner.geo_inventory.inventory method)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.afforestation_inventory"], [25, "id4"]], "age_df (cbm_runner.geo_cbm_runner.geo_inventory.inventory attribute)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.age_df"]], "baseline_forest_classifiers (cbm_runner.geo_cbm_runner.geo_inventory.inventory attribute)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.baseline_forest_classifiers"]], "cbm_runner.geo_cbm_runner.geo_inventory": [[25, "module-cbm_runner.geo_cbm_runner.geo_inventory"]], "combined_mineral_afforestation_dict() (cbm_runner.geo_cbm_runner.geo_inventory.inventory method)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.combined_mineral_afforestation_dict"]], "data_manager_class (cbm_runner.geo_cbm_runner.geo_inventory.inventory attribute)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.data_manager_class"]], "fill_baseline_inventory() (cbm_runner.geo_cbm_runner.geo_inventory.inventory method)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.fill_baseline_inventory"], [25, "id2"]], "inventory_iterator() (cbm_runner.geo_cbm_runner.geo_inventory.inventory method)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.inventory_iterator"], [25, "id3"]], "legacy_afforestation() (cbm_runner.geo_cbm_runner.geo_inventory.inventory method)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.legacy_afforestation"]], "legacy_afforestation_annual() (cbm_runner.geo_cbm_runner.geo_inventory.inventory method)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.legacy_afforestation_annual"]], "legacy_forest_inventory() (cbm_runner.geo_cbm_runner.geo_inventory.inventory method)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.legacy_forest_inventory"], [25, "id0"]], "legacy_year (cbm_runner.geo_cbm_runner.geo_inventory.inventory attribute)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.legacy_year"]], "loader_class (cbm_runner.geo_cbm_runner.geo_inventory.inventory attribute)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.loader_class"]], "make_inventory_structure() (cbm_runner.geo_cbm_runner.geo_inventory.inventory method)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.make_inventory_structure"], [25, "id1"]], "scenario_afforesation_dict() (cbm_runner.geo_cbm_runner.geo_inventory.inventory method)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.scenario_afforesation_dict"]], "scenario_afforestation_dict() (cbm_runner.geo_cbm_runner.geo_inventory.inventory method)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.scenario_afforestation_dict"]], "scenario_forest_classifiers (cbm_runner.geo_cbm_runner.geo_inventory.inventory attribute)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.scenario_forest_classifiers"]], "soils_dict (cbm_runner.geo_cbm_runner.geo_inventory.inventory attribute)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.soils_dict"]], "yield_baseline_dict (cbm_runner.geo_cbm_runner.geo_inventory.inventory attribute)": [[25, "cbm_runner.geo_cbm_runner.geo_inventory.Inventory.yield_baseline_dict"]], "flux_class (cbm_runner.geo_cbm_runner.geo_runner.georunner attribute)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.Flux_class"]], "georunner (class in cbm_runner.geo_cbm_runner.geo_runner)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner"]], "index (cbm_runner.geo_cbm_runner.geo_runner.georunner attribute)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.INDEX"]], "__init__() (cbm_runner.geo_cbm_runner.geo_runner.georunner method)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.__init__"]], "_add_years() (cbm_runner.geo_cbm_runner.geo_runner.georunner method)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner._add_years"]], "afforestation_scenarios_structure() (cbm_runner.geo_cbm_runner.geo_runner.georunner method)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.afforestation_scenarios_structure"], [26, "id4"]], "baseline_conf_path (cbm_runner.geo_cbm_runner.geo_runner.georunner attribute)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.baseline_conf_path"]], "cbm_aggregate_scenario() (cbm_runner.geo_cbm_runner.geo_runner.georunner method)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.cbm_aggregate_scenario"], [26, "id6"]], "cbm_baseline_forest() (cbm_runner.geo_cbm_runner.geo_runner.georunner method)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.cbm_baseline_forest"], [26, "id5"]], "cbm_data_class (cbm_runner.geo_cbm_runner.geo_runner.georunner attribute)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.cbm_data_class"]], "cbm_runner.geo_cbm_runner.geo_runner": [[26, "module-cbm_runner.geo_cbm_runner.geo_runner"]], "cbm_scenario_fluxes() (cbm_runner.geo_cbm_runner.geo_runner.georunner method)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.cbm_scenario_fluxes"], [26, "id8"]], "data_manager_class (cbm_runner.geo_cbm_runner.geo_runner.georunner attribute)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.data_manager_class"]], "forest_end_year (cbm_runner.geo_cbm_runner.geo_runner.georunner attribute)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.forest_end_year"]], "gen_validation (cbm_runner.geo_cbm_runner.geo_runner.georunner attribute)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.gen_validation"]], "generate_base_input_data() (cbm_runner.geo_cbm_runner.geo_runner.georunner method)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.generate_base_input_data"], [26, "id0"]], "generate_input_data() (cbm_runner.geo_cbm_runner.geo_runner.georunner method)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.generate_input_data"], [26, "id1"]], "libcbm_scenario_fluxes() (cbm_runner.geo_cbm_runner.geo_runner.georunner method)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.libcbm_scenario_fluxes"], [26, "id7"]], "path (cbm_runner.geo_cbm_runner.geo_runner.georunner attribute)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.path"]], "paths_class (cbm_runner.geo_cbm_runner.geo_runner.georunner attribute)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.paths_class"]], "pools (cbm_runner.geo_cbm_runner.geo_runner.georunner attribute)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.pools"]], "run_aggregate_scenarios() (cbm_runner.geo_cbm_runner.geo_runner.georunner method)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.run_aggregate_scenarios"], [26, "id2"]], "run_flux_scenarios() (cbm_runner.geo_cbm_runner.geo_runner.georunner method)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.run_flux_scenarios"], [26, "id3"]], "validation_path (cbm_runner.geo_cbm_runner.geo_runner.georunner attribute)": [[26, "cbm_runner.geo_cbm_runner.geo_runner.GeoRunner.validation_path"]], "transition (class in cbm_runner.geo_cbm_runner.geo_transition)": [[27, "cbm_runner.geo_cbm_runner.geo_transition.Transition"]], "baseline_forest_classifiers (cbm_runner.geo_cbm_runner.geo_transition.transition attribute)": [[27, "cbm_runner.geo_cbm_runner.geo_transition.Transition.baseline_forest_classifiers"]], "cbm_runner.geo_cbm_runner.geo_transition": [[27, "module-cbm_runner.geo_cbm_runner.geo_transition"]], "data_manager_class (cbm_runner.geo_cbm_runner.geo_transition.transition attribute)": [[27, "cbm_runner.geo_cbm_runner.geo_transition.Transition.data_manager_class"]], "make_transition_rules_structure() (cbm_runner.geo_cbm_runner.geo_transition.transition method)": [[27, "cbm_runner.geo_cbm_runner.geo_transition.Transition.make_transition_rules_structure"], [27, "id0"]], "scenario_forest_classifiers (cbm_runner.geo_cbm_runner.geo_transition.transition attribute)": [[27, "cbm_runner.geo_cbm_runner.geo_transition.Transition.scenario_forest_classifiers"]], "cbm_runner.geo_cbm_runner": [[28, "module-cbm_runner.geo_cbm_runner"]], "afforestationtracker (class in cbm_runner.harvest_manager.harvest)": [[29, "cbm_runner.harvest_manager.harvest.AfforestationTracker"]], "disturbedforeststand (class in cbm_runner.harvest_manager.harvest)": [[29, "cbm_runner.harvest_manager.harvest.DisturbedForestStand"]], "foreststand (class in cbm_runner.harvest_manager.harvest)": [[29, "cbm_runner.harvest_manager.harvest.ForestStand"]], "__init__() (cbm_runner.harvest_manager.harvest.foreststand method)": [[29, "cbm_runner.harvest_manager.harvest.ForestStand.__init__"]], "afforest() (cbm_runner.harvest_manager.harvest.afforestationtracker method)": [[29, "cbm_runner.harvest_manager.harvest.AfforestationTracker.afforest"], [29, "id3"]], "age (cbm_runner.harvest_manager.harvest.foreststand attribute)": [[29, "cbm_runner.harvest_manager.harvest.ForestStand.age"]], "age_stand() (cbm_runner.harvest_manager.harvest.foreststand method)": [[29, "cbm_runner.harvest_manager.harvest.ForestStand.age_stand"], [29, "id0"]], "area (cbm_runner.harvest_manager.harvest.disturbedforeststand attribute)": [[29, "cbm_runner.harvest_manager.harvest.DisturbedForestStand.area"]], "area (cbm_runner.harvest_manager.harvest.foreststand attribute)": [[29, "cbm_runner.harvest_manager.harvest.ForestStand.area"]], "cbm_runner.harvest_manager.harvest": [[29, "module-cbm_runner.harvest_manager.harvest"]], "data_manager_class (cbm_runner.harvest_manager.harvest.afforestationtracker attribute)": [[29, "cbm_runner.harvest_manager.harvest.AfforestationTracker.data_manager_class"]], "dist (cbm_runner.harvest_manager.harvest.disturbedforeststand attribute)": [[29, "cbm_runner.harvest_manager.harvest.DisturbedForestStand.dist"]], "disturb() (cbm_runner.harvest_manager.harvest.foreststand method)": [[29, "cbm_runner.harvest_manager.harvest.ForestStand.disturb"], [29, "id1"]], "disturbance_timing (cbm_runner.harvest_manager.harvest.afforestationtracker attribute)": [[29, "cbm_runner.harvest_manager.harvest.AfforestationTracker.disturbance_timing"]], "disturbed_stands (cbm_runner.harvest_manager.harvest.afforestationtracker attribute)": [[29, "cbm_runner.harvest_manager.harvest.AfforestationTracker.disturbed_stands"]], "forest_disturbance() (cbm_runner.harvest_manager.harvest.afforestationtracker method)": [[29, "cbm_runner.harvest_manager.harvest.AfforestationTracker.forest_disturbance"], [29, "id5"]], "get_disturbance_data_for_year() (cbm_runner.harvest_manager.harvest.afforestationtracker method)": [[29, "cbm_runner.harvest_manager.harvest.AfforestationTracker.get_disturbance_data_for_year"], [29, "id7"]], "get_stand_data_by_age() (cbm_runner.harvest_manager.harvest.afforestationtracker method)": [[29, "cbm_runner.harvest_manager.harvest.AfforestationTracker.get_stand_data_by_age"], [29, "id8"]], "get_stand_data_for_year() (cbm_runner.harvest_manager.harvest.afforestationtracker method)": [[29, "cbm_runner.harvest_manager.harvest.AfforestationTracker.get_stand_data_for_year"], [29, "id6"]], "loader_class (cbm_runner.harvest_manager.harvest.afforestationtracker attribute)": [[29, "cbm_runner.harvest_manager.harvest.AfforestationTracker.loader_class"]], "move_to_next_age() (cbm_runner.harvest_manager.harvest.afforestationtracker method)": [[29, "cbm_runner.harvest_manager.harvest.AfforestationTracker.move_to_next_age"], [29, "id4"]], "reset_dist() (cbm_runner.harvest_manager.harvest.foreststand method)": [[29, "cbm_runner.harvest_manager.harvest.ForestStand.reset_dist"], [29, "id2"]], "since_last_dist (cbm_runner.harvest_manager.harvest.foreststand attribute)": [[29, "cbm_runner.harvest_manager.harvest.ForestStand.since_last_dist"]], "soil (cbm_runner.harvest_manager.harvest.disturbedforeststand attribute)": [[29, "cbm_runner.harvest_manager.harvest.DisturbedForestStand.soil"]], "soil (cbm_runner.harvest_manager.harvest.foreststand attribute)": [[29, "cbm_runner.harvest_manager.harvest.ForestStand.soil"]], "species (cbm_runner.harvest_manager.harvest.disturbedforeststand attribute)": [[29, "cbm_runner.harvest_manager.harvest.DisturbedForestStand.species"]], "species (cbm_runner.harvest_manager.harvest.foreststand attribute)": [[29, "cbm_runner.harvest_manager.harvest.ForestStand.species"]], "stands (cbm_runner.harvest_manager.harvest.afforestationtracker attribute)": [[29, "cbm_runner.harvest_manager.harvest.AfforestationTracker.stands"]], "year (cbm_runner.harvest_manager.harvest.disturbedforeststand attribute)": [[29, "cbm_runner.harvest_manager.harvest.DisturbedForestStand.year"]], "yield_class (cbm_runner.harvest_manager.harvest.disturbedforeststand attribute)": [[29, "cbm_runner.harvest_manager.harvest.DisturbedForestStand.yield_class"]], "yield_class (cbm_runner.harvest_manager.harvest.foreststand attribute)": [[29, "cbm_runner.harvest_manager.harvest.ForestStand.yield_class"]], "cbm_runner.harvest_manager": [[30, "module-cbm_runner.harvest_manager"]], "cbm_runner.historic_affor.baseline_input_conf": [[31, "module-cbm_runner.historic_affor.baseline_input_conf"]], "get_local_dir() (in module cbm_runner.historic_affor.baseline_input_conf)": [[31, "cbm_runner.historic_affor.baseline_input_conf.get_local_dir"]], "cbm_runner.historic_affor.generated_input_data": [[32, "module-cbm_runner.historic_affor.generated_input_data"]], "get_local_dir() (in module cbm_runner.historic_affor.generated_input_data)": [[32, "cbm_runner.historic_affor.generated_input_data.get_local_dir"]], "historicafforrunner (class in cbm_runner.historic_affor.historic_affor_runner)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner"]], "index (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner attribute)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.INDEX"]], "afforestation_scenarios_structure() (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner method)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.afforestation_scenarios_structure"], [33, "id1"]], "baseline_conf_path (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner attribute)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.baseline_conf_path"]], "cbm_aggregate_scenario() (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner method)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.cbm_aggregate_scenario"], [33, "id5"]], "cbm_data_class (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner attribute)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.cbm_data_class"]], "cbm_runner.historic_affor.historic_affor_runner": [[33, "module-cbm_runner.historic_affor.historic_affor_runner"]], "data_manager_class (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner attribute)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.data_manager_class"]], "forest_end_year (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner attribute)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.forest_end_year"]], "gen_validation (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner attribute)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.gen_validation"]], "generate_input_data() (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner method)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.generate_input_data"], [33, "id0"]], "libcbm_scenario_fluxes() (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner method)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.libcbm_scenario_fluxes"], [33, "id6"]], "path (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner attribute)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.path"]], "paths_class (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner attribute)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.paths_class"]], "run_aggregate_scenarios() (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner method)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.run_aggregate_scenarios"], [33, "id3"]], "run_flux_scenarios() (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner method)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.run_flux_scenarios"], [33, "id2"]], "run_libcbm_flux_scenarios() (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner method)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.run_libcbm_flux_scenarios"], [33, "id4"]], "runner_class (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner attribute)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.runner_class"]], "validation_path (cbm_runner.historic_affor.historic_affor_runner.historicafforrunner attribute)": [[33, "cbm_runner.historic_affor.historic_affor_runner.HistoricAfforRunner.validation_path"]], "historicvalidationmanager (class in cbm_runner.historic_affor.historic_affor_validation_manager)": [[34, "cbm_runner.historic_affor.historic_affor_validation_manager.HistoricValidationManager"]], "cbm_runner.historic_affor.historic_affor_validation_manager": [[34, "module-cbm_runner.historic_affor.historic_affor_validation_manager"]], "clear_validation_folder() (cbm_runner.historic_affor.historic_affor_validation_manager.historicvalidationmanager method)": [[34, "cbm_runner.historic_affor.historic_affor_validation_manager.HistoricValidationManager.clear_validation_folder"], [34, "id0"]], "get_age_classes() (cbm_runner.historic_affor.historic_affor_validation_manager.historicvalidationmanager method)": [[34, "cbm_runner.historic_affor.historic_affor_validation_manager.HistoricValidationManager.get_age_classes"], [34, "id3"]], "get_baseline_forest() (cbm_runner.historic_affor.historic_affor_validation_manager.historicvalidationmanager method)": [[34, "cbm_runner.historic_affor.historic_affor_validation_manager.HistoricValidationManager.get_baseline_forest"], [34, "id5"]], "get_data_area() (cbm_runner.historic_affor.historic_affor_validation_manager.historicvalidationmanager method)": [[34, "cbm_runner.historic_affor.historic_affor_validation_manager.HistoricValidationManager.get_data_area"], [34, "id6"]], "get_data_flux() (cbm_runner.historic_affor.historic_affor_validation_manager.historicvalidationmanager method)": [[34, "cbm_runner.historic_affor.historic_affor_validation_manager.HistoricValidationManager.get_data_flux"], [34, "id7"]], "get_data_params() (cbm_runner.historic_affor.historic_affor_validation_manager.historicvalidationmanager method)": [[34, "cbm_runner.historic_affor.historic_affor_validation_manager.HistoricValidationManager.get_data_params"], [34, "id8"]], "get_data_pools() (cbm_runner.historic_affor.historic_affor_validation_manager.historicvalidationmanager method)": [[34, "cbm_runner.historic_affor.historic_affor_validation_manager.HistoricValidationManager.get_data_pools"], [34, "id9"]], "get_data_state() (cbm_runner.historic_affor.historic_affor_validation_manager.historicvalidationmanager method)": [[34, "cbm_runner.historic_affor.historic_affor_validation_manager.HistoricValidationManager.get_data_state"], [34, "id10"]], "get_linked_events() (cbm_runner.historic_affor.historic_affor_validation_manager.historicvalidationmanager method)": [[34, "cbm_runner.historic_affor.historic_affor_validation_manager.HistoricValidationManager.get_linked_events"], [34, "id1"]], "get_sit_events() (cbm_runner.historic_affor.historic_affor_validation_manager.historicvalidationmanager method)": [[34, "cbm_runner.historic_affor.historic_affor_validation_manager.HistoricValidationManager.get_sit_events"], [34, "id4"]], "get_site_event_stats_by_timestep() (cbm_runner.historic_affor.historic_affor_validation_manager.historicvalidationmanager method)": [[34, "cbm_runner.historic_affor.historic_affor_validation_manager.HistoricValidationManager.get_site_event_stats_by_timestep"], [34, "id2"]], "path (cbm_runner.historic_affor.historic_affor_validation_manager.historicvalidationmanager attribute)": [[34, "cbm_runner.historic_affor.historic_affor_validation_manager.HistoricValidationManager.path"]], "cbm_runner.historic_affor": [[35, "module-cbm_runner.historic_affor"]], "cbm_runner": [[36, "module-cbm_runner"]], "inventory (class in cbm_runner.inventory)": [[37, "cbm_runner.inventory.Inventory"]], "afforestation_annual_dict() (cbm_runner.inventory.inventory method)": [[37, "cbm_runner.inventory.Inventory.afforestation_annual_dict"], [37, "id8"]], "afforestation_data (cbm_runner.inventory.inventory attribute)": [[37, "cbm_runner.inventory.Inventory.afforestation_data"]], "afforestation_inventory() (cbm_runner.inventory.inventory method)": [[37, "cbm_runner.inventory.Inventory.afforestation_inventory"], [37, "id4"]], "age_df (cbm_runner.inventory.inventory attribute)": [[37, "cbm_runner.inventory.Inventory.age_df"]], "baseline_forest_classifiers (cbm_runner.inventory.inventory attribute)": [[37, "cbm_runner.inventory.Inventory.baseline_forest_classifiers"]], "cbm_runner.inventory": [[37, "module-cbm_runner.inventory"]], "combined_mineral_afforestation_dict() (cbm_runner.inventory.inventory method)": [[37, "cbm_runner.inventory.Inventory.combined_mineral_afforestation_dict"], [37, "id5"]], "data_manager_class (cbm_runner.inventory.inventory attribute)": [[37, "cbm_runner.inventory.Inventory.data_manager_class"]], "fill_baseline_inventory() (cbm_runner.inventory.inventory method)": [[37, "cbm_runner.inventory.Inventory.fill_baseline_inventory"], [37, "id2"]], "inventory_iterator() (cbm_runner.inventory.inventory method)": [[37, "cbm_runner.inventory.Inventory.inventory_iterator"], [37, "id3"]], "legacy_afforestation() (cbm_runner.inventory.inventory method)": [[37, "cbm_runner.inventory.Inventory.legacy_afforestation"], [37, "id6"]], "legacy_afforestation_annual() (cbm_runner.inventory.inventory method)": [[37, "cbm_runner.inventory.Inventory.legacy_afforestation_annual"], [37, "id7"]], "legacy_forest_inventory() (cbm_runner.inventory.inventory method)": [[37, "cbm_runner.inventory.Inventory.legacy_forest_inventory"], [37, "id0"]], "legacy_year (cbm_runner.inventory.inventory attribute)": [[37, "cbm_runner.inventory.Inventory.legacy_year"]], "loader_class (cbm_runner.inventory.inventory attribute)": [[37, "cbm_runner.inventory.Inventory.loader_class"]], "make_inventory_structure() (cbm_runner.inventory.inventory method)": [[37, "cbm_runner.inventory.Inventory.make_inventory_structure"], [37, "id1"]], "scenario_afforesation_dict() (cbm_runner.inventory.inventory method)": [[37, "cbm_runner.inventory.Inventory.scenario_afforesation_dict"]], "scenario_afforestation_dict() (cbm_runner.inventory.inventory method)": [[37, "cbm_runner.inventory.Inventory.scenario_afforestation_dict"]], "scenario_forest_classifiers (cbm_runner.inventory.inventory attribute)": [[37, "cbm_runner.inventory.Inventory.scenario_forest_classifiers"]], "soils_dict (cbm_runner.inventory.inventory attribute)": [[37, "cbm_runner.inventory.Inventory.soils_dict"]], "yield_baseline_dict (cbm_runner.inventory.inventory attribute)": [[37, "cbm_runner.inventory.Inventory.yield_baseline_dict"]], "pools (class in cbm_runner.resource_manager.cbm_pools)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools"]], "above_ground_biomass_pools (cbm_runner.resource_manager.cbm_pools.pools attribute)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.above_ground_biomass_pools"]], "annual_process_fluxes (cbm_runner.resource_manager.cbm_pools.pools attribute)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.annual_process_fluxes"]], "below_ground_biomass_pools (cbm_runner.resource_manager.cbm_pools.pools attribute)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.below_ground_biomass_pools"]], "cbm_runner.resource_manager.cbm_pools": [[38, "module-cbm_runner.resource_manager.cbm_pools"]], "deadwood (cbm_runner.resource_manager.cbm_pools.pools attribute)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.deadwood"]], "get_above_ground_biomass_pools() (cbm_runner.resource_manager.cbm_pools.pools method)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.get_above_ground_biomass_pools"], [38, "id0"]], "get_annual_process_columns() (cbm_runner.resource_manager.cbm_pools.pools method)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.get_annual_process_columns"]], "get_annual_process_fluxes() (cbm_runner.resource_manager.cbm_pools.pools method)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.get_annual_process_fluxes"], [38, "id5"]], "get_below_ground_biomass_pools() (cbm_runner.resource_manager.cbm_pools.pools method)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.get_below_ground_biomass_pools"], [38, "id1"]], "get_deadwood_pools() (cbm_runner.resource_manager.cbm_pools.pools method)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.get_deadwood_pools"], [38, "id2"]], "get_disturbance_flux_columns() (cbm_runner.resource_manager.cbm_pools.pools method)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.get_disturbance_flux_columns"]], "get_gross_growth_ag() (cbm_runner.resource_manager.cbm_pools.pools method)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.get_gross_growth_AG"]], "get_gross_growth_bg() (cbm_runner.resource_manager.cbm_pools.pools method)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.get_gross_growth_BG"]], "get_litter_pools() (cbm_runner.resource_manager.cbm_pools.pools method)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.get_litter_pools"], [38, "id3"]], "get_soil_organic_matter_pools() (cbm_runner.resource_manager.cbm_pools.pools method)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.get_soil_organic_matter_pools"], [38, "id4"]], "get_total_litter() (cbm_runner.resource_manager.cbm_pools.pools method)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.get_total_litter"]], "litter (cbm_runner.resource_manager.cbm_pools.pools attribute)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.litter"]], "soil_organic_matter (cbm_runner.resource_manager.cbm_pools.pools attribute)": [[38, "cbm_runner.resource_manager.cbm_pools.Pools.soil_organic_matter"]], "datamanager (class in cbm_runner.resource_manager.cbm_runner_data_manager)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager"]], "afforestation_baseline (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.afforestation_baseline"]], "afforestation_yield_name_dict (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.afforestation_yield_name_dict"]], "cbm_default_config (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.cbm_default_config"]], "cbm_runner.resource_manager.cbm_runner_data_manager": [[39, "module-cbm_runner.resource_manager.cbm_runner_data_manager"]], "classifiers (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.classifiers"]], "config_data (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.config_data"]], "disturbance_cols (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.disturbance_cols"]], "disturbances_config (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.disturbances_config"]], "forest_baseline_year (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.forest_baseline_year"]], "forest_type_keys (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.forest_type_keys"]], "gen_scenario_disturbance_dict() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.gen_scenario_disturbance_dict"]], "get_afforestation_baseline() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_afforestation_baseline"]], "get_afforestation_yield_name_dict() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_afforestation_yield_name_dict"]], "get_baseline_disturbance_dict() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_baseline_disturbance_dict"]], "get_classifiers() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_classifiers"]], "get_config_data() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_config_data"]], "get_disturbance_cols() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_disturbance_cols"]], "get_disturbances_config() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_disturbances_config"]], "get_forest_baseline_year() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_forest_baseline_year"]], "get_forest_type_keys() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_forest_type_keys"]], "get_legacy_disturbance_dict() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_legacy_disturbance_dict"]], "get_mapping() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_mapping"]], "get_non_forest_dict() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_non_forest_dict"]], "get_non_forest_soils() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_non_forest_soils"]], "get_scenario_data() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_scenario_data"]], "get_scenario_disturbance_dict() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_scenario_disturbance_dict"]], "get_soils_dict() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_soils_dict"]], "get_species_name_dict() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_species_name_dict"]], "get_static_disturbance_cols() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_static_disturbance_cols"]], "get_transition_cols() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_transition_cols"]], "get_yield_baseline_dict() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_yield_baseline_dict"]], "get_yield_name_dict() (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager method)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.get_yield_name_dict"]], "mapping (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.mapping"]], "non_forest_dict (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.non_forest_dict"]], "non_forest_soils (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.non_forest_soils"]], "scenario_data (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.scenario_data"]], "scenario_disturbance_dict (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.scenario_disturbance_dict"]], "soils_dict (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.soils_dict"]], "species_name_dict (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.species_name_dict"]], "static_disturbance_cols (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.static_disturbance_cols"]], "transition_cols (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.transition_cols"]], "yield_baseline_dict (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.yield_baseline_dict"]], "yield_name_dict (cbm_runner.resource_manager.cbm_runner_data_manager.datamanager attribute)": [[39, "cbm_runner.resource_manager.cbm_runner_data_manager.DataManager.yield_name_dict"]], "datamanager (class in cbm_runner.resource_manager.database_manager)": [[40, "cbm_runner.resource_manager.database_manager.DataManager"]], "cbm_runner.resource_manager.database_manager": [[40, "module-cbm_runner.resource_manager.database_manager"]], "data_engine_creater() (cbm_runner.resource_manager.database_manager.datamanager method)": [[40, "cbm_runner.resource_manager.database_manager.DataManager.data_engine_creater"], [40, "id0"]], "database_dir (cbm_runner.resource_manager.database_manager.datamanager attribute)": [[40, "cbm_runner.resource_manager.database_manager.DataManager.database_dir"]], "engine (cbm_runner.resource_manager.database_manager.datamanager attribute)": [[40, "cbm_runner.resource_manager.database_manager.DataManager.engine"]], "get_nir_forest_data_ha() (cbm_runner.resource_manager.database_manager.datamanager method)": [[40, "cbm_runner.resource_manager.database_manager.DataManager.get_NIR_forest_data_ha"], [40, "id4"]], "get_afforestation_areas_kb() (cbm_runner.resource_manager.database_manager.datamanager method)": [[40, "cbm_runner.resource_manager.database_manager.DataManager.get_afforestation_areas_KB"], [40, "id7"]], "get_afforestation_areas_nir() (cbm_runner.resource_manager.database_manager.datamanager method)": [[40, "cbm_runner.resource_manager.database_manager.DataManager.get_afforestation_areas_NIR"], [40, "id6"]], "get_cso_species_breakdown() (cbm_runner.resource_manager.database_manager.datamanager method)": [[40, "cbm_runner.resource_manager.database_manager.DataManager.get_cso_species_breakdown"], [40, "id5"]], "get_disturbance_data() (cbm_runner.resource_manager.database_manager.datamanager method)": [[40, "cbm_runner.resource_manager.database_manager.DataManager.get_disturbance_data"], [40, "id12"]], "get_disturbance_times() (cbm_runner.resource_manager.database_manager.datamanager method)": [[40, "cbm_runner.resource_manager.database_manager.DataManager.get_disturbance_times"], [40, "id11"]], "get_disturbance_types() (cbm_runner.resource_manager.database_manager.datamanager method)": [[40, "cbm_runner.resource_manager.database_manager.DataManager.get_disturbance_types"], [40, "id10"]], "get_forest_cbm_yields() (cbm_runner.resource_manager.database_manager.datamanager method)": [[40, "cbm_runner.resource_manager.database_manager.DataManager.get_forest_cbm_yields"], [40, "id2"]], "get_forest_harvest_nir() (cbm_runner.resource_manager.database_manager.datamanager method)": [[40, "cbm_runner.resource_manager.database_manager.DataManager.get_forest_harvest_NIR"], [40, "id8"]], "get_forest_inventory_age_strucuture() (cbm_runner.resource_manager.database_manager.datamanager method)": [[40, "cbm_runner.resource_manager.database_manager.DataManager.get_forest_inventory_age_strucuture"], [40, "id1"]], "get_forest_kb_yields() (cbm_runner.resource_manager.database_manager.datamanager method)": [[40, "cbm_runner.resource_manager.database_manager.DataManager.get_forest_kb_yields"], [40, "id3"]], "get_kb_yield_curves() (cbm_runner.resource_manager.database_manager.datamanager method)": [[40, "cbm_runner.resource_manager.database_manager.DataManager.get_kb_yield_curves"], [40, "id9"]], "fluxmanager (class in cbm_runner.resource_manager.flux_manager)": [[41, "cbm_runner.resource_manager.flux_manager.FluxManager"]], "_add_identifier() (cbm_runner.resource_manager.flux_manager.fluxmanager method)": [[41, "cbm_runner.resource_manager.flux_manager.FluxManager._add_identifier"]], "cbm_runner.resource_manager.flux_manager": [[41, "module-cbm_runner.resource_manager.flux_manager"]], "concatenated_fluxes_data() (cbm_runner.resource_manager.flux_manager.fluxmanager method)": [[41, "cbm_runner.resource_manager.flux_manager.FluxManager.concatenated_fluxes_data"]], "create_disturbance_fluxes() (cbm_runner.resource_manager.flux_manager.fluxmanager method)": [[41, "cbm_runner.resource_manager.flux_manager.FluxManager.create_disturbance_fluxes"]], "create_gross_growthag() (cbm_runner.resource_manager.flux_manager.fluxmanager method)": [[41, "cbm_runner.resource_manager.flux_manager.FluxManager.create_gross_growthAG"]], "create_gross_growthbg() (cbm_runner.resource_manager.flux_manager.fluxmanager method)": [[41, "cbm_runner.resource_manager.flux_manager.FluxManager.create_gross_growthBG"]], "create_process_fluxes() (cbm_runner.resource_manager.flux_manager.fluxmanager method)": [[41, "cbm_runner.resource_manager.flux_manager.FluxManager.create_process_fluxes"]], "create_total_litter() (cbm_runner.resource_manager.flux_manager.fluxmanager method)": [[41, "cbm_runner.resource_manager.flux_manager.FluxManager.create_total_litter"]], "filter_flux_data() (cbm_runner.resource_manager.flux_manager.fluxmanager method)": [[41, "cbm_runner.resource_manager.flux_manager.FluxManager.filter_flux_data"]], "flux_results_dataframes() (cbm_runner.resource_manager.flux_manager.fluxmanager method)": [[41, "cbm_runner.resource_manager.flux_manager.FluxManager.flux_results_dataframes"]], "scale_flux_data() (cbm_runner.resource_manager.flux_manager.fluxmanager method)": [[41, "cbm_runner.resource_manager.flux_manager.FluxManager.scale_flux_data"]], "geodatamanager (class in cbm_runner.resource_manager.geo_cbm_runner_data_manager)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager"]], "afforestation_baseline (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.afforestation_baseline"]], "afforestation_yield_name_dict (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.afforestation_yield_name_dict"]], "cbm_default_config (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.cbm_default_config"]], "cbm_runner.resource_manager.geo_cbm_runner_data_manager": [[42, "module-cbm_runner.resource_manager.geo_cbm_runner_data_manager"]], "classifiers (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.classifiers"]], "config_data (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.config_data"]], "disturbance_cols (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.disturbance_cols"]], "disturbances_config (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.disturbances_config"]], "forest_baseline_year (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.forest_baseline_year"]], "forest_type_keys (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.forest_type_keys"]], "gen_scenario_disturbance_dict() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.gen_scenario_disturbance_dict"]], "get_afforestation_yield_name_dict() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_afforestation_yield_name_dict"]], "get_baseline_disturbance_dict() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_baseline_disturbance_dict"]], "get_classifiers() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_classifiers"]], "get_config_data() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_config_data"]], "get_disturbance_cols() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_disturbance_cols"]], "get_disturbances_config() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_disturbances_config"]], "get_forest_baseline_year() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_forest_baseline_year"]], "get_forest_type_keys() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_forest_type_keys"]], "get_legacy_disturbance_dict() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_legacy_disturbance_dict"]], "get_mapping() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_mapping"]], "get_non_forest_dict() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_non_forest_dict"]], "get_non_forest_soils() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_non_forest_soils"]], "get_scenario_data() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_scenario_data"]], "get_scenario_disturbance_dict() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_scenario_disturbance_dict"]], "get_soils_dict() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_soils_dict"]], "get_species_name_dict() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_species_name_dict"]], "get_static_disturbance_cols() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_static_disturbance_cols"]], "get_transition_cols() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_transition_cols"]], "get_yield_baseline_dict() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_yield_baseline_dict"]], "get_yield_name_dict() (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager method)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.get_yield_name_dict"]], "mapping (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.mapping"]], "non_forest_dict (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.non_forest_dict"]], "non_forest_soils (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.non_forest_soils"]], "scenario_data (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.scenario_data"]], "scenario_disturbance_dict (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.scenario_disturbance_dict"]], "soils_dict (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.soils_dict"]], "species_name_dict (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.species_name_dict"]], "static_disturbance_cols (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.static_disturbance_cols"]], "transition_cols (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.transition_cols"]], "yield_baseline_dict (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.yield_baseline_dict"]], "yield_name_dict (cbm_runner.resource_manager.geo_cbm_runner_data_manager.geodatamanager attribute)": [[42, "cbm_runner.resource_manager.geo_cbm_runner_data_manager.GeoDataManager.yield_name_dict"]], "cbm_runner.resource_manager": [[43, "module-cbm_runner.resource_manager"]], "loader (class in cbm_runner.resource_manager.loader)": [[44, "cbm_runner.resource_manager.loader.Loader"]], "nir_forest_data_ha() (cbm_runner.resource_manager.loader.loader method)": [[44, "cbm_runner.resource_manager.loader.Loader.NIR_forest_data_ha"], [44, "id3"]], "afforestation_areas_kb() (cbm_runner.resource_manager.loader.loader method)": [[44, "cbm_runner.resource_manager.loader.Loader.afforestation_areas_KB"], [44, "id6"]], "afforestation_areas_nir() (cbm_runner.resource_manager.loader.loader method)": [[44, "cbm_runner.resource_manager.loader.Loader.afforestation_areas_NIR"], [44, "id5"]], "cbm_runner.resource_manager.loader": [[44, "module-cbm_runner.resource_manager.loader"]], "cso_species_breakdown() (cbm_runner.resource_manager.loader.loader method)": [[44, "cbm_runner.resource_manager.loader.Loader.cso_species_breakdown"], [44, "id4"]], "dataframes (cbm_runner.resource_manager.loader.loader attribute)": [[44, "cbm_runner.resource_manager.loader.Loader.dataframes"]], "disturbance_data() (cbm_runner.resource_manager.loader.loader method)": [[44, "cbm_runner.resource_manager.loader.Loader.disturbance_data"], [44, "id11"]], "disturbance_time() (cbm_runner.resource_manager.loader.loader method)": [[44, "cbm_runner.resource_manager.loader.Loader.disturbance_time"], [44, "id7"]], "disturbance_type() (cbm_runner.resource_manager.loader.loader method)": [[44, "cbm_runner.resource_manager.loader.Loader.disturbance_type"], [44, "id9"]], "forest_age_structure() (cbm_runner.resource_manager.loader.loader method)": [[44, "cbm_runner.resource_manager.loader.Loader.forest_age_structure"], [44, "id0"]], "forest_cbm_yields() (cbm_runner.resource_manager.loader.loader method)": [[44, "cbm_runner.resource_manager.loader.Loader.forest_cbm_yields"], [44, "id1"]], "forest_kb_yields() (cbm_runner.resource_manager.loader.loader method)": [[44, "cbm_runner.resource_manager.loader.Loader.forest_kb_yields"], [44, "id2"]], "harvest_areas_nir() (cbm_runner.resource_manager.loader.loader method)": [[44, "cbm_runner.resource_manager.loader.Loader.harvest_areas_NIR"], [44, "id10"]], "kb_yield_curves() (cbm_runner.resource_manager.loader.loader method)": [[44, "cbm_runner.resource_manager.loader.Loader.kb_yield_curves"], [44, "id8"]], "cbm_runner.resource_manager.parser": [[45, "module-cbm_runner.resource_manager.parser"]], "get_age_classifier() (in module cbm_runner.resource_manager.parser)": [[45, "cbm_runner.resource_manager.parser.get_age_classifier"]], "get_classifier_list() (in module cbm_runner.resource_manager.parser)": [[45, "cbm_runner.resource_manager.parser.get_classifier_list"]], "get_clearfell_baseline() (in module cbm_runner.resource_manager.parser)": [[45, "cbm_runner.resource_manager.parser.get_clearfell_baseline"]], "get_disturbance_type() (in module cbm_runner.resource_manager.parser)": [[45, "cbm_runner.resource_manager.parser.get_disturbance_type"]], "get_inventory_species() (in module cbm_runner.resource_manager.parser)": [[45, "cbm_runner.resource_manager.parser.get_inventory_species"]], "get_thinning_baseline() (in module cbm_runner.resource_manager.parser)": [[45, "cbm_runner.resource_manager.parser.get_thinning_baseline"]], "get_yield_class_proportions() (in module cbm_runner.resource_manager.parser)": [[45, "cbm_runner.resource_manager.parser.get_yield_class_proportions"]], "paths (class in cbm_runner.resource_manager.paths)": [[46, "cbm_runner.resource_manager.paths.Paths"]], "cbm_runner.resource_manager.paths": [[46, "module-cbm_runner.resource_manager.paths"]], "external_path (cbm_runner.resource_manager.paths.paths attribute)": [[46, "cbm_runner.resource_manager.paths.Paths.external_path"]], "gen_baseline (cbm_runner.resource_manager.paths.paths attribute)": [[46, "cbm_runner.resource_manager.paths.Paths.gen_baseline"]], "gen_validation (cbm_runner.resource_manager.paths.paths attribute)": [[46, "cbm_runner.resource_manager.paths.Paths.gen_validation"]], "get_baseline_conf_path() (cbm_runner.resource_manager.paths.paths method)": [[46, "cbm_runner.resource_manager.paths.Paths.get_baseline_conf_path"], [46, "id4"]], "get_generated_input_data_path() (cbm_runner.resource_manager.paths.paths method)": [[46, "cbm_runner.resource_manager.paths.Paths.get_generated_input_data_path"], [46, "id3"]], "get_validation_path() (cbm_runner.resource_manager.paths.paths method)": [[46, "cbm_runner.resource_manager.paths.Paths.get_validation_path"], [46, "id5"]], "make_external_dirs() (cbm_runner.resource_manager.paths.paths method)": [[46, "cbm_runner.resource_manager.paths.Paths.make_external_dirs"], [46, "id2"]], "setup_geo_runner_paths() (cbm_runner.resource_manager.paths.paths method)": [[46, "cbm_runner.resource_manager.paths.Paths.setup_geo_runner_paths"], [46, "id1"]], "setup_runner_paths() (cbm_runner.resource_manager.paths.paths method)": [[46, "cbm_runner.resource_manager.paths.Paths.setup_runner_paths"], [46, "id0"]], "scenariodatafetcher (class in cbm_runner.resource_manager.scenario_data_fetcher)": [[47, "cbm_runner.resource_manager.scenario_data_fetcher.ScenarioDataFetcher"]], "__init__() (cbm_runner.resource_manager.scenario_data_fetcher.scenariodatafetcher method)": [[47, "cbm_runner.resource_manager.scenario_data_fetcher.ScenarioDataFetcher.__init__"]], "cbm_runner.resource_manager.scenario_data_fetcher": [[47, "module-cbm_runner.resource_manager.scenario_data_fetcher"]], "get_afforest_scenario_index() (cbm_runner.resource_manager.scenario_data_fetcher.scenariodatafetcher method)": [[47, "cbm_runner.resource_manager.scenario_data_fetcher.ScenarioDataFetcher.get_afforest_scenario_index"], [47, "id4"]], "get_afforestation_end_year() (cbm_runner.resource_manager.scenario_data_fetcher.scenariodatafetcher method)": [[47, "cbm_runner.resource_manager.scenario_data_fetcher.ScenarioDataFetcher.get_afforestation_end_year"], [47, "id1"]], "get_catchment_name() (cbm_runner.resource_manager.scenario_data_fetcher.scenariodatafetcher method)": [[47, "cbm_runner.resource_manager.scenario_data_fetcher.ScenarioDataFetcher.get_catchment_name"], [47, "id2"]], "get_column_index() (cbm_runner.resource_manager.scenario_data_fetcher.scenariodatafetcher method)": [[47, "cbm_runner.resource_manager.scenario_data_fetcher.ScenarioDataFetcher.get_column_index"], [47, "id0"]], "get_scenario_list() (cbm_runner.resource_manager.scenario_data_fetcher.scenariodatafetcher method)": [[47, "cbm_runner.resource_manager.scenario_data_fetcher.ScenarioDataFetcher.get_scenario_list"], [47, "id3"]], "index (cbm_runner.runner.runner attribute)": [[48, "cbm_runner.runner.Runner.INDEX"]], "runner (class in cbm_runner.runner)": [[48, "cbm_runner.runner.Runner"]], "afforestation_scenarios_structure() (cbm_runner.runner.runner method)": [[48, "cbm_runner.runner.Runner.afforestation_scenarios_structure"], [48, "id4"]], "baseline_conf_path (cbm_runner.runner.runner attribute)": [[48, "cbm_runner.runner.Runner.baseline_conf_path"]], "cbm_aggregate_scenario() (cbm_runner.runner.runner method)": [[48, "cbm_runner.runner.Runner.cbm_aggregate_scenario"], [48, "id6"]], "cbm_baseline_forest() (cbm_runner.runner.runner method)": [[48, "cbm_runner.runner.Runner.cbm_baseline_forest"], [48, "id5"]], "cbm_data_class (cbm_runner.runner.runner attribute)": [[48, "cbm_runner.runner.Runner.cbm_data_class"]], "cbm_runner.runner": [[48, "module-cbm_runner.runner"]], "cbm_scenario_fluxes() (cbm_runner.runner.runner method)": [[48, "cbm_runner.runner.Runner.cbm_scenario_fluxes"], [48, "id8"]], "data_manager_class (cbm_runner.runner.runner attribute)": [[48, "cbm_runner.runner.Runner.data_manager_class"]], "forest_end_year (cbm_runner.runner.runner attribute)": [[48, "cbm_runner.runner.Runner.forest_end_year"]], "gen_validation (cbm_runner.runner.runner attribute)": [[48, "cbm_runner.runner.Runner.gen_validation"]], "generate_base_input_data() (cbm_runner.runner.runner method)": [[48, "cbm_runner.runner.Runner.generate_base_input_data"], [48, "id0"]], "generate_input_data() (cbm_runner.runner.runner method)": [[48, "cbm_runner.runner.Runner.generate_input_data"], [48, "id1"]], "libcbm_scenario_fluxes() (cbm_runner.runner.runner method)": [[48, "cbm_runner.runner.Runner.libcbm_scenario_fluxes"], [48, "id7"]], "path (cbm_runner.runner.runner attribute)": [[48, "cbm_runner.runner.Runner.path"]], "paths_class (cbm_runner.runner.runner attribute)": [[48, "cbm_runner.runner.Runner.paths_class"]], "pools (cbm_runner.runner.runner attribute)": [[48, "cbm_runner.runner.Runner.pools"]], "run_aggregate_scenarios() (cbm_runner.runner.runner method)": [[48, "cbm_runner.runner.Runner.run_aggregate_scenarios"], [48, "id2"]], "run_flux_scenarios() (cbm_runner.runner.runner method)": [[48, "cbm_runner.runner.Runner.run_flux_scenarios"], [48, "id3"]], "validation_path (cbm_runner.runner.runner attribute)": [[48, "cbm_runner.runner.Runner.validation_path"]], "transition (class in cbm_runner.transition)": [[49, "cbm_runner.transition.Transition"]], "baseline_forest_classifiers (cbm_runner.transition.transition attribute)": [[49, "cbm_runner.transition.Transition.baseline_forest_classifiers"]], "cbm_runner.transition": [[49, "module-cbm_runner.transition"]], "data_manager_class (cbm_runner.transition.transition attribute)": [[49, "cbm_runner.transition.Transition.data_manager_class"]], "make_transition_rules_structure() (cbm_runner.transition.transition method)": [[49, "cbm_runner.transition.Transition.make_transition_rules_structure"], [49, "id0"]], "scenario_forest_classifiers (cbm_runner.transition.transition attribute)": [[49, "cbm_runner.transition.Transition.scenario_forest_classifiers"]], "yieldcurves (class in cbm_runner.yield_curves)": [[50, "cbm_runner.yield_curves.YieldCurves"]], "cbm_runner.yield_curves": [[50, "module-cbm_runner.yield_curves"]], "yield_table_generater_method1() (cbm_runner.yield_curves.yieldcurves class method)": [[50, "id0"]], "yield_table_generater_method1() (cbm_runner.yield_curves.yieldcurves method)": [[50, "cbm_runner.yield_curves.YieldCurves.yield_table_generater_method1"]], "yield_table_generater_method2() (cbm_runner.yield_curves.yieldcurves class method)": [[50, "id1"]], "yield_table_generater_method2() (cbm_runner.yield_curves.yieldcurves method)": [[50, "cbm_runner.yield_curves.YieldCurves.yield_table_generater_method2"]], "yield_table_generater_method3() (cbm_runner.yield_curves.yieldcurves class method)": [[50, "id2"]], "yield_table_generater_method3() (cbm_runner.yield_curves.yieldcurves method)": [[50, "cbm_runner.yield_curves.YieldCurves.yield_table_generater_method3"]]}})